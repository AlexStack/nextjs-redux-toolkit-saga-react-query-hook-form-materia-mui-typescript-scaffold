{"type_of":"article","id":1238829,"title":"How to Make JavaScript Websites SEO-Friendly (SEO for Client-side Rendering)","description":"Let's walk through how you can optimize your JavaScript site and make it search-friendly.  There are...","readable_publish_date":"Nov 1","slug":"how-to-make-javascript-websites-seo-friendly-seo-for-client-side-rendering-2p05","path":"/olusemola/how-to-make-javascript-websites-seo-friendly-seo-for-client-side-rendering-2p05","url":"https://dev.to/olusemola/how-to-make-javascript-websites-seo-friendly-seo-for-client-side-rendering-2p05","comments_count":0,"public_reactions_count":1,"collection_id":null,"published_timestamp":"2022-11-01T15:28:24Z","positive_reactions_count":1,"cover_image":null,"social_image":"https://dev.to/social_previews/article/1238829.png","canonical_url":"https://dev.to/olusemola/how-to-make-javascript-websites-seo-friendly-seo-for-client-side-rendering-2p05","created_at":"2022-11-01T15:28:24Z","edited_at":"2022-11-01T15:30:29Z","crossposted_at":null,"published_at":"2022-11-01T15:28:24Z","last_comment_at":"2022-11-01T15:28:24Z","reading_time_minutes":4,"tag_list":"seo, javascript","tags":["seo","javascript"],"body_html":"<p>Let's walk through how you can optimize your JavaScript site and make it search-friendly.</p>\n\n<p>There are some slight differences from the \"normal\" SEO which I'm going to show you.</p>\n\n<h2>\n  <a name=\"allow-crawlers\" href=\"#allow-crawlers\">\n  </a>\n  Allow Crawlers\n</h2>\n\n<p>Allow Googlebot to access and download resources on your site so that they can properly render your content and index. Your robots.txt file should look this:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>User-Agent: Googlebot\n\nAllow: .js\n\nAllow: .css\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Use ‘History’ Mode Instead Of The Traditional ‘Hash (Fragments)’ Mode For URLs<br>\nTo allow Googlebot to find links on your pages use the History API. Googlebot looks for links on your page and only considers the links in href of the HTML attribute.</p>\n\n<p>Anything after #/ is ignored and Googlebot won't crawl it. So avoid the use of fragments to load different page content (most especially single-page applications) and only use the History API.</p>\n<h2>\n  <a name=\"use-meaningful-http-status-codes\" href=\"#use-meaningful-http-status-codes\">\n  </a>\n  Use meaningful HTTP status codes\n</h2>\n\n<p>One thing Googlebot uses to detect if something went wrong during crawling is the HTTP status code.</p>\n\n<p>Use HTTP status code to tell Googlebot which page it should crawl and index or which ones it shouldn't.</p>\n\n<p>You can use 401 (Unauthorized status code) for pages behind a login for example, and you can tell Googlebot if a page has moved to a new URL so as to update the index when crawling again.</p>\n\n<p>Most SEOs used the 301/302 redirect. But redirect works differently in JavaScript being a client-side. 301/302 are server-side redirects and so when adding redirects, the recommended function is window.location.replace().</p>\n\n<p>An example of what a JavaScript redirect to my homepage looks like:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>&lt;html&gt;\n\n &lt;head&gt;\n\n  &lt;script&gt;\n\n    window.location.replace(\"https://www.semoladigital.com/\");\n\n  &lt;/script&gt;\n\n &lt;/head&gt;\n\n&lt;/html&gt;\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>When set up this way, it'd send visitors to <a href=\"https://www.semoladigital.com/\">https://www.semoladigital.com/</a> upon page load.</p>\n\n<p>Although many would advise you to use…</p>\n\n<p><code>Window.location.href.</code></p>\n\n<p>But The problem with this implementation is that - the current URL is added to the visitor's navigation history. This can cause the visitor to get stuck in back-button loops. </p>\n\n<p>Whereas, the <code>window.location.replace()</code> would not. </p>\n\n<p>Avoid using the window.location.href when you want to redirect visitors immediately to another URL.</p>\n\n<p>This redirect method works well for JavaScript, it's supported by Google and passes PageRank.</p>\n\n<p>Webmaster Trends Analyst John Mueller responded in a #AskGoogleWebmasters to whether Googlebot can detect client-side JavaScript redirects. And Mueller said, </p>\n\n<p>“We support JavaScript redirects of different types and follow them similar to how we’d follow server-side redirects\"</p>\n\n<p>Client-side JS Redirects: Can Googlebot Detect Them? #AskGoogleWebmasters</p>\n\n<p><iframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/_SDIN0KiQp4?start=1\" allowfullscreen loading=\"lazy\">\n</iframe>\n</p>\n\n<h2>\n  <a name=\"use-meta-robots-tags-correctly\" href=\"#use-meta-robots-tags-correctly\">\n  </a>\n  Use meta robots tags correctly\n</h2>\n\n<p>Sometimes you might have some pages (or content) that you want to prevent search engines from indexing.</p>\n\n<p>For pages like thin content or upcoming promotions, you can use the meta robot tag to prevent Googlebot from indexing or following links on the page.</p>\n\n<p>For example, the code below on a page will block Googlebot from indexing the page:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>&lt;!-- Googlebot won't index this page or follow links on this page --&gt;\n\n&lt;meta name=\"robots\" content=\"noindex, nofollow\"&gt;\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h2>\n  <a name=\"onpage-seo\" href=\"#onpage-seo\">\n  </a>\n  On-Page SEO\n</h2>\n\n<p>Do on-page optimization as you would for a non-javaScript site. Keep to the optimization guidelines for content, title, meta description, image alt attribute, and so on…</p>\n\n<p>For more on <a href=\"https://semoladigital.com/on-page-optimization-how-to-optimize-and-increase-website-traffic/\">on-page SEO optimization</a> follow the link.</p>\n\n<h2>\n  <a name=\"duplicate-content\" href=\"#duplicate-content\">\n  </a>\n  Duplicate content\n</h2>\n\n<p>Handle duplicate content with canonical tags as you would for every other type of website.</p>\n\n<p>Canonical tags allow you to choose only one version and hint search engines to index that version.</p>\n\n<h2>\n  <a name=\"seo-plugin-type-options\" href=\"#seo-plugin-type-options\">\n  </a>\n  SEO “plugin” type options\n</h2>\n\n<p>In JavaScript apps and websites, plugins are referred to as modules. Modules are used by JavaScript frameworks and perform the same functions as the plugins you're used to in WordPress.</p>\n\n<p>A <strong>React Helmet</strong> allows you to set the popular tags that you would need to do JavaScript SEO.</p>\n\n<h2>\n  <a name=\"use-structured-data\" href=\"#use-structured-data\">\n  </a>\n  Use structured data\n</h2>\n\n<p>Implementing structured data on your JavaScript site is as easy as every other type of site. You can generate the required JSON-LD and then, inject it into the page using JavaScript. Just be sure that you carry out testings using Google structured data testing tool to prevent unnecessary issues.</p>\n\n<h2>\n  <a name=\"sitemap-generation\" href=\"#sitemap-generation\">\n  </a>\n  Sitemap Generation\n</h2>\n\n<p>JavaScript frameworks each has their own module that can easily be used to generate a sitemap. </p>\n\n<p>For example, </p>\n\n<p>The following code will generate and save your site sitemap:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>sitemap-builder.js\n\nrequire('babel-register');\n\nconst router = require('./router').default;\n\nconst Sitemap = require('../').default;\n\n(\n\n    new Sitemap(router)\n\n        .build('http://my-site.ru')\n\n        .save('./sitemap.xml')\n\n);\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Whatever framework you use, typing the framework +sitemap on Google will return a link to where and how you can implement the sitemap on your site.</p>\n\n<h2>\n  <a name=\"error-pages\" href=\"#error-pages\">\n  </a>\n  Error Pages\n</h2>\n\n<p>JavaScript sites can't throw a 404 error because it is client-side based and not server-side. To handle error pages, use JavaScript redirects to pages with 404 status code.</p>\n\n<p>You can also add a noindex tag to pages that are failing along with something like: \"404 page Not Found\" since a 404 Not Found page will return a  status code of 200, which is what you want.</p>\n\n<h2>\n  <a name=\"lazy-loadings\" href=\"#lazy-loadings\">\n  </a>\n  Lazy Loadings\n</h2>\n\n<p>Working with <a href=\"https://semoladigital.com/javascript-seo-simplified-everything-you-need-to-know/\">JavaScript SEO</a> is not different from working with WordPress SEO. In the sense that, while you've plugins to do virtually all you want to achieve on your site, there are also modules to add different functionality to the JavaScript site. Lazy and Suspense are the two most popular modules to help solve this type of issue. A good practice to improve your site's overall SEO is to lazy load images so that they only load when users are about to view them.</p>\n\n<h2>\n  <a name=\"conclusion\" href=\"#conclusion\">\n  </a>\n  Conclusion\n</h2>\n\n<p>JavaScript is a ubiquitous and powerful part of web applications that don't seem to be leaving the webspace anytime soon. Therefore, an understanding of how Googlebot and other crawlers read, crawl, and render JavaScript applications is essential to optimizing your Javascript web app to rank top of search engines.</p>\n\n<p>Need <a href=\"https://semoladigital.com\">SEO Expert</a> for your next project, follow that link for a free consultation.</p>\n\n","body_markdown":"Let's walk through how you can optimize your JavaScript site and make it search-friendly.\n\nThere are some slight differences from the \"normal\" SEO which I'm going to show you.\n\n## Allow Crawlers\nAllow Googlebot to access and download resources on your site so that they can properly render your content and index. Your robots.txt file should look this:\n\n```\nUser-Agent: Googlebot\n\nAllow: .js\n\nAllow: .css\n```\n\nUse ‘History’ Mode Instead Of The Traditional ‘Hash (Fragments)’ Mode For URLs\nTo allow Googlebot to find links on your pages use the History API. Googlebot looks for links on your page and only considers the links in href of the HTML attribute.\n\nAnything after #/ is ignored and Googlebot won't crawl it. So avoid the use of fragments to load different page content (most especially single-page applications) and only use the History API.\n\n## Use meaningful HTTP status codes\nOne thing Googlebot uses to detect if something went wrong during crawling is the HTTP status code.\n\nUse HTTP status code to tell Googlebot which page it should crawl and index or which ones it shouldn't.\n\nYou can use 401 (Unauthorized status code) for pages behind a login for example, and you can tell Googlebot if a page has moved to a new URL so as to update the index when crawling again.\n\nMost SEOs used the 301/302 redirect. But redirect works differently in JavaScript being a client-side. 301/302 are server-side redirects and so when adding redirects, the recommended function is window.location.replace().\n\nAn example of what a JavaScript redirect to my homepage looks like:\n\n```\n<html>\n\n <head>\n\n  <script>\n\n    window.location.replace(\"https://www.semoladigital.com/\");\n\n  </script>\n\n </head>\n\n</html>\n```\n\nWhen set up this way, it'd send visitors to https://www.semoladigital.com/ upon page load.\n\nAlthough many would advise you to use…\n\n`Window.location.href.`\n\nBut The problem with this implementation is that - the current URL is added to the visitor's navigation history. This can cause the visitor to get stuck in back-button loops. \n\nWhereas, the `window.location.replace()` would not. \n\nAvoid using the window.location.href when you want to redirect visitors immediately to another URL.\n\nThis redirect method works well for JavaScript, it's supported by Google and passes PageRank.\n\nWebmaster Trends Analyst John Mueller responded in a #AskGoogleWebmasters to whether Googlebot can detect client-side JavaScript redirects. And Mueller said, \n\n“We support JavaScript redirects of different types and follow them similar to how we’d follow server-side redirects\"\n\nClient-side JS Redirects: Can Googlebot Detect Them? #AskGoogleWebmasters\n\n{% embed https://www.youtube.com/watch?v=_SDIN0KiQp4&t=1s %}\n\n## Use meta robots tags correctly\nSometimes you might have some pages (or content) that you want to prevent search engines from indexing.\n\nFor pages like thin content or upcoming promotions, you can use the meta robot tag to prevent Googlebot from indexing or following links on the page.\n\nFor example, the code below on a page will block Googlebot from indexing the page:\n\n```\n<!-- Googlebot won't index this page or follow links on this page -->\n\n<meta name=\"robots\" content=\"noindex, nofollow\">\n```\n\n## On-Page SEO\nDo on-page optimization as you would for a non-javaScript site. Keep to the optimization guidelines for content, title, meta description, image alt attribute, and so on…\n\nFor more on [on-page SEO optimization](https://semoladigital.com/on-page-optimization-how-to-optimize-and-increase-website-traffic/) follow the link.\n\n## Duplicate content\nHandle duplicate content with canonical tags as you would for every other type of website.\n\nCanonical tags allow you to choose only one version and hint search engines to index that version.\n\n## SEO “plugin” type options\nIn JavaScript apps and websites, plugins are referred to as modules. Modules are used by JavaScript frameworks and perform the same functions as the plugins you're used to in WordPress.\n\nA **React Helmet** allows you to set the popular tags that you would need to do JavaScript SEO.\n\n## Use structured data\nImplementing structured data on your JavaScript site is as easy as every other type of site. You can generate the required JSON-LD and then, inject it into the page using JavaScript. Just be sure that you carry out testings using Google structured data testing tool to prevent unnecessary issues.\n\n## Sitemap Generation\nJavaScript frameworks each has their own module that can easily be used to generate a sitemap. \n\nFor example, \n\nThe following code will generate and save your site sitemap:\n\n```\nsitemap-builder.js\n\nrequire('babel-register');\n\nconst router = require('./router').default;\n\nconst Sitemap = require('../').default;\n\n(\n\n    new Sitemap(router)\n\n        .build('http://my-site.ru')\n\n        .save('./sitemap.xml')\n\n);\n```\n\nWhatever framework you use, typing the framework +sitemap on Google will return a link to where and how you can implement the sitemap on your site.\n\n## Error Pages\nJavaScript sites can't throw a 404 error because it is client-side based and not server-side. To handle error pages, use JavaScript redirects to pages with 404 status code.\n\nYou can also add a noindex tag to pages that are failing along with something like: \"404 page Not Found\" since a 404 Not Found page will return a  status code of 200, which is what you want.\n\n## Lazy Loadings\nWorking with [JavaScript SEO](https://semoladigital.com/javascript-seo-simplified-everything-you-need-to-know/) is not different from working with WordPress SEO. In the sense that, while you've plugins to do virtually all you want to achieve on your site, there are also modules to add different functionality to the JavaScript site. Lazy and Suspense are the two most popular modules to help solve this type of issue. A good practice to improve your site's overall SEO is to lazy load images so that they only load when users are about to view them.\n\n## Conclusion\nJavaScript is a ubiquitous and powerful part of web applications that don't seem to be leaving the webspace anytime soon. Therefore, an understanding of how Googlebot and other crawlers read, crawl, and render JavaScript applications is essential to optimizing your Javascript web app to rank top of search engines.\n\nNeed [SEO Expert](https://semoladigital.com) for your next project, follow that link for a free consultation.","user":{"name":"Oladoyin Falana","username":"olusemola","twitter_username":null,"github_username":"Olusemola","user_id":461676,"website_url":"https://semoladigital.com/","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--RWmTDxdp--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/461676/4a247f64-261c-4f6a-a120-79c23b3ddbfd.jpeg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--AyyoTo_Q--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/461676/4a247f64-261c-4f6a-a120-79c23b3ddbfd.jpeg"}}