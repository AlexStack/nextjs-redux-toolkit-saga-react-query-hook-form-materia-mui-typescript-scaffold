{"type_of":"article","id":1246162,"title":"48-Nodejs Course 2023: Database Models: Custom Data Casting: Encrypted Password","description":"Custom Casts   Now let's talk about custom casts, what if we want to cast a value to a...","readable_publish_date":"Nov 7","slug":"48-nodejs-course-2023-database-models-custom-data-casting-encrypted-password-2la3","path":"/hassanzohdy/48-nodejs-course-2023-database-models-custom-data-casting-encrypted-password-2la3","url":"https://dev.to/hassanzohdy/48-nodejs-course-2023-database-models-custom-data-casting-encrypted-password-2la3","comments_count":0,"public_reactions_count":0,"collection_id":20274,"published_timestamp":"2022-11-07T10:46:36Z","positive_reactions_count":0,"cover_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--SmgJ7hXE--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1t7u2329gvy8f74whrak.png","social_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--X0ElzLoM--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1t7u2329gvy8f74whrak.png","canonical_url":"https://dev.to/hassanzohdy/48-nodejs-course-2023-database-models-custom-data-casting-encrypted-password-2la3","created_at":"2022-11-07T06:43:52Z","edited_at":null,"crossposted_at":null,"published_at":"2022-11-07T10:46:36Z","last_comment_at":"2022-11-07T10:46:36Z","reading_time_minutes":3,"tag_list":"node, typescript, mongodb, fastify","tags":["node","typescript","mongodb","fastify"],"body_html":"<h2>\n  <a name=\"custom-casts\" href=\"#custom-casts\">\n  </a>\n  Custom Casts\n</h2>\n\n<p>Now let's talk about custom casts, what if we want to cast a value to a custom type, for example, we want to cast the password value.</p>\n\n<p>Let's make a folder called <code>casts</code> in the <code>src/core/database/casts</code> folder and create <code>cast-password.ts</code> file.</p>\n\n<p>We need to generate a make a password generated and to be solid, we will use <a href=\"https://github.com/hassanzohdy/mongez-password\">Password Hash Generator And Verifier</a> to achieve this easily.</p>\n\n<p>Let's install it<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code>yarn add @mongez/password\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Now let's create the <code>cast-password.ts</code> file<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"c1\">// src/core/database/casts/cast-password.ts</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">hash</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@mongez/password</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"cm\">/**\n * Cast password\n */</span>\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span> <span class=\"nx\">castPassword</span><span class=\"p\">(</span>\n  <span class=\"nx\">columnName</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">,</span>\n  <span class=\"nx\">value</span><span class=\"p\">:</span> <span class=\"kr\">any</span>\n<span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nx\">hash</span><span class=\"p\">(</span><span class=\"nx\">value</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">);</span> <span class=\"c1\">// second argument is the salt</span>\n<span class=\"p\">}</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Now let's update the <code>User</code> model to use this cast<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"c1\">// src/app/users/models/user.ts</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Model</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">core/database</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">castPassword</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">core/database/casts/cast-password</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Casts</span><span class=\"p\">,</span> <span class=\"nx\">Document</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">core/database/model/types</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"kd\">class</span> <span class=\"nx\">User</span> <span class=\"kd\">extends</span> <span class=\"nx\">Model</span> <span class=\"p\">{</span>\n  <span class=\"cm\">/**\n   * Collection name\n   */</span>\n  <span class=\"k\">public</span> <span class=\"k\">static</span> <span class=\"nx\">collectionName</span> <span class=\"o\">=</span> <span class=\"dl\">\"</span><span class=\"s2\">users</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n  <span class=\"cm\">/**\n   * {@inheritDoc}\n   */</span>\n  <span class=\"k\">public</span> <span class=\"nx\">defaultValue</span><span class=\"p\">:</span> <span class=\"nx\">Document</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"na\">isActive</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"na\">isEmailVerified</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n    <span class=\"na\">isPhoneVerified</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n  <span class=\"p\">};</span>\n\n  <span class=\"k\">protected</span> <span class=\"nx\">casts</span><span class=\"p\">:</span> <span class=\"nx\">Casts</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"na\">isActive</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">boolean</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"na\">isPhoneVerified</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">boolean</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"na\">joinDate</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">date</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"na\">password</span><span class=\"p\">:</span> <span class=\"nx\">castPassword</span><span class=\"p\">,</span>\n  <span class=\"p\">};</span>\n<span class=\"p\">}</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Now let's try to create a new user<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"c1\">// src/app/users/routes.ts</span>\n<span class=\"k\">import</span> <span class=\"nx\">User</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">./models/user</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">user</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">User</span><span class=\"p\">({</span>\n  <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">Hassan</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"na\">password</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">123456</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">await</span> <span class=\"nx\">user</span><span class=\"p\">.</span><span class=\"nx\">save</span><span class=\"p\">();</span>\n\n<span class=\"nx\">consol</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">user</span><span class=\"p\">.</span><span class=\"nx\">data</span><span class=\"p\">);</span> <span class=\"c1\">// { name: 'Hassan', password: '$2b$23$...' }</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>And that's it!</p>\n\n<h2>\n  <a name=\"conclusion\" href=\"#conclusion\">\n  </a>\n  🎨 Conclusion\n</h2>\n\n<p>In this lesson, we learned how to create custom casts, and we created a custom cast for the password value.</p>\n\n<h2>\n  <a name=\"project-repository\" href=\"#project-repository\">\n  </a>\n  🚀 Project Repository\n</h2>\n\n<p>You can find the latest updates of this project on <a href=\"https://github.com/hassanzohdy/nodejs-2023\">Github</a></p>\n\n<h2>\n  <a name=\"join-our-community\" href=\"#join-our-community\">\n  </a>\n  😍 Join our community\n</h2>\n\n<p>Join our community on <a href=\"https://discord.gg/pb2vmdfhGf\">Discord</a> to get help and support (Node Js 2023 Channel).</p>\n\n<h2>\n  <a name=\"video-course-arabic-voice\" href=\"#video-course-arabic-voice\">\n  </a>\n  🎞️ Video Course (Arabic Voice)\n</h2>\n\n<p>If you want to learn this course in video format, you can find it on <a href=\"https://www.youtube.com/playlist?list=PLGO8ntvxgiZMJc7RN2lIq9WmMOlWZGzmz\">Youtube</a>, the course is in Arabic language.</p>\n\n<h2>\n  <a name=\"bonus-content\" href=\"#bonus-content\">\n  </a>\n  💰 Bonus Content 💰\n</h2>\n\n<p>You may have a look at these articles, it will definitely boost your knowledge and productivity.</p>\n\n<p>General Topics</p>\n\n<ul>\n<li><a href=\"https://dev.to/hassanzohdy/event-driven-architecture-the-best-paradigm-that-i-love-to-work-with-in-javascript-and-node-js-1gnk\">Event Driven Architecture: A Practical Guide in Javascript</a></li>\n<li><a href=\"https://dev.to/hassanzohdy/best-practices-for-case-styles-camel-pascal-snake-and-kebab-case-in-node-and-javascript-55oi\">Best Practices For Case Styles: Camel, Pascal, Snake, and Kebab Case In Node And Javascript</a></li>\n<li><a href=\"https://dev.to/hassanzohdy/after-6-years-of-practicing-mongodb-here-are-my-thoughts-on-mongodb-vs-mysql-574b\">After 6 years of practicing MongoDB, Here are my thoughts on MongoDB vs MySQL\n</a></li>\n</ul>\n\n<p>Packages &amp; Libraries</p>\n\n<ul>\n<li><a href=\"https://dev.to/hassanzohdy/collections-your-ultimate-javascript-array-handler-3o15\">Collections: Your ultimate Javascript Arrays Manager</a></li>\n<li><a href=\"https://dev.to/hassanzohdy/supportive-is-an-elegant-utility-to-check-types-of-values-in-javascript-1b3e\">Supportive Is: an elegant utility to check types of values in JavaScript</a></li>\n<li><a href=\"https://dev.to/hassanzohdy/mongez-localization-the-simplest-way-to-translate-your-website-regardless-your-favorite-framework-4gi3\">Localization: An agnostic i18n package to manage localization in your project</a></li>\n</ul>\n\n<p>React Js Packages</p>\n\n<ul>\n<li><a href=\"https://dev.to/hassanzohdy/usefetcher-the-easiest-way-to-fetch-data-in-react-45o9\">useFetcher: easiest way to fetch data in React Js</a></li>\n</ul>\n\n<p>Courses (Articles)</p>\n\n<ul>\n<li><a href=\"https://dev.to/hassanzohdy/lets-create-a-file-manager-from-scratch-with-react-and-typescript-chapter-i-a-good-way-to-expand-your-experience-5g4k\">React Js: Let\"s Create File Manager With React Js and Node Js</a></li>\n</ul>\n\n","body_markdown":"---\ntitle: 48-Nodejs Course 2023: Database Models: Custom Data Casting: Encrypted Password\npublished: true\ndescription: \nseries: Nodejs Course 2023\ntags: nodejs, typescript, mongodb, fastify\ncover_image: https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1t7u2329gvy8f74whrak.png\n# Use a ratio of 100:42 for best results.\n---\n\n## Custom Casts\n\nNow let's talk about custom casts, what if we want to cast a value to a custom type, for example, we want to cast the password value.\n\nLet's make a folder called `casts` in the `src/core/database/casts` folder and create `cast-password.ts` file.\n\nWe need to generate a make a password generated and to be solid, we will use [Password Hash Generator And Verifier](https://github.com/hassanzohdy/mongez-password) to achieve this easily.\n\nLet's install it\n\n```bash\nyarn add @mongez/password\n```\n\nNow let's create the `cast-password.ts` file\n\n```ts\n// src/core/database/casts/cast-password.ts\nimport { hash } from '@mongez/password';\n\n/**\n * Cast password\n */\nexport default function castPassword(\n  columnName: string,\n  value: any\n) {\n  return hash(value, 15); // second argument is the salt\n}\n```\n\nNow let's update the `User` model to use this cast\n\n```ts\n// src/app/users/models/user.ts\nimport { Model } from \"core/database\";\nimport castPassword from \"core/database/casts/cast-password\";\nimport { Casts, Document } from \"core/database/model/types\";\n\nexport default class User extends Model {\n  /**\n   * Collection name\n   */\n  public static collectionName = \"users\";\n\n  /**\n   * {@inheritDoc}\n   */\n  public defaultValue: Document = {\n    isActive: true,\n    isEmailVerified: false,\n    isPhoneVerified: false,\n  };\n\n  protected casts: Casts = {\n    isActive: \"boolean\",\n    isPhoneVerified: \"boolean\",\n    joinDate: \"date\",\n    password: castPassword,\n  };\n}\n```\n\nNow let's try to create a new user\n\n```ts\n// src/app/users/routes.ts\nimport User from './models/user';\n\nconst user = new User({\n  name: 'Hassan',\n  password: '123456',\n});\n\nawait user.save();\n\nconsol.log(user.data); // { name: 'Hassan', password: '$2b$23$...' }\n```\n\nAnd that's it!\n\n## 🎨 Conclusion\n\nIn this lesson, we learned how to create custom casts, and we created a custom cast for the password value.\n\n## 🚀 Project Repository\n\nYou can find the latest updates of this project on [Github](https://github.com/hassanzohdy/nodejs-2023)\n\n## 😍 Join our community\n\nJoin our community on [Discord](https://discord.gg/pb2vmdfhGf) to get help and support (Node Js 2023 Channel).\n\n## 🎞️ Video Course (Arabic Voice)\n\nIf you want to learn this course in video format, you can find it on [Youtube](https://www.youtube.com/playlist?list=PLGO8ntvxgiZMJc7RN2lIq9WmMOlWZGzmz), the course is in Arabic language.\n\n## 💰 Bonus Content 💰\n\nYou may have a look at these articles, it will definitely boost your knowledge and productivity.\n\nGeneral Topics\n\n- [Event Driven Architecture: A Practical Guide in Javascript](https://dev.to/hassanzohdy/event-driven-architecture-the-best-paradigm-that-i-love-to-work-with-in-javascript-and-node-js-1gnk)\n- [Best Practices For Case Styles: Camel, Pascal, Snake, and Kebab Case In Node And Javascript](https://dev.to/hassanzohdy/best-practices-for-case-styles-camel-pascal-snake-and-kebab-case-in-node-and-javascript-55oi)\n- [After 6 years of practicing MongoDB, Here are my thoughts on MongoDB vs MySQL\n](https://dev.to/hassanzohdy/after-6-years-of-practicing-mongodb-here-are-my-thoughts-on-mongodb-vs-mysql-574b)\n\nPackages & Libraries\n\n- [Collections: Your ultimate Javascript Arrays Manager](https://dev.to/hassanzohdy/collections-your-ultimate-javascript-array-handler-3o15)\n- [Supportive Is: an elegant utility to check types of values in JavaScript](https://dev.to/hassanzohdy/supportive-is-an-elegant-utility-to-check-types-of-values-in-javascript-1b3e)\n- [Localization: An agnostic i18n package to manage localization in your project](https://dev.to/hassanzohdy/mongez-localization-the-simplest-way-to-translate-your-website-regardless-your-favorite-framework-4gi3)\n\n React Js Packages\n\n- [useFetcher: easiest way to fetch data in React Js](https://dev.to/hassanzohdy/usefetcher-the-easiest-way-to-fetch-data-in-react-45o9)\n\nCourses (Articles)\n\n- [React Js: Let\"s Create File Manager With React Js and Node Js](https://dev.to/hassanzohdy/lets-create-a-file-manager-from-scratch-with-react-and-typescript-chapter-i-a-good-way-to-expand-your-experience-5g4k)\n","user":{"name":"Hasan Zohdy","username":"hassanzohdy","twitter_username":null,"github_username":"hassanzohdy","user_id":148881,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--qAfPQwU1--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/148881/8d8cea7b-a824-49a6-84b7-2304ed9b64d9.jpg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--a0msxQIX--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/148881/8d8cea7b-a824-49a6-84b7-2304ed9b64d9.jpg"}}