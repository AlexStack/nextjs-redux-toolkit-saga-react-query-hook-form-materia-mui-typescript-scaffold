{"type_of":"article","id":1162060,"title":"Setting up ESLint & Prettier With Webpack in VSCode üßë‚Äçüíª","description":"In our third part of the series, we will be setting up the configuration for ESLint and Prettier...","readable_publish_date":"Oct 23","slug":"setting-up-eslint-prettier-with-webpack-in-vscode-29fg","path":"/rinconcamilo/setting-up-eslint-prettier-with-webpack-in-vscode-29fg","url":"https://dev.to/rinconcamilo/setting-up-eslint-prettier-with-webpack-in-vscode-29fg","comments_count":1,"public_reactions_count":4,"collection_id":19241,"published_timestamp":"2022-10-23T01:39:02Z","positive_reactions_count":4,"cover_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--Gdh_Crbc--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ysgcdpaiy40w0umnwcw.png","social_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--jpmVS2gC--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ysgcdpaiy40w0umnwcw.png","canonical_url":"https://dev.to/rinconcamilo/setting-up-eslint-prettier-with-webpack-in-vscode-29fg","created_at":"2022-08-08T11:22:20Z","edited_at":null,"crossposted_at":null,"published_at":"2022-10-23T01:39:02Z","last_comment_at":"2022-10-23T02:49:32Z","reading_time_minutes":8,"tag_list":"eslint, vscode, webpack, prettier","tags":["eslint","vscode","webpack","prettier"],"body_html":"<p>In our third part of the series, we will be setting up the configuration for ESLint and Prettier within VSCode.</p>\n\n<p>We will be setting up our ESLint and Prettier without going through either Webpack nor Babel. If you would still like to set up the project like it is in <a href=\"https://github.com/RinconCamilo/Setting-up-ESLint-and-Prettier\">GitHub</a> then follow the quick set-up guide. Visit the previous articles for a more in-depth explanation of what is happening behind the scenes <a href=\"https://dev.to/rinconcamilo/setting-up-react-babel-webpack-typescript-without-create-react-app-a9l\">here</a>.</p>\n\n<p><strong><u>Versions Being Used:</u></strong></p>\n\n<ul>\n<li>React 18</li>\n<li>Babel 7</li>\n<li>Webpack 5</li>\n<li>TypeScript 4</li>\n<li>ESlint 8</li>\n<li>Prettier 2\n\n</li>\n</ul>\n\n<h1>\n  <a name=\"quick-setup\" href=\"#quick-setup\">\n  </a>\n  Quick Set-Up\n</h1>\n\n<p>In order to quickly initialize the project, run the following commands:</p>\n\n<p>a. Create package.json file<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight powershell\"><code><span class=\"n\">npm</span><span class=\"w\"> </span><span class=\"nx\">init</span><span class=\"w\"> </span><span class=\"nt\">-y</span><span class=\"w\">\n</span></code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>b. Install React, Babel, Webpack, TypeScript, and other needed packages<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight powershell\"><code><span class=\"n\">npm</span><span class=\"w\"> </span><span class=\"nx\">install</span><span class=\"w\"> </span><span class=\"nt\">--save-dev</span><span class=\"w\"> </span><span class=\"nt\">--save-exact</span><span class=\"w\"> </span><span class=\"nx\">react</span><span class=\"w\"> </span><span class=\"nx\">react-dom</span><span class=\"w\"> </span><span class=\"err\">@</span><span class=\"nx\">babel/core</span><span class=\"w\"> </span><span class=\"err\">@</span><span class=\"nx\">babel/preset-env</span><span class=\"w\"> </span><span class=\"err\">@</span><span class=\"nx\">babel/preset-react</span><span class=\"w\"> </span><span class=\"nx\">babel-loader</span><span class=\"w\"> </span><span class=\"nx\">webpack</span><span class=\"w\"> </span><span class=\"nx\">webpack-cli</span><span class=\"w\"> </span><span class=\"nx\">webpack-dev-server</span><span class=\"w\"> </span><span class=\"nx\">html-webpack-plugin</span><span class=\"w\"> </span><span class=\"nx\">style-loader</span><span class=\"w\"> </span><span class=\"nx\">css-loader</span><span class=\"w\"> </span><span class=\"nx\">file-loader</span><span class=\"w\"> </span><span class=\"nx\">typescript</span><span class=\"w\"> </span><span class=\"err\">@</span><span class=\"nx\">types/react</span><span class=\"w\"> </span><span class=\"err\">@</span><span class=\"nx\">types/react-dom</span><span class=\"w\"> </span><span class=\"err\">@</span><span class=\"nx\">babel/preset-typescript</span><span class=\"w\">\n</span></code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>c. Create the Babel configuration file <code>.babelrc</code> and paste the following code:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight json\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"presets\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"@babel/preset-env\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"p\">[</span><span class=\"w\">\n      </span><span class=\"s2\">\"@babel/preset-react\"</span><span class=\"p\">,</span><span class=\"w\">\n      </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"nl\">\"runtime\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"automatic\"</span><span class=\"w\">\n      </span><span class=\"p\">}</span><span class=\"w\">\n    </span><span class=\"p\">],</span><span class=\"w\">\n    </span><span class=\"s2\">\"@babel/preset-typescript\"</span><span class=\"w\">\n  </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>d. Create the TypeScript configuration file <code>tsconfig.json</code> and paste the following code:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight json\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"compilerOptions\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">Emit</span><span class=\"w\"> </span><span class=\"err\">Configuration</span><span class=\"w\">\n    </span><span class=\"nl\">\"noEmit\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n\n    </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">Type</span><span class=\"w\"> </span><span class=\"err\">Checking</span><span class=\"w\"> </span><span class=\"err\">Configuration</span><span class=\"w\">\n    </span><span class=\"nl\">\"allowUnreachableCode\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"allowUnusedLabels\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"exactOptionalPropertyTypes\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"noFallthroughCasesInSwitch\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"noImplicitThis\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"noPropertyAccessFromIndexSignature\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"noUnusedLocals\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"noUnusedParameters\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"noImplicitOverride\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"noImplicitAny\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"noImplicitReturns\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">Strict</span><span class=\"w\"> </span><span class=\"err\">Rules</span><span class=\"w\"> </span><span class=\"err\">-</span><span class=\"w\"> </span><span class=\"err\">v</span><span class=\"mf\">4.8</span><span class=\"w\">\n    </span><span class=\"nl\">\"alwaysStrict\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"strictBindCallApply\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"strictFunctionTypes\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"strictNullChecks\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"strictPropertyInitialization\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"useUnknownInCatchVariables\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n\n    </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">Modules</span><span class=\"w\"> </span><span class=\"err\">Configuration</span><span class=\"w\">\n    </span><span class=\"nl\">\"baseUrl\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"./\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"module\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ES2022\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"moduleResolution\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"node\"</span><span class=\"p\">,</span><span class=\"w\">\n\n    </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">Language</span><span class=\"w\"> </span><span class=\"err\">and</span><span class=\"w\"> </span><span class=\"err\">Environment</span><span class=\"w\"> </span><span class=\"err\">Configuration</span><span class=\"w\">\n    </span><span class=\"nl\">\"target\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ES2022\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"jsx\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"react-jsx\"</span><span class=\"p\">,</span><span class=\"w\">\n\n    </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">JavaScript</span><span class=\"w\"> </span><span class=\"err\">Support</span><span class=\"w\"> </span><span class=\"err\">Configuration</span><span class=\"w\">\n    </span><span class=\"nl\">\"allowJs\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"checkJs\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n\n    </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">Interop</span><span class=\"w\"> </span><span class=\"err\">Constraints</span><span class=\"w\"> </span><span class=\"err\">Configuration</span><span class=\"w\">\n    </span><span class=\"nl\">\"esModuleInterop\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"isolatedModules\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"include\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"src/**/**/*\"</span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"exclude\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s2\">\"node_modules\"</span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>e. Create the <code>webpack.config.js</code> file and paste the following code:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">HtmlWebpackPlugin</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">html-webpack-plugin</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">path</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">path</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">entry</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">./src/index.tsx</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n  <span class=\"na\">mode</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">development</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n  <span class=\"na\">output</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">filename</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">bundle.[fullhash].js</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"na\">path</span><span class=\"p\">:</span> <span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">resolve</span><span class=\"p\">(</span><span class=\"nx\">__dirname</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">dist</span><span class=\"dl\">\"</span><span class=\"p\">),</span>\n  <span class=\"p\">},</span>\n  <span class=\"na\">plugins</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"k\">new</span> <span class=\"nx\">HtmlWebpackPlugin</span><span class=\"p\">({</span>\n      <span class=\"na\">template</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">./src/index.html</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">}),</span>\n  <span class=\"p\">],</span>\n  <span class=\"na\">resolve</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">modules</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nx\">__dirname</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">src</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">node_modules</span><span class=\"dl\">\"</span><span class=\"p\">],</span>\n    <span class=\"na\">extensions</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">\"</span><span class=\"s2\">*</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">.js</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">.jsx</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">.tsx</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">.ts</span><span class=\"dl\">\"</span><span class=\"p\">],</span>\n  <span class=\"p\">},</span>\n  <span class=\"na\">module</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">rules</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">{</span>\n        <span class=\"na\">test</span><span class=\"p\">:</span> <span class=\"sr\">/</span><span class=\"se\">\\.(</span><span class=\"sr\">js|ts</span><span class=\"se\">)</span><span class=\"sr\">x</span><span class=\"se\">?</span><span class=\"sr\">$/</span><span class=\"p\">,</span>\n        <span class=\"na\">exclude</span><span class=\"p\">:</span> <span class=\"sr\">/node_modules/</span><span class=\"p\">,</span>\n        <span class=\"na\">use</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">\"</span><span class=\"s2\">babel-loader</span><span class=\"dl\">\"</span><span class=\"p\">]</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n        <span class=\"na\">test</span><span class=\"p\">:</span> <span class=\"sr\">/</span><span class=\"se\">\\.</span><span class=\"sr\">css$/</span><span class=\"p\">,</span>\n        <span class=\"na\">exclude</span><span class=\"p\">:</span> <span class=\"sr\">/node_modules/</span><span class=\"p\">,</span>\n        <span class=\"na\">use</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">\"</span><span class=\"s2\">style-loader</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"dl\">\"</span><span class=\"s2\">css-loader</span><span class=\"dl\">\"</span><span class=\"p\">]</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n        <span class=\"na\">test</span><span class=\"p\">:</span> <span class=\"sr\">/</span><span class=\"se\">\\.(</span><span class=\"sr\">png|svg|jpg|gif</span><span class=\"se\">)</span><span class=\"sr\">$/</span><span class=\"p\">,</span>\n        <span class=\"na\">exclude</span><span class=\"p\">:</span> <span class=\"sr\">/node_modules/</span><span class=\"p\">,</span>\n        <span class=\"na\">use</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"dl\">\"</span><span class=\"s2\">file-loader</span><span class=\"dl\">\"</span><span class=\"p\">]</span>\n      <span class=\"p\">},</span> \n    <span class=\"p\">],</span>\n  <span class=\"p\">},</span>\n<span class=\"p\">};</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>f. Create a folder called \"src\" with the following files:</p>\n\n<ul>\n<li>\n<code>App.tsx</code>\n</li>\n</ul>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">App</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">(</span>\n  <span class=\"o\">&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">h1</span><span class=\"o\">&gt;</span><span class=\"nx\">Hello</span><span class=\"p\">,</span> <span class=\"nx\">World</span><span class=\"o\">!&lt;</span><span class=\"sr\">/h1</span><span class=\"err\">&gt;\n</span>  <span class=\"o\">&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span><span class=\"p\">);</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">App</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<ul>\n<li>\n<code>index.tsx</code>\n</li>\n</ul>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">StrictMode</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">react</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">createRoot</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">react-dom/client</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">App</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">./App</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">rootElement</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">querySelector</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#root</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"nx\">rootElement</span><span class=\"p\">)</span> <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nb\">Error</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Failed to find the root element</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">root</span> <span class=\"o\">=</span> <span class=\"nx\">createRoot</span><span class=\"p\">(</span><span class=\"nx\">rootElement</span><span class=\"p\">);</span>\n<span class=\"nx\">root</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">(</span>\n  <span class=\"o\">&lt;</span><span class=\"nx\">StrictMode</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">App</span> <span class=\"o\">/&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"sr\">/StrictMode</span><span class=\"err\">&gt;\n</span><span class=\"p\">);</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<ul>\n<li>\n<code>index.html</code>\n</li>\n</ul>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight html\"><code><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;html</span> <span class=\"na\">lang=</span><span class=\"s\">\"en\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;head&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"X-UA-Compatible\"</span> <span class=\"na\">content=</span><span class=\"s\">\"IE=edge\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;meta</span> <span class=\"na\">name=</span><span class=\"s\">\"viewport\"</span> <span class=\"na\">content=</span><span class=\"s\">\"width=device-width, initial-scale=1.0\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;title&gt;</span>React<span class=\"nt\">&lt;/title&gt;</span>\n  <span class=\"nt\">&lt;/head&gt;</span>\n  <span class=\"nt\">&lt;body&gt;</span>\n    <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"root\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n  <span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>f. Creating the <code>tscheck</code>, <code>build</code>, and <code>start</code> scripts<br>\nIn the <code>package.json</code> file, add these lines to your scripts section:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight powershell\"><code><span class=\"s2\">\"tscheck\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"tsc\"</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"s2\">\"build\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"webpack --config webpack.config.js --mode production\"</span><span class=\"p\">,</span><span class=\"w\">\n</span><span class=\"s2\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"webpack serve --open\"</span><span class=\"w\">\n</span></code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Now that we have all of the above set-up, the quick set-up should be able to run. If you have any questions or would like to learn more on what is happening above, visit my previous article <a href=\"https://dev.to/rinconcamilo/setting-up-react-babel-webpack-typescript-without-create-react-app-a9l\">here</a>.<br>\n<br></p>\n<h1>\n  <a name=\"implementing-eslint-and-prettier\" href=\"#implementing-eslint-and-prettier\">\n  </a>\n  Implementing ESLint and Prettier\n</h1>\n<h3>\n  <a name=\"background-information\" href=\"#background-information\">\n  </a>\n  Background Information:\n</h3>\n\n<p>As a developer, it is always good practice to ask ourselves, why do I need to do this? What use cases would I need to implement this? Is the implementation worth the work compared to the alternative? These are the questions that we are going to be answering.<br>\n<br></p>\n<h4>\n  <a name=\"1-eslint-vs-prettier\" href=\"#1-eslint-vs-prettier\">\n  </a>\n  1. ESLint vs. Prettier\n</h4>\n\n<p>First things first, \"ESlint vs Prettier\" should really always be said: ESLint and Prettier. This is because the jobs between these two tools are meant to accomplish different tasks. ESLint will lint our code while Prettier will simply format our code.</p>\n\n<p><strong><u>Linting:</u></strong> Is the way to enforce our code to adhere to certain coding practices. Some examples would include ensuring all console.logs() and un-used variables are deleted while more specific rules would be like not allowing the use of continue statements.</p>\n\n<p><strong><u>Formatting:</u></strong> We only care about how the code visually looks, does not involve catching errors or coding rules. An example would be ensuring that all lines of code are 100 in length and then auto-formatting the code to adhere to this rule.</p>\n\n<p>Now that we have a clearer definition, ESLint will be used as a linter while Prettier will be taking care of our formatting.<br>\n<br></p>\n<h4>\n  <a name=\"2-why-eslint-and-prettier\" href=\"#2-why-eslint-and-prettier\">\n  </a>\n  2. Why ESLint and Prettier?\n</h4>\n\n<p>Why would we ever need tools like ESLint and Prettier? As an individual developer, these tools would be in the \"nice to haves\" categories and are not \"100%\" necessary. This is because individual developers working on a project can adhere to their own coding rules and styles. </p>\n\n<p>Though what happens when we now have a team? Maybe multiple teams of developers all working together and each developer having their own coding rules and styling? This can quickly complicate our projects as each pull request (PRs) can have a lot more \"un-needed\" styling changes and code rules that will then be debated. This makes reviewing PRs a bit more overwhelming than needed and takes time away from really constructively critiquing the actual needed change. This is where ESLint and Prettier come into play.</p>\n\n<p>ESLint will ensure each developer is adhering to certain coding requirements that a team agrees on. Prettier will then ensure that every file will have the same \"look and feel\" across the project. These two tools will make sure that the team(s) will have better unity and any PRs will have have minimal changes. All of this fulfills a need in having a consistent, front-end project.</p>\n\n<p>If you have any additional benefits of using ESLint and Prettier leave a comment!üí¨<br>\n<br></p>\n<h4>\n  <a name=\"3-implementation-choice\" href=\"#3-implementation-choice\">\n  </a>\n  3. Implementation Choice\n</h4>\n\n<p>Before starting our set-up, there are three different ways that I know on how we can utilize ESLint; all depending on if we want either Babel, Webpack, or NPM to be linting our code. In this article, we are going to have our ESLint not depend on any other tool other than having NPM run our linting.</p>\n\n<p>My personal reason in organizing the ESLint like this is to have a separation of concerns. I believe having the ability to have our tools (and code) decoupled creates less dependencies and thus, creates less hassle for whenever things eventually break from either updates, configuration changes, or changes to the code itself.</p>\n\n<p>Since we are going to implementing ESLint like with NPM, we will have to add another line in our scripting process.<br>\n<br></p>\n<h3>\n  <a name=\"1-installing-eslint-and-prettier\" href=\"#1-installing-eslint-and-prettier\">\n  </a>\n  1. Installing ESLint and Prettier\n</h3>\n\n<p>In order to install ESLint, we need to include the following in our dev dependencies:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight powershell\"><code><span class=\"n\">npm</span><span class=\"w\"> </span><span class=\"nx\">install</span><span class=\"w\"> </span><span class=\"nt\">--save-dev</span><span class=\"w\"> </span><span class=\"nt\">--save-exact</span><span class=\"w\"> </span><span class=\"nx\">eslint</span><span class=\"w\"> </span><span class=\"nx\">eslint-plugin-react</span><span class=\"w\"> </span><span class=\"nx\">eslint-plugin-react-hooks</span><span class=\"w\"> </span><span class=\"nx\">eslint-config-prettier</span><span class=\"w\"> </span><span class=\"nx\">prettier</span><span class=\"w\"> </span><span class=\"err\">@</span><span class=\"nx\">typescript-eslint/parser</span><span class=\"w\"> </span><span class=\"err\">@</span><span class=\"nx\">typescript-eslint/eslint-plugin</span><span class=\"w\">\n</span></code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<ul>\n<li>\n<a href=\"https://www.npmjs.com/package/eslint\">eslint</a>\n\n<ul>\n<li>Is a tool to identify and report on code patterns.</li>\n</ul>\n\n\n</li>\n<li>\n<a href=\"https://www.npmjs.com/package/eslint-plugin-react\">eslint-plugin-react</a>\n\n<ul>\n<li>React specific linting rules for ESLint .</li>\n</ul>\n\n\n</li>\n<li>\n<a href=\"https://www.npmjs.com/package/eslint-plugin-react-hooks\">eslint-plugin-react-hooks</a>\n\n<ul>\n<li>Enforces the Rules of Hooks, is a part of the Hooks API for React.</li>\n</ul>\n\n\n</li>\n<li>\n<a href=\"https://www.npmjs.com/package/eslint-config-prettier\">eslint-config-prettier</a>\n\n<ul>\n<li>Turns off ESLint rules that would conflict with Prettier's formatting.</li>\n</ul>\n\n\n</li>\n<li>\n<a href=\"https://www.npmjs.com/package/prettier\">prettier</a>\n\n<ul>\n<li>An opinionated code formatter. Used to enforce a consistent style.</li>\n</ul>\n\n\n</li>\n<li>\n<a href=\"https://www.npmjs.com/package/@typescript-eslint/parser\">@typescript-eslint/parser</a>\n\n<ul>\n<li>ESLint parser which leverages TypeScript ESTree to allow for ESLint to lint TypeScript source code. </li>\n</ul>\n\n\n</li>\n<li>\n<a href=\"https://www.npmjs.com/package/@typescript-eslint/eslint-plugin\">@typescript-eslint/eslint-plugin</a>\n\n<ul>\n<li>ESLint plugin which provides lint rules for TypeScript codebases.\n\n</li>\n</ul>\n\n\n</li>\n</ul>\n\n<h4>\n  <a name=\"2-configuring-eslint\" href=\"#2-configuring-eslint\">\n  </a>\n  2. Configuring ESLint\n</h4>\n\n<p>In order to configure ESLint, we need to create the <code>.eslintrc.json</code> file in the root directory our current project.</p>\n\n<p><strong><u>Background:</u></strong> Within this file, we can implement different plugins and extensions for ESLint. Some of the basic fields that are in the configuration files are as follows:</p>\n\n<ul>\n<li>\n<a href=\"https://eslint.org/docs/latest/user-guide/configuring/language-options#specifying-environments\">env</a>\n\n<ul>\n<li>Environments your script is designed to run in.</li>\n</ul>\n\n\n</li>\n<li>extends\n\n<ul>\n<li>Allows ESLint to use a pre-existing ESLint configuration and will make overrides.</li>\n</ul>\n\n\n</li>\n<li>\n<a href=\"https://eslint.org/docs/latest/user-guide/configuring/plugins\">parser</a>\n\n<ul>\n<li>Converts code to an Abstract Syntax Tree (AST).</li>\n</ul>\n\n\n</li>\n<li>\n<a href=\"https://eslint.org/docs/latest/user-guide/configuring/language-options#specifying-parser-options\">parserOptions</a>\n\n<ul>\n<li>Tells ESLint what version of JavaScript we are targeting.</li>\n</ul>\n\n\n</li>\n<li>\n<a href=\"https://eslint.org/docs/latest/user-guide/configuring/plugins\">plugins</a>\n\n<ul>\n<li>Are additional rules that can be used in order configure your ESLint. </li>\n</ul>\n\n\n</li>\n<li>\n<a href=\"https://eslint.org/docs/latest/user-guide/configuring/configuration-files#adding-shared-settings\">settings</a>\n\n<ul>\n<li>Is shared settings that specify information that should be consistent across all of its rules.</li>\n</ul>\n\n\n</li>\n<li>\n<a href=\"https://eslint.org/docs/latest/user-guide/configuring/rules\">rules</a>\n\n<ul>\n<li>Where we can configure the different rules our plugins and ESLint has to offer.</li>\n</ul>\n\n\n</li>\n</ul>\n\n<p><strong><u>Setting up .eslintrc.json:</u></strong> Here is my <code>.eslintrc.json</code> that I use, if you have any suggestions please drop a comment!<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight json\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"env\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"browser\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"es2022\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"node\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"extends\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"eslint:recommended\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"plugin:@typescript-eslint/recommended\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"plugin:react/recommended\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"plugin:react-hooks/recommended\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"prettier\"</span><span class=\"w\">\n  </span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"parser\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"@typescript-eslint/parser\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"parserOptions\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"ecmaFeatures\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"jsx\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"nl\">\"ecmaVersion\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"latest\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"sourceType\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"module\"</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"plugins\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"s2\">\"react\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"s2\">\"@typescript-eslint\"</span><span class=\"w\">\n  </span><span class=\"p\">],</span><span class=\"w\">\n  </span><span class=\"nl\">\"settings\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"react\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n      </span><span class=\"nl\">\"version\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"999.999.999\"</span><span class=\"w\">\n    </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"p\">},</span><span class=\"w\">\n  </span><span class=\"nl\">\"rules\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"react/jsx-uses-react\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"off\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"react/react-in-jsx-scope\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"off\"</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Here are some explanations over a few configurations:</p>\n\n<ul>\n<li>env\n\n<ul>\n<li>We are going to add support for the es6 global variables by setting es2022 to true.</li>\n</ul>\n\n\n</li>\n<li>extends\n\n<ul>\n<li>Here we utilize the recommended ESLint and plugin rules. We need to make sure to place Prettier last in order to override any rules that would cause conflict between Prettier and the other packages.</li>\n</ul>\n\n\n</li>\n<li>parser\n\n<ul>\n<li>We are selecting the <code>@typescript-eslint/parser</code> since our project has TypeScript.</li>\n</ul>\n\n\n</li>\n<li>parserOptions\n\n<ul>\n<li>Since we are utilizing React, we are wanting to turn on jsx. We are also going to add support for the latest ecma syntax by setting ecmaVersion to latest.</li>\n</ul>\n\n\n</li>\n<li>plugins\n\n<ul>\n<li>We are needing to modify some of the rules for these plugins which is why we included them here.</li>\n</ul>\n\n\n</li>\n<li>settings\n\n<ul>\n<li>We are wanting to setting the react version here in order to avoid the react warning of not having a version specified. We can place an exact version of react but for now we can leave it as the value shown.</li>\n</ul>\n\n\n</li>\n<li>rules\n\n<ul>\n<li>Since we are using the jsx transform, we can disable the specific rules listed.</li>\n</ul>\n\n\n</li>\n</ul>\n\n<p>Lastly, for setting up our <code>.eslintrc.json</code> we need to create a file similar to <code>.gitignore</code> called <code>.eslintignore</code>. This works very much the same with the main difference of telling ESLint which files we should not check. We will be adding several files for our current project:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>node_modules\ndist\npackage-lock.json\nwebpack.config.js\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>We do this in order to help speed up the process of linting our project. Add or take away depending on your needs!<br>\n<br></p>\n<h4>\n  <a name=\"3-configuring-prettier\" href=\"#3-configuring-prettier\">\n  </a>\n  3. Configuring Prettier\n</h4>\n\n<p>Now we can create a .prettierrc.json. This is where we will put our code formatting rules that prettier will run and adjust to!</p>\n\n<p>Here is my formatting rules, leave a comment as to what rules you guys like to use!<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight json\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"semi\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"tabWidth\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"printWidth\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"singleQuote\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"trailingComma\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"none\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"jsxBracketSameLine\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n\n\n<h4>\n  <a name=\"4-configuring-vscode\" href=\"#4-configuring-vscode\">\n  </a>\n  4. Configuring VSCode\n</h4>\n\n<p>With the VSCode IDE, we have the following settings options available for the user to configure:</p>\n\n<ul>\n<li>User Settings\n\n<ul>\n<li>Settings that will apply globally to any instance of VSCode on your machine.</li>\n</ul>\n\n\n</li>\n<li>Workspace Settings\n\n<ul>\n<li>Settings that are set inside your project that will be applied every time your specific project is open</li>\n</ul>\n\n\n</li>\n</ul>\n\n<p>We will be creating a workspace settings in order to be able to share, and have a coherent environment across teams when sharing our project. The following is what I have in my settings.json:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight json\"><code><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"nl\">\"editor.defaultFormatter\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"rvest.vs-code-prettier-eslint\"</span><span class=\"p\">,</span><span class=\"w\">\n  </span><span class=\"nl\">\"editor.formatOnPaste\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">required</span><span class=\"w\">\n  </span><span class=\"nl\">\"editor.formatOnType\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">required</span><span class=\"w\">\n  </span><span class=\"nl\">\"editor.formatOnSave\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">optional</span><span class=\"w\">\n  </span><span class=\"nl\">\"editor.formatOnSaveMode\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"file\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">required</span><span class=\"w\"> </span><span class=\"err\">to</span><span class=\"w\"> </span><span class=\"err\">format</span><span class=\"w\"> </span><span class=\"err\">on</span><span class=\"w\"> </span><span class=\"err\">save</span><span class=\"w\">\n  </span><span class=\"nl\">\"files.autoSave\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"onFocusChange\"</span><span class=\"w\"> </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">optional</span><span class=\"w\"> </span><span class=\"err\">but</span><span class=\"w\"> </span><span class=\"err\">recommended</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>With these settings, we will now be able to to use prettier everytime we save.<br>\n<br></p>\n<h4>\n  <a name=\"5-configuring-packagejson\" href=\"#5-configuring-packagejson\">\n  </a>\n  5. Configuring package.json\n</h4>\n\n<p>Now in the package.json file, we need to add this line to your scripts section:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight json\"><code><span class=\"nl\">\"lint\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"eslint .\"</span><span class=\"err\">,</span><span class=\"w\">\n</span><span class=\"nl\">\"lint:fix\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"eslint . --fix\"</span><span class=\"err\">,</span><span class=\"w\">\n</span></code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>This will lint all the code. And will also try to auto-fix any of the linting errors that are brought up.<br>\n<br></p>\n\n<p>View everything together in <a href=\"https://github.com/RinconCamilo/Setting-up-ESLint-and-Prettier\">Github</a>.</p>\n\n<p>If you found this helpful or just enjoyed reading the article, consider grabbing me a <a href=\"//buymeacoffee.com/rinconcami9\">cup of coffee</a>.</p>\n\n","body_markdown":"In our third part of the series, we will be setting up the configuration for ESLint and Prettier within VSCode.\n\nWe will be setting up our ESLint and Prettier without going through either Webpack nor Babel. If you would still like to set up the project like it is in [GitHub](https://github.com/RinconCamilo/Setting-up-ESLint-and-Prettier) then follow the quick set-up guide. Visit the previous articles for a more in-depth explanation of what is happening behind the scenes [here](https://dev.to/rinconcamilo/setting-up-react-babel-webpack-typescript-without-create-react-app-a9l).\n\n**<u>Versions Being Used:</u>**\n- React 18\n- Babel 7\n- Webpack 5\n- TypeScript 4\n- ESlint 8\n- Prettier 2\n<br />\n\n# Quick Set-Up\nIn order to quickly initialize the project, run the following commands:\n\na. Create package.json file\n```powershell\nnpm init -y\n```\nb. Install React, Babel, Webpack, TypeScript, and other needed packages\n```powershell\nnpm install --save-dev --save-exact react react-dom @babel/core @babel/preset-env @babel/preset-react babel-loader webpack webpack-cli webpack-dev-server html-webpack-plugin style-loader css-loader file-loader typescript @types/react @types/react-dom @babel/preset-typescript\n```\nc. Create the Babel configuration file `.babelrc` and paste the following code:\n```json\n{\n  \"presets\": [\n    \"@babel/preset-env\",\n    [\n      \"@babel/preset-react\",\n      {\n        \"runtime\": \"automatic\"\n      }\n    ],\n    \"@babel/preset-typescript\"\n  ]\n}\n```\nd. Create the TypeScript configuration file `tsconfig.json` and paste the following code:\n```json\n{\n  \"compilerOptions\": {\n    // Emit Configuration\n    \"noEmit\": true,\n\n    // Type Checking Configuration\n    \"allowUnreachableCode\": false,\n    \"allowUnusedLabels\": false,\n    \"exactOptionalPropertyTypes\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    \"noImplicitThis\": true,\n    \"noPropertyAccessFromIndexSignature\": true,\n    \"noUnusedLocals\": true,\n    \"noUnusedParameters\": true,\n    \"noImplicitOverride\": true,\n    \"noImplicitAny\": true,\n    \"noImplicitReturns\": true,\n    // Strict Rules - v4.8\n    \"alwaysStrict\": true,\n    \"strictBindCallApply\": true,\n    \"strictFunctionTypes\": true,\n    \"strictNullChecks\": true,\n    \"strictPropertyInitialization\": true,\n    \"useUnknownInCatchVariables\": true,\n    \n    // Modules Configuration\n    \"baseUrl\": \"./\",\n    \"module\": \"ES2022\",\n    \"moduleResolution\": \"node\",\n    \n    // Language and Environment Configuration\n    \"target\": \"ES2022\",\n    \"jsx\": \"react-jsx\",\n\n    // JavaScript Support Configuration\n    \"allowJs\": true,\n    \"checkJs\": true,\n\n    // Interop Constraints Configuration\n    \"esModuleInterop\": true,\n    \"isolatedModules\": true\n  },\n  \"include\": [\"src/**/**/*\"],\n  \"exclude\": [\"node_modules\"]\n}\n```\ne. Create the `webpack.config.js` file and paste the following code:\n```javascript\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");\nconst path = require(\"path\");\n\nmodule.exports = {\n  entry: \"./src/index.tsx\",\n  mode: \"development\",\n  output: {\n    filename: \"bundle.[fullhash].js\",\n    path: path.resolve(__dirname, \"dist\"),\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: \"./src/index.html\",\n    }),\n  ],\n  resolve: {\n    modules: [__dirname, \"src\", \"node_modules\"],\n    extensions: [\"*\", \".js\", \".jsx\", \".tsx\", \".ts\"],\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.(js|ts)x?$/,\n        exclude: /node_modules/,\n        use: [\"babel-loader\"]\n      },\n      {\n        test: /\\.css$/,\n        exclude: /node_modules/,\n        use: [\"style-loader\", \"css-loader\"]\n      },\n      {\n        test: /\\.(png|svg|jpg|gif)$/,\n        exclude: /node_modules/,\n        use: [\"file-loader\"]\n      }, \n    ],\n  },\n};\n```\nf. Create a folder called \"src\" with the following files:\n- `App.tsx`\n```javascript\nconst App = () => (\n  <div>\n    <h1>Hello, World!</h1>\n  </div>\n);\n\nexport default App;\n```\n- `index.tsx`\n```javascript\nimport { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\n\nconst rootElement = document.querySelector('#root');\nif (!rootElement) throw new Error('Failed to find the root element');\nconst root = createRoot(rootElement);\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n```\n- `index.html`\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>React</title>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n  </body>\n</html>\n```\nf. Creating the `tscheck`, `build`, and `start` scripts\nIn the `package.json` file, add these lines to your scripts section:\n```powershell\n\"tscheck\": \"tsc\",\n\"build\": \"webpack --config webpack.config.js --mode production\",\n\"start\": \"webpack serve --open\"\n```\nNow that we have all of the above set-up, the quick set-up should be able to run. If you have any questions or would like to learn more on what is happening above, visit my previous article [here](https://dev.to/rinconcamilo/setting-up-react-babel-webpack-typescript-without-create-react-app-a9l).\n<br />\n\n# Implementing ESLint and Prettier\n### Background Information:\nAs a developer, it is always good practice to ask ourselves, why do I need to do this? What use cases would I need to implement this? Is the implementation worth the work compared to the alternative? These are the questions that we are going to be answering.\n<br />\n\n#### 1. ESLint vs. Prettier\nFirst things first, \"ESlint vs Prettier\" should really always be said: ESLint and Prettier. This is because the jobs between these two tools are meant to accomplish different tasks. ESLint will lint our code while Prettier will simply format our code.\n\n**<u>Linting:</u>** Is the way to enforce our code to adhere to certain coding practices. Some examples would include ensuring all console.logs() and un-used variables are deleted while more specific rules would be like not allowing the use of continue statements.\n\n**<u>Formatting:</u>** We only care about how the code visually looks, does not involve catching errors or coding rules. An example would be ensuring that all lines of code are 100 in length and then auto-formatting the code to adhere to this rule.\n\nNow that we have a clearer definition, ESLint will be used as a linter while Prettier will be taking care of our formatting.\n<br />\n\n#### 2. Why ESLint and Prettier?\nWhy would we ever need tools like ESLint and Prettier? As an individual developer, these tools would be in the \"nice to haves\" categories and are not \"100%\" necessary. This is because individual developers working on a project can adhere to their own coding rules and styles. \n\nThough what happens when we now have a team? Maybe multiple teams of developers all working together and each developer having their own coding rules and styling? This can quickly complicate our projects as each pull request (PRs) can have a lot more \"un-needed\" styling changes and code rules that will then be debated. This makes reviewing PRs a bit more overwhelming than needed and takes time away from really constructively critiquing the actual needed change. This is where ESLint and Prettier come into play.\n\nESLint will ensure each developer is adhering to certain coding requirements that a team agrees on. Prettier will then ensure that every file will have the same \"look and feel\" across the project. These two tools will make sure that the team(s) will have better unity and any PRs will have have minimal changes. All of this fulfills a need in having a consistent, front-end project.\n\nIf you have any additional benefits of using ESLint and Prettier leave a comment!üí¨\n<br />\n\n#### 3. Implementation Choice\nBefore starting our set-up, there are three different ways that I know on how we can utilize ESLint; all depending on if we want either Babel, Webpack, or NPM to be linting our code. In this article, we are going to have our ESLint not depend on any other tool other than having NPM run our linting.\n\nMy personal reason in organizing the ESLint like this is to have a separation of concerns. I believe having the ability to have our tools (and code) decoupled creates less dependencies and thus, creates less hassle for whenever things eventually break from either updates, configuration changes, or changes to the code itself.\n\nSince we are going to implementing ESLint like with NPM, we will have to add another line in our scripting process.\n<br />\n\n### 1. Installing ESLint and Prettier\nIn order to install ESLint, we need to include the following in our dev dependencies:\n```powershell\nnpm install --save-dev --save-exact eslint eslint-plugin-react eslint-plugin-react-hooks eslint-config-prettier prettier @typescript-eslint/parser @typescript-eslint/eslint-plugin\n```\n- [eslint](https://www.npmjs.com/package/eslint)\n    - Is a tool to identify and report on code patterns.\n- [eslint-plugin-react](https://www.npmjs.com/package/eslint-plugin-react)\n    - React specific linting rules for ESLint .\n- [eslint-plugin-react-hooks](https://www.npmjs.com/package/eslint-plugin-react-hooks)\n    - Enforces the Rules of Hooks, is a part of the Hooks API for React.\n- [eslint-config-prettier](https://www.npmjs.com/package/eslint-config-prettier)\n    - Turns off ESLint rules that would conflict with Prettier's formatting.\n- [prettier](https://www.npmjs.com/package/prettier)\n    - An opinionated code formatter. Used to enforce a consistent style.\n- [@typescript-eslint/parser](https://www.npmjs.com/package/@typescript-eslint/parser)\n    - ESLint parser which leverages TypeScript ESTree to allow for ESLint to lint TypeScript source code. \n- [@typescript-eslint/eslint-plugin](https://www.npmjs.com/package/@typescript-eslint/eslint-plugin)\n    - ESLint plugin which provides lint rules for TypeScript codebases.\n<br />\n\n#### 2. Configuring ESLint\nIn order to configure ESLint, we need to create the `.eslintrc.json` file in the root directory our current project.\n\n**<u>Background:</u>** Within this file, we can implement different plugins and extensions for ESLint. Some of the basic fields that are in the configuration files are as follows:\n- [env](https://eslint.org/docs/latest/user-guide/configuring/language-options#specifying-environments)\n    - Environments your script is designed to run in.\n- extends\n    - Allows ESLint to use a pre-existing ESLint configuration and will make overrides.\n- [parser](https://eslint.org/docs/latest/user-guide/configuring/plugins)\n    - Converts code to an Abstract Syntax Tree (AST).\n- [parserOptions](https://eslint.org/docs/latest/user-guide/configuring/language-options#specifying-parser-options)\n    - Tells ESLint what version of JavaScript we are targeting.\n- [plugins](https://eslint.org/docs/latest/user-guide/configuring/plugins)\n    - Are additional rules that can be used in order configure your ESLint. \n- [settings](https://eslint.org/docs/latest/user-guide/configuring/configuration-files#adding-shared-settings)\n    - Is shared settings that specify information that should be consistent across all of its rules.\n- [rules](https://eslint.org/docs/latest/user-guide/configuring/rules)\n    - Where we can configure the different rules our plugins and ESLint has to offer.\n\n**<u>Setting up .eslintrc.json:</u>** Here is my `.eslintrc.json` that I use, if you have any suggestions please drop a comment!\n```json\n{\n  \"env\": {\n    \"browser\": true,\n    \"es2022\": true,\n    \"node\": true\n  },\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:@typescript-eslint/recommended\",\n    \"plugin:react/recommended\",\n    \"plugin:react-hooks/recommended\",\n    \"prettier\"\n  ],\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"ecmaFeatures\": {\n      \"jsx\": true\n    },\n    \"ecmaVersion\": \"latest\",\n    \"sourceType\": \"module\"\n  },\n  \"plugins\": [\n    \"react\",\n    \"@typescript-eslint\"\n  ],\n  \"settings\": {\n    \"react\": {\n      \"version\": \"999.999.999\"\n    }\n  },\n  \"rules\": {\n    \"react/jsx-uses-react\": \"off\",\n    \"react/react-in-jsx-scope\": \"off\"\n  }\n}\n```\nHere are some explanations over a few configurations:\n- env\n    - We are going to add support for the es6 global variables by setting es2022 to true.\n- extends\n    - Here we utilize the recommended ESLint and plugin rules. We need to make sure to place Prettier last in order to override any rules that would cause conflict between Prettier and the other packages.\n- parser\n    - We are selecting the `@typescript-eslint/parser` since our project has TypeScript.\n- parserOptions\n    - Since we are utilizing React, we are wanting to turn on jsx. We are also going to add support for the latest ecma syntax by setting ecmaVersion to latest.\n- plugins\n    - We are needing to modify some of the rules for these plugins which is why we included them here.\n- settings\n    - We are wanting to setting the react version here in order to avoid the react warning of not having a version specified. We can place an exact version of react but for now we can leave it as the value shown.\n- rules\n    - Since we are using the jsx transform, we can disable the specific rules listed.\n\nLastly, for setting up our `.eslintrc.json` we need to create a file similar to `.gitignore` called `.eslintignore`. This works very much the same with the main difference of telling ESLint which files we should not check. We will be adding several files for our current project:\n```txt\nnode_modules\ndist\npackage-lock.json\nwebpack.config.js\n```\nWe do this in order to help speed up the process of linting our project. Add or take away depending on your needs!\n<br />\n\n####3. Configuring Prettier\nNow we can create a .prettierrc.json. This is where we will put our code formatting rules that prettier will run and adjust to!\n\nHere is my formatting rules, leave a comment as to what rules you guys like to use!\n```json\n{\n  \"semi\": true,\n  \"tabWidth\": 2,\n  \"printWidth\": 100,\n  \"singleQuote\": true,\n  \"trailingComma\": \"none\",\n  \"jsxBracketSameLine\": true\n}\n```\n<br />\n\n####4. Configuring VSCode\nWith the VSCode IDE, we have the following settings options available for the user to configure:\n- User Settings\n    - Settings that will apply globally to any instance of VSCode on your machine.\n- Workspace Settings\n    - Settings that are set inside your project that will be applied every time your specific project is open\n\nWe will be creating a workspace settings in order to be able to share, and have a coherent environment across teams when sharing our project. The following is what I have in my settings.json:\n```json\n{\n  \"editor.defaultFormatter\": \"rvest.vs-code-prettier-eslint\",\n  \"editor.formatOnPaste\": false, // required\n  \"editor.formatOnType\": false, // required\n  \"editor.formatOnSave\": true, // optional\n  \"editor.formatOnSaveMode\": \"file\", // required to format on save\n  \"files.autoSave\": \"onFocusChange\" // optional but recommended\n}\n```\n\nWith these settings, we will now be able to to use prettier everytime we save.\n<br />\n\n####5. Configuring package.json\nNow in the package.json file, we need to add this line to your scripts section:\n```json\n\"lint\": \"eslint .\",\n\"lint:fix\": \"eslint . --fix\",\n```\nThis will lint all the code. And will also try to auto-fix any of the linting errors that are brought up.\n<br />\n\nView everything together in [Github](https://github.com/RinconCamilo/Setting-up-ESLint-and-Prettier).\n\nIf you found this helpful or just enjoyed reading the article, consider grabbing me a [cup of coffee](buymeacoffee.com/rinconcami9).","user":{"name":"Camilo Rincon","username":"rinconcamilo","twitter_username":null,"github_username":"RinconCamilo","user_id":904846,"website_url":"https://www.buymeacoffee.com/rinconcami9","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s---t9A_xYD--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/904846/b41b28db-6e70-47bb-9305-05bce900bb4a.jpg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--w6U3IS2C--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/904846/b41b28db-6e70-47bb-9305-05bce900bb4a.jpg"}}