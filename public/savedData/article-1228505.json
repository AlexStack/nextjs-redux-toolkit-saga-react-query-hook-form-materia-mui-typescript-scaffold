{"type_of":"article","id":1228505,"title":"Moving an EC2 server Exim4 email to AWS Email systems","description":"Background   I have an EC2 server running in production that connects to  Exim4 to send out...","readable_publish_date":"Nov 1","slug":"moving-an-ec2-server-exim4-email-to-aws-email-systems-34me","path":"/rrsai/moving-an-ec2-server-exim4-email-to-aws-email-systems-34me","url":"https://dev.to/rrsai/moving-an-ec2-server-exim4-email-to-aws-email-systems-34me","comments_count":0,"public_reactions_count":2,"collection_id":null,"published_timestamp":"2022-11-01T03:44:17Z","positive_reactions_count":2,"cover_image":null,"social_image":"https://dev.to/social_previews/article/1228505.png","canonical_url":"https://dev.to/rrsai/moving-an-ec2-server-exim4-email-to-aws-email-systems-34me","created_at":"2022-10-24T17:12:28Z","edited_at":null,"crossposted_at":null,"published_at":"2022-11-01T03:44:17Z","last_comment_at":"2022-11-01T03:44:17Z","reading_time_minutes":3,"tag_list":"aws, ses, email","tags":["aws","ses","email"],"body_html":"<h2>\n  <a name=\"background\" href=\"#background\">\n  </a>\n  Background\n</h2>\n\n<p>I have an EC2 server running in production that connects to <br>\nExim4 to send out emails, transactional and otherwise.</p>\n\n<p>AWS's recommendation for simplest email seems to essentially be \"<a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/send-messages-email.html#send-messages-email-choose-method\">Use AWS SES instead of pinpoint</a>\".</p>\n\n<h3>\n  <a name=\"pieces\" href=\"#pieces\">\n  </a>\n  Pieces\n</h3>\n\n<p>Generally there are some email templates that have to be programmatically fed into the email system.</p>\n\n<p>An internal API has to be created to accept requests for sending out new transactional emails.  Implementation of this will be with an AWS lambda called first by local CLI, and later via an invocation event.</p>\n\n<p>Initially, manual whitelisting of addresses in SES will be done via the console while the SES is still in sandbox mode.</p>\n\n<p>Security checks need to be done to ensure email injection can not be done (there may be something that AWS SES will do to make email injection attackers less effective than Exim4, but that is always worth checking)</p>\n\n<p>Create unsubscribe link system, requiring a url on the main domain that accepts url-based unsubscribes in one action, and  adds the user to a blacklist</p>\n\n<p>Eventually, getting the AWS SES out of sandbox mode (here are some example rationales, though your milage may vary, these are just drafts).</p>\n\n<h3>\n  <a name=\"getting-out-of-ses-sandbox-mode\" href=\"#getting-out-of-ses-sandbox-mode\">\n  </a>\n  Getting out of SES sandbox mode\n</h3>\n\n<ul>\n<li>How do you plan to build or acquire your mailing list?</li>\n<li>- Users must opt in to receiving transactional emails after they create an account and provide an email address.  We do not cold-call/cold email users, they sign up and willingly provide their information.</li>\n<li>How do you plan to handle bounces and complaints?</li>\n<li>- Complaints: Complaints can just be forwarded through to the main contact email, and dealt with accordingly on a case-by-case basis.\n</li>\n<li>- Bounces: Bounces are more complicated, and need an automated system to take out email addresses that bounce in real time.  To handle bounces, an SNS notification topic will be created, which triggers an AWS lambda to add the email to a do-not-send list and refrain from sending further emails to the bouncing address.</li>\n<li>How can recipients opt out of receiving email from you?</li>\n<li>- We provide a simple on-step unsubscribe link in clear, blue text in the footer of every email.  We also follow the structure that allows standard free email providers to use the one-click [Unsubscribe] button method.</li>\n<li>How did you choose the sending rate or sending quota that you specified in this request?</li>\n<li>- Currently there are XXX number of users in the system.  Only X% of them opt in to receiving emails.  We send a transactional email at the end of the day to those people who have opted in.  As a result, we expect to send XXX * 0.0X emails a day, * 31 for monthly numbers.  We also send out a monthly update email to those users who have opted in, thus adding another XXX * 0.0X emails per month.  Give a buffer of 120%, results in YYY emails per month as an upper bound.</li>\n</ul>\n\n<p>...More on this process later...</p>\n\n<p>Useful references:</p>\n\n<ul>\n<li><a href=\"https://medium.com/@serbanmihai/how-to-handle-aws-ses-bounces-and-complaints-53d6e7455443\">https://medium.com/@serbanmihai/how-to-handle-aws-ses-bounces-and-complaints-53d6e7455443</a></li>\n<li><a href=\"https://docs.aws.amazon.com/ses/latest/dg/send-email-exim.html\">https://docs.aws.amazon.com/ses/latest/dg/send-email-exim.html</a></li>\n<li><a href=\"https://medium.com/free-code-camp/sending-emails-with-amazon-ses-7617e83327b6\">https://medium.com/free-code-camp/sending-emails-with-amazon-ses-7617e83327b6</a></li>\n<li><a href=\"https://docs.aws.amazon.com/pinpoint/latest/developerguide/send-messages-email.html#send-messages-email-choose-method\">https://docs.aws.amazon.com/pinpoint/latest/developerguide/send-messages-email.html#send-messages-email-choose-method</a></li>\n</ul>\n\n","body_markdown":"## Background\n\nI have an EC2 server running in production that connects to \nExim4 to send out emails, transactional and otherwise.\n\nAWS's recommendation for simplest email seems to essentially be \"[Use AWS SES instead of pinpoint](https://docs.aws.amazon.com/pinpoint/latest/developerguide/send-messages-email.html#send-messages-email-choose-method)\".\n\n### Pieces\n\nGenerally there are some email templates that have to be programmatically fed into the email system.\n\nAn internal API has to be created to accept requests for sending out new transactional emails.  Implementation of this will be with an AWS lambda called first by local CLI, and later via an invocation event.\n\nInitially, manual whitelisting of addresses in SES will be done via the console while the SES is still in sandbox mode.\n\nSecurity checks need to be done to ensure email injection can not be done (there may be something that AWS SES will do to make email injection attackers less effective than Exim4, but that is always worth checking)\n\nCreate unsubscribe link system, requiring a url on the main domain that accepts url-based unsubscribes in one action, and  adds the user to a blacklist\n\n\nEventually, getting the AWS SES out of sandbox mode (here are some example rationales, though your milage may vary, these are just drafts).\n\n### Getting out of SES sandbox mode\n\n- How do you plan to build or acquire your mailing list?\n- - Users must opt in to receiving transactional emails after they create an account and provide an email address.  We do not cold-call/cold email users, they sign up and willingly provide their information.\n- How do you plan to handle bounces and complaints?\n- - Complaints: Complaints can just be forwarded through to the main contact email, and dealt with accordingly on a case-by-case basis.  \n- - Bounces: Bounces are more complicated, and need an automated system to take out email addresses that bounce in real time.  To handle bounces, an SNS notification topic will be created, which triggers an AWS lambda to add the email to a do-not-send list and refrain from sending further emails to the bouncing address.\n- How can recipients opt out of receiving email from you?\n- - We provide a simple on-step unsubscribe link in clear, blue text in the footer of every email.  We also follow the structure that allows standard free email providers to use the one-click [Unsubscribe] button method.\n- How did you choose the sending rate or sending quota that you specified in this request?\n- - Currently there are XXX number of users in the system.  Only X% of them opt in to receiving emails.  We send a transactional email at the end of the day to those people who have opted in.  As a result, we expect to send XXX * 0.0X emails a day, * 31 for monthly numbers.  We also send out a monthly update email to those users who have opted in, thus adding another XXX * 0.0X emails per month.  Give a buffer of 120%, results in YYY emails per month as an upper bound.\n\n...More on this process later...\n\n\nUseful references:\n- https://medium.com/@serbanmihai/how-to-handle-aws-ses-bounces-and-complaints-53d6e7455443\n- https://docs.aws.amazon.com/ses/latest/dg/send-email-exim.html\n- https://medium.com/free-code-camp/sending-emails-with-amazon-ses-7617e83327b6\n- https://docs.aws.amazon.com/pinpoint/latest/developerguide/send-messages-email.html#send-messages-email-choose-method","user":{"name":"Roy Ronalds","username":"rrsai","twitter_username":null,"github_username":"rrsai","user_id":676472,"website_url":"https://royronalds.com","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--ugQ-B1ft--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/676472/8330b2e7-1b69-4747-bc22-4ffd962ba365.jpeg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--UqMLiA5K--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/676472/8330b2e7-1b69-4747-bc22-4ffd962ba365.jpeg"}}