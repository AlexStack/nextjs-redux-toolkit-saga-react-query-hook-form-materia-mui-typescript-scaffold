{"type_of":"article","id":1204233,"title":"it transit in like any menu or mega-menu (containerRef) easy pizzy === `it's pizza time`","description":"lots of guys think simple popup would do; lot's guys think modal would do but I think a  is more...","readable_publish_date":"Sep 27","slug":"it-transit-in-like-any-menu-or-mega-menu-containerref-42i6","path":"/cadentic/it-transit-in-like-any-menu-or-mega-menu-containerref-42i6","url":"https://dev.to/cadentic/it-transit-in-like-any-menu-or-mega-menu-containerref-42i6","comments_count":0,"public_reactions_count":0,"collection_id":null,"published_timestamp":"2022-09-27T10:46:16Z","positive_reactions_count":0,"cover_image":null,"social_image":"https://dev.to/social_previews/article/1204233.png","canonical_url":"https://dev.to/cadentic/it-transit-in-like-any-menu-or-mega-menu-containerref-42i6","created_at":"2022-09-27T10:46:17Z","edited_at":"2022-10-02T13:37:48Z","crossposted_at":null,"published_at":"2022-09-27T10:46:16Z","last_comment_at":"2022-09-27T10:46:16Z","reading_time_minutes":5,"tag_list":"webdev, react, nextjs, mui","tags":["webdev","react","nextjs","mui"],"body_html":"<p>lots of guys think simple popup would do; lot's guys think modal would do but I think a  is more generic way to achieve it ; however it is never ending saga.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Switch from '@mui/material/Switch';\nimport Paper from '@mui/material/Paper';\nimport Slide from '@mui/material/Slide';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { Card } from '@mui/material';\n\nexport default function SimpleSlide() {\n  const [checked, setChecked] = React.useState(false);\n  //const [checked, setChecked] = React.useState(false);\n  const containerRef = React.useRef(null);\n  const handleChange = () =&gt; {\n    setChecked((prev) =&gt; !prev);\n  };\n\n  return (\n    &lt;Box sx={{ height: 'fit-content' }}&gt;\n      &lt;Box sx={{ width: `fit-content` }} ref={containerRef}&gt;\n          &lt;Box onClick={handleChange}&gt;my hero &lt;/Box&gt;\n\n        &lt;Slide direction=\"up\" container={containerRef.current} in={checked} mountOnEnter unmountOnExit&gt;\n      &lt;Card sx={{ m: 1 }} elevation={1}&gt;\n    &lt;Box  component=\"svg\" sx={{ width: 100, height: 100 }}&gt;\n      &lt;Box\n        component=\"polygon\"\n        sx={{\n          fill: (theme) =&gt; theme.palette.common.red,\n          stroke: (theme) =&gt; theme.palette.divider,\n          strokeWidth: 1,\n        }}\n        points=\"0,0 50,50, 100,100, 0,100\"\n      /&gt;\n    &lt;/Box&gt;\n  &lt;/Card&gt;\n        &lt;/Slide&gt;\n      &lt;/Box&gt;\n    &lt;/Box&gt;\n  );\n}\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Replace the code from this card and put you menu and menu item into this to achieve a mega menu<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>&lt;Card sx={{ m: 1 }} elevation={1}&gt;\n    &lt;Box  component=\"svg\" sx={{ width: 100, height: 100 }}&gt;\n      &lt;Box\n        component=\"polygon\"\n        sx={{\n          fill: (theme) =&gt; theme.palette.common.red,\n          stroke: (theme) =&gt; theme.palette.divider,\n          strokeWidth: 1,\n        }}\n        points=\"0,0 50,50, 100,100, 0,100\"\n      /&gt;\n    &lt;/Box&gt;\n  &lt;/Card&gt;\n\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p><a href=\"https://mui.com/material-ui/transitions/\">Ref Link : it is world famous MUI ; it's back as it was never left us behind</a></p>\n\n<p>But in a React Grid it seems little messy : still it does a job what it is meant to be<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\n//import Grid from '@mui/material/Grid'; // Grid version 1\nimport Grid2 from '@mui/material/Unstable_Grid2';\nimport { styled, alpha } from '@mui/material/styles';\n//import Image from '@mui/material/Image';\nimport { Slide, Popover, Grid, ClickAwayListener, Grow, Button, MenuList, ButtonGroup, Container, Toolbar, Typography, CssBaseline, Paper, Box, AppBar, Popper } from '@mui/material';\nimport MuiLink from '@mui/material/Link';\nimport Badge from '@mui/material/Badge';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport HomeIcon from '@mui/icons-material/Home';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport MailIcon from '@mui/icons-material/Mail';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport MoreIcon from '@mui/icons-material/MoreVert';\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\nimport * as Colors from '@mui/material/colors';\nimport Image from 'next/image';\nimport ViewCompactRoundedIcon from '@mui/icons-material/ViewCompactRounded';\nimport BrokenComponantTabbes from '../src/BrokenComponantTabbes'\n\n\n// Note that you normally won't need to set the window ref as useScrollTrigger\n// will defau\n\n\n\nconst options = ['View Accounts', 'Contact Sales', 'Logedin users']\n\n\n\n\nconst ConditionalWrapper = ({ children, condition }) =&gt; {\n  return condition ? (\n    &lt;div&gt;{children}&lt;/div&gt;\n  ) : (\n    children\n  )\n}\n\n\nconst Navigations = () =&gt; {\n  //const brown = brown[900];\n  const [clicked, setClicked] = React.useState(false);\n  const containerRef = React.useRef(null);\n  const handleChange = () =&gt; {\n    setClicked((prev) =&gt; !prev);\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleClick = () =&gt; {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (event, index) =&gt; {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () =&gt; {\n    setOpen((prevOpen) =&gt; !prevOpen);\n  };\n\n  const handleClose = (event) =&gt; {\n    if (anchorRef.current &amp;&amp; anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) =&gt; {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () =&gt; {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () =&gt; {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) =&gt; {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    &lt;Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    &gt;\n      &lt;MenuItem onClick={handleMenuClose}&gt;Profile&lt;/MenuItem&gt;\n      &lt;MenuItem onClick={handleMenuClose}&gt;My account&lt;/MenuItem&gt;\n    &lt;/Menu&gt;\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    &lt;Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    &gt;\n    &lt;/Menu&gt;\n  );\n\n\n  return (\n    &lt;React.Fragment&gt;\n      &lt;CssBaseline /&gt;\n      &lt;Toolbar sx={{ zIndex: 1 }}&gt;\n\n        &lt;Grid container spacing={7} sx={{ textAlign: \"center\", verticalAlign: \"middle\" }} &gt;\n          &lt;Grid item xs sx={{ display: 'flex' }}  &gt;\n            &lt;item&gt; &lt;Image src=\"/favicon.ico\" alt=\"lol\" width=\"260\" height=\"50\" padding='50 0 0' /&gt; &lt;/item&gt;\n          &lt;/Grid&gt;\n        &lt;/Grid&gt;\n      &lt;/Toolbar&gt;\n      &lt;AppBar position=\"sticky\" maxWidth=\"sm\" sx={{ verticalAlign: \"middle\", textAlign: 'center', display: 'flex', lineHeight: '10px', justifyContent: 'flex-end', top: 'auto', bottom: 7, px: 'auto', color: '#3a3632', fontcolor: '#faf8f7' }}&gt;\n        &lt;Toolbar sx={{ display: 'flex' }} &gt;\n          &lt;Grid container spacing={7} sx={{ textAlign: \"center\", verticalAlign: \"middle\" }} &gt;\n\n            &lt;Grid item xs sx={{ display: 'flex' }}  &gt;\n\n              &lt;item&gt;\n                &lt;IconButton\n                  size=\"large\"\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  sx={{ mr: 2, hover: \"outline - 2\", pl: 2 }}\n                &gt;\n                  &lt;ViewCompactRoundedIcon sx={{ color: '#F1EFED' }} /&gt;\n                &lt;/IconButton&gt;\n              &lt;/item&gt;\n            &lt;/Grid&gt;\n            &lt;Grid item xs sx={{ color: '#F1EFED', ml: '5rem' }} ref={containerRef}&gt;\n\n              &lt;item onClick={handleChange} &gt; &lt;Typography variant=\"h6\" &gt;Product&lt;/Typography&gt;\n\n              &lt;/item&gt;\n\n            &lt;/Grid&gt;\n\n            &lt;Grid item xs sx={{ color: '#F1EFED', ml: '-5rem' }}&gt;\n              &lt;item&gt; &lt;Typography variant=\"h6\" sx={{ color: '#F1EFED' }}&gt;Service&lt;/Typography&gt;&lt;/item&gt;\n            &lt;/Grid&gt;\n\n            &lt;Grid item xs sx={{ color: '#F1EFED', ml: '-5rem' }}&gt;\n              &lt;item&gt; &lt;Typography variant=\"h6\" &gt;Development&lt;/Typography&gt;&lt;/item&gt;\n            &lt;/Grid&gt;\n\n\n            &lt;Grid item xs sx={{ color: '#F1EFED', ml: '-5em' }}&gt;\n              &lt;item&gt; &lt;Typography variant=\"h6\" &gt;Contact US&lt;/Typography&gt;&lt;/item&gt;\n            &lt;/Grid&gt;\n\n            &lt;Grid item xs sx={{ color: '#F1EFED', ml: '-5rem' }}&gt;\n              &lt;item&gt; &lt;Typography variant=\"h6\" &gt;About US&lt;/Typography&gt;&lt;/item&gt;\n            &lt;/Grid&gt;\n            {/* &lt;Typography variant=\"h6\" gutterBottom component=\"div\" sx={{ p: 2, pb: 0, top: 'auto', bottom: 2 }}&gt;\n            &lt;MuiLink color=\"inherit\" href=\"/\"&gt;\n              &lt;HomeIcon sx={{ color: '#faf8f7' }} /&gt; Home\n            &lt;/MuiLink&gt;{' '} \n\n          &lt;/Typography&gt;  */}\n\n            &lt;Grid item xs sx={{ justifyContent: 'flex-end' }}&gt;\n\n              &lt;item&gt;\n                &lt;Box sx={{ flexGrow: 1, backgroundColor: '#3a3632' }} /&gt;\n                &lt;Box position='left' sx={{ display: { xs: 'none', md: 'flex' } }}&gt;\n                  &lt;ButtonGroup variant=\"contained\" ref={anchorRef} aria-label=\"split button\" &gt;\n                    &lt;Button onClick={handleClick} sx={{ color: '#faf8f7', border: 2, backgroundColor: '#3a3632' }}&gt;{options[selectedIndex]}&lt;/Button&gt;\n                    &lt;Button\n                      size=\"small\"\n                      aria-controls={open ? 'split-button-menu' : undefined}\n                      aria-expanded={open ? 'true' : undefined}\n                      aria-label=\"select merge strategy\"\n                      aria-haspopup=\"menu\"\n                      onClick={handleToggle}\n                    &gt;\n                      &lt;ArrowDropDownIcon sx={{ color: '#faf8f7' }} /&gt;\n                    &lt;/Button&gt;\n                  &lt;/ButtonGroup&gt;\n                  &lt;Popper\n                    sx={{\n                      zIndex: 1, width: '20%', justifyContent: 'flex-end', aligntext: 'middle', backgroundColor: '#3a3632'\n                    }}\n                    open={open}\n                    anchorEl={anchorRef.current}\n                    role={undefined}\n                    transition\n                    disablePortal\n                  &gt;\n                    {({ TransitionProps, placement }) =&gt; (\n                      &lt;Grow sx={{ zIndex: '10' }}\n                        {...TransitionProps}\n                        style={{\n                          transformOrigin:\n                            placement === 'bottom' ? 'center top' : 'center bottom',\n                        }}\n                      &gt;\n                        &lt;Paper sx={{ height: '100%', backgroundColor: '#3a3632', color: '#faf8f7' }}&gt;\n                          &lt;ClickAwayListener onClickAway={handleClose}&gt;\n                            &lt;MenuList id=\"split-button-menu\" autoFocusItem sx={{ color: '#faf8f7', backgroundColor: '#3a3632', textColor: '#faf8f7' }}&gt;\n                              {options.map((option, index) =&gt; (\n                                &lt;MenuItem\n                                  key={option}\n                                  disabled={index === 2}\n                                  selected={index === selectedIndex}\n                                  onClick={(event) =&gt; handleMenuItemClick(event, index)}\n                                &gt;\n                                  {option}\n                                &lt;/MenuItem&gt;\n                              ))}\n                            &lt;/MenuList&gt;\n                          &lt;/ClickAwayListener&gt;\n                        &lt;/Paper&gt;\n                      &lt;/Grow&gt;\n                    )}\n                  &lt;/Popper&gt;\n\n                &lt;/Box&gt;\n              &lt;/item&gt;           &lt;/Grid&gt;\n          &lt;/Grid&gt;\n        &lt;/Toolbar&gt;\n      &lt;/AppBar&gt;\n      &lt;Grid sx={{ width: '100%' , height: '100%', backgroundColor: '#3a3632', color: '#faf8f7', zIndex: 1 }}&gt; &lt;Slide direction=\"down\" in={clicked} container={containerRef.current} mountOnEnter unmountOnExit&gt;\n        &lt;Box&gt; &lt;BrokenComponantTabbes /&gt; &lt;/Box&gt;\n\n      &lt;/Slide&gt;\n      &lt;/Grid&gt;\n\n\n\n    &lt;/React.Fragment&gt;\n  );\n}\n\n\nexport default Navigations\n\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n","body_markdown":"lots of guys think simple popup would do; lot's guys think modal would do but I think a <Box> is more generic way to achieve it ; however it is never ending saga. \n```\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Switch from '@mui/material/Switch';\nimport Paper from '@mui/material/Paper';\nimport Slide from '@mui/material/Slide';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { Card } from '@mui/material';\n\nexport default function SimpleSlide() {\n  const [checked, setChecked] = React.useState(false);\n  //const [checked, setChecked] = React.useState(false);\n  const containerRef = React.useRef(null);\n  const handleChange = () => {\n    setChecked((prev) => !prev);\n  };\n\n  return (\n    <Box sx={{ height: 'fit-content' }}>\n      <Box sx={{ width: `fit-content` }} ref={containerRef}>\n          <Box onClick={handleChange}>my hero </Box>\n        \n        <Slide direction=\"up\" container={containerRef.current} in={checked} mountOnEnter unmountOnExit>\n      <Card sx={{ m: 1 }} elevation={1}>\n    <Box  component=\"svg\" sx={{ width: 100, height: 100 }}>\n      <Box\n        component=\"polygon\"\n        sx={{\n          fill: (theme) => theme.palette.common.red,\n          stroke: (theme) => theme.palette.divider,\n          strokeWidth: 1,\n        }}\n        points=\"0,0 50,50, 100,100, 0,100\"\n      />\n    </Box>\n  </Card>\n        </Slide>\n      </Box>\n    </Box>\n  );\n}\n```\n\nReplace the code from this card and put you menu and menu item into this to achieve a mega menu \n\n```\n<Card sx={{ m: 1 }} elevation={1}>\n    <Box  component=\"svg\" sx={{ width: 100, height: 100 }}>\n      <Box\n        component=\"polygon\"\n        sx={{\n          fill: (theme) => theme.palette.common.red,\n          stroke: (theme) => theme.palette.divider,\n          strokeWidth: 1,\n        }}\n        points=\"0,0 50,50, 100,100, 0,100\"\n      />\n    </Box>\n  </Card>\n      \n```\n[Ref Link : it is world famous MUI ; it's back as it was never left us behind](https://mui.com/material-ui/transitions/)\n\nBut in a React Grid it seems little messy : still it does a job what it is meant to be \n```\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\n//import Grid from '@mui/material/Grid'; // Grid version 1\nimport Grid2 from '@mui/material/Unstable_Grid2';\nimport { styled, alpha } from '@mui/material/styles';\n//import Image from '@mui/material/Image';\nimport { Slide, Popover, Grid, ClickAwayListener, Grow, Button, MenuList, ButtonGroup, Container, Toolbar, Typography, CssBaseline, Paper, Box, AppBar, Popper } from '@mui/material';\nimport MuiLink from '@mui/material/Link';\nimport Badge from '@mui/material/Badge';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport HomeIcon from '@mui/icons-material/Home';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport MailIcon from '@mui/icons-material/Mail';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport MoreIcon from '@mui/icons-material/MoreVert';\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\nimport * as Colors from '@mui/material/colors';\nimport Image from 'next/image';\nimport ViewCompactRoundedIcon from '@mui/icons-material/ViewCompactRounded';\nimport BrokenComponantTabbes from '../src/BrokenComponantTabbes'\n\n\n// Note that you normally won't need to set the window ref as useScrollTrigger\n// will defau\n\n\n\nconst options = ['View Accounts', 'Contact Sales', 'Logedin users']\n\n\n\n\nconst ConditionalWrapper = ({ children, condition }) => {\n  return condition ? (\n    <div>{children}</div>\n  ) : (\n    children\n  )\n}\n\n\nconst Navigations = () => {\n  //const brown = brown[900];\n  const [clicked, setClicked] = React.useState(false);\n  const containerRef = React.useRef(null);\n  const handleChange = () => {\n    setClicked((prev) => !prev);\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n    </Menu>\n  );\n\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Toolbar sx={{ zIndex: 1 }}>\n\n        <Grid container spacing={7} sx={{ textAlign: \"center\", verticalAlign: \"middle\" }} >\n          <Grid item xs sx={{ display: 'flex' }}  >\n            <item> <Image src=\"/favicon.ico\" alt=\"lol\" width=\"260\" height=\"50\" padding='50 0 0' /> </item>\n          </Grid>\n        </Grid>\n      </Toolbar>\n      <AppBar position=\"sticky\" maxWidth=\"sm\" sx={{ verticalAlign: \"middle\", textAlign: 'center', display: 'flex', lineHeight: '10px', justifyContent: 'flex-end', top: 'auto', bottom: 7, px: 'auto', color: '#3a3632', fontcolor: '#faf8f7' }}>\n        <Toolbar sx={{ display: 'flex' }} >\n          <Grid container spacing={7} sx={{ textAlign: \"center\", verticalAlign: \"middle\" }} >\n\n            <Grid item xs sx={{ display: 'flex' }}  >\n\n              <item>\n                <IconButton\n                  size=\"large\"\n                  edge=\"start\"\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  sx={{ mr: 2, hover: \"outline - 2\", pl: 2 }}\n                >\n                  <ViewCompactRoundedIcon sx={{ color: '#F1EFED' }} />\n                </IconButton>\n              </item>\n            </Grid>\n            <Grid item xs sx={{ color: '#F1EFED', ml: '5rem' }} ref={containerRef}>\n\n              <item onClick={handleChange} > <Typography variant=\"h6\" >Product</Typography>\n\n              </item>\n\n            </Grid>\n\n            <Grid item xs sx={{ color: '#F1EFED', ml: '-5rem' }}>\n              <item> <Typography variant=\"h6\" sx={{ color: '#F1EFED' }}>Service</Typography></item>\n            </Grid>\n\n            <Grid item xs sx={{ color: '#F1EFED', ml: '-5rem' }}>\n              <item> <Typography variant=\"h6\" >Development</Typography></item>\n            </Grid>\n\n\n            <Grid item xs sx={{ color: '#F1EFED', ml: '-5em' }}>\n              <item> <Typography variant=\"h6\" >Contact US</Typography></item>\n            </Grid>\n\n            <Grid item xs sx={{ color: '#F1EFED', ml: '-5rem' }}>\n              <item> <Typography variant=\"h6\" >About US</Typography></item>\n            </Grid>\n            {/* <Typography variant=\"h6\" gutterBottom component=\"div\" sx={{ p: 2, pb: 0, top: 'auto', bottom: 2 }}>\n            <MuiLink color=\"inherit\" href=\"/\">\n              <HomeIcon sx={{ color: '#faf8f7' }} /> Home\n            </MuiLink>{' '} \n \n          </Typography>  */}\n\n            <Grid item xs sx={{ justifyContent: 'flex-end' }}>\n\n              <item>\n                <Box sx={{ flexGrow: 1, backgroundColor: '#3a3632' }} />\n                <Box position='left' sx={{ display: { xs: 'none', md: 'flex' } }}>\n                  <ButtonGroup variant=\"contained\" ref={anchorRef} aria-label=\"split button\" >\n                    <Button onClick={handleClick} sx={{ color: '#faf8f7', border: 2, backgroundColor: '#3a3632' }}>{options[selectedIndex]}</Button>\n                    <Button\n                      size=\"small\"\n                      aria-controls={open ? 'split-button-menu' : undefined}\n                      aria-expanded={open ? 'true' : undefined}\n                      aria-label=\"select merge strategy\"\n                      aria-haspopup=\"menu\"\n                      onClick={handleToggle}\n                    >\n                      <ArrowDropDownIcon sx={{ color: '#faf8f7' }} />\n                    </Button>\n                  </ButtonGroup>\n                  <Popper\n                    sx={{\n                      zIndex: 1, width: '20%', justifyContent: 'flex-end', aligntext: 'middle', backgroundColor: '#3a3632'\n                    }}\n                    open={open}\n                    anchorEl={anchorRef.current}\n                    role={undefined}\n                    transition\n                    disablePortal\n                  >\n                    {({ TransitionProps, placement }) => (\n                      <Grow sx={{ zIndex: '10' }}\n                        {...TransitionProps}\n                        style={{\n                          transformOrigin:\n                            placement === 'bottom' ? 'center top' : 'center bottom',\n                        }}\n                      >\n                        <Paper sx={{ height: '100%', backgroundColor: '#3a3632', color: '#faf8f7' }}>\n                          <ClickAwayListener onClickAway={handleClose}>\n                            <MenuList id=\"split-button-menu\" autoFocusItem sx={{ color: '#faf8f7', backgroundColor: '#3a3632', textColor: '#faf8f7' }}>\n                              {options.map((option, index) => (\n                                <MenuItem\n                                  key={option}\n                                  disabled={index === 2}\n                                  selected={index === selectedIndex}\n                                  onClick={(event) => handleMenuItemClick(event, index)}\n                                >\n                                  {option}\n                                </MenuItem>\n                              ))}\n                            </MenuList>\n                          </ClickAwayListener>\n                        </Paper>\n                      </Grow>\n                    )}\n                  </Popper>\n\n                </Box>\n              </item>           </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <Grid sx={{ width: '100%' , height: '100%', backgroundColor: '#3a3632', color: '#faf8f7', zIndex: 1 }}> <Slide direction=\"down\" in={clicked} container={containerRef.current} mountOnEnter unmountOnExit>\n        <Box> <BrokenComponantTabbes /> </Box>\n        \n      </Slide>\n      </Grid>\n\n\n\n    </React.Fragment>\n  );\n}\n\n\nexport default Navigations\n\n```\n\n","user":{"name":"sayantan chakraborty","username":"cadentic","twitter_username":"Neutralist2022","github_username":"cadentic","user_id":927783,"website_url":"https://cadentic.net","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--v_FJzaBd--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/927783/89c7311e-1030-4abf-b18c-ffe944d41cce.png","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--jncojlv4--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/927783/89c7311e-1030-4abf-b18c-ffe944d41cce.png"}}