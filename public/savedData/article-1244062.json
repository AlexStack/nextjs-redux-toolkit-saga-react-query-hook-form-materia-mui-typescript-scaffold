{"type_of":"article","id":1244062,"title":"How to use the Dev.to API with React and Typescript in 2022","description":"Let's take a look at how to do it.  First, create a React with Typescript project.    npx...","readable_publish_date":"Nov 5","slug":"react-with-typescript-to-get-data-from-devto-api-json-7a","path":"/yuya0114/react-with-typescript-to-get-data-from-devto-api-json-7a","url":"https://dev.to/yuya0114/react-with-typescript-to-get-data-from-devto-api-json-7a","comments_count":0,"public_reactions_count":2,"collection_id":null,"published_timestamp":"2022-11-05T04:11:09Z","positive_reactions_count":2,"cover_image":null,"social_image":"https://dev.to/social_previews/article/1244062.png","canonical_url":"https://dev.to/yuya0114/react-with-typescript-to-get-data-from-devto-api-json-7a","created_at":"2022-11-05T02:27:50Z","edited_at":"2022-11-05T06:25:35Z","crossposted_at":null,"published_at":"2022-11-05T04:11:09Z","last_comment_at":"2022-11-05T04:11:09Z","reading_time_minutes":2,"tag_list":"typescript, react, beginners, javascript","tags":["typescript","react","beginners","javascript"],"body_html":"<p>Let's take a look at how to do it.</p>\n\n<p>First, create a React with Typescript project.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>npx create-react-app . --template typescript\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>This time, let's using dev.to API<br>\ndev.to API return the posts information that you posted</p>\n\n<p>And also, this time i'm using a fetch API.</p>\n<h3>\n  <a name=\"apptsx\" href=\"#apptsx\">\n  </a>\n  App.tsx\n</h3>\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">https://dev.to/api/articles?username=username</span><span class=\"dl\">\"</span><span class=\"p\">)</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">response</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">())</span>\n  <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">records</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">records</span><span class=\"p\">));</span>\n\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n<h3>\n  <a name=\"console\" href=\"#console\">\n  </a>\n  console\n</h3>\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>(Toã€€excerpt and just example)\ncanonical_url: \"https://dev.to/username/title\"\ncreated_at: \"2022-10-30T00:00:00Z\"\ndescription: \"This is description...\"\nid: 1234567\npublished_at: \"2022-10-30T00:00:00Z\"\npublished_timestamp: \"2022-10-30T00:00:00Z\"\nreadable_publish_date: \"Oct 30\"\ntag_list: (3) ['java', 'typescript', 'react']\ntags: \"java, typescript, react\"\ntitle: \"This is title\"\ntype_of: \"article\"\nurl: \"https://dev.to/username/ownUrl\"\n...\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n<h2>\n  <a name=\"the-next-step-is-to-display-this-on-page\" href=\"#the-next-step-is-to-display-this-on-page\">\n  </a>\n  The next step is to display this on page.\n</h2>\n<h3>\n  <a name=\"apptsx\" href=\"#apptsx\">\n  </a>\n  App.tsx\n</h3>\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"k\">import</span> <span class=\"nx\">React</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">useState</span><span class=\"p\">,</span> <span class=\"nx\">useEffect</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"dl\">\"</span><span class=\"s2\">./App.css</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">App</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"p\">[</span><span class=\"nx\">records</span><span class=\"p\">,</span> <span class=\"nx\">setRecords</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">useState</span><span class=\"p\">([]);</span>\n\n  <span class=\"nx\">useEffect</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">https://dev.to/api/articles?username=username</span><span class=\"dl\">\"</span><span class=\"p\">)</span>\n    <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">response</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">())</span>\n    <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">records</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">setRecords</span><span class=\"p\">(</span><span class=\"nx\">records</span><span class=\"p\">));</span>\n  <span class=\"p\">},</span> <span class=\"p\">[]);</span>\n\n  <span class=\"k\">return</span> <span class=\"p\">(</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span>\n      <span class=\"p\">{</span><span class=\"nx\">records</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">((</span><span class=\"nx\">record</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">(</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">li</span> <span class=\"nx\">key</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">record</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">}</span><span class=\"o\">&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span><span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nx\">record</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">}</span><span class=\"o\">&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span>          <span class=\"o\">&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span><span class=\"na\">Name</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nx\">record</span><span class=\"p\">.</span><span class=\"nx\">Name</span><span class=\"p\">}</span><span class=\"o\">&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"sr\">/li</span><span class=\"err\">&gt;\n</span>      <span class=\"p\">))}</span>\n    <span class=\"o\">&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span>  <span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">App</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<p>This code is using \"useState\" and \"useEffec\"<br>\nI don't explain about these components now.<br>\n(if you don\"t know these components ,you should search on google)</p>\n\n<p>You load App.tsx at first time, useEffect do fetch API and store the data into \"records\".<br>\nand then, call setRecords function.</p>\n\n<p>finally, you can access the json data.</p>\n\n<p>In the return, using map method set the list.</p>\n\n<p>but Typescript does not allow these code now.</p>\n\n<p>Try to reproduce it in your local workspace.<br>\nYou should see the following error<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>TS2339: Property 'Name' does not exist on type 'never'.\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>never type is basically a type that cannot be assigned a value.<br>\nbecause we are initializing the useState with an empty array.<br>\nTypescript infers that useState is always an empty array.</p>\n\n<p>In other words, the type of useState must be specified.</p>\n\n<p>This time a separate file for useState. <br>\nI'm going to create  a model file and specify it.</p>\n\n<h3>\n  <a name=\"recordsmodelts\" href=\"#recordsmodelts\">\n  </a>\n  records.model.ts\n</h3>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"k\">export</span> <span class=\"kr\">interface</span> <span class=\"nx\">recordsModel</span> <span class=\"p\">{</span>\n  <span class=\"nl\">id</span><span class=\"p\">:</span> <span class=\"kr\">number</span><span class=\"p\">;</span>\n  <span class=\"nl\">title</span><span class=\"p\">:</span> <span class=\"kr\">string</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>This time use only id and title.</p>\n\n<p>import this file in the App.tsx<br>\nand specify the types of useState</p>\n\n<h3>\n  <a name=\"apptsx\" href=\"#apptsx\">\n  </a>\n  App.tsx\n</h3>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"k\">import</span> <span class=\"nx\">React</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">useState</span><span class=\"p\">,</span> <span class=\"nx\">useEffect</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"dl\">\"</span><span class=\"s2\">./App.css</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">recordsModel</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">./records.model</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">App</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"p\">[</span><span class=\"nx\">records</span><span class=\"p\">,</span> <span class=\"nx\">setRecords</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">useState</span><span class=\"o\">&lt;</span><span class=\"nx\">recordsModel</span><span class=\"p\">[]</span><span class=\"o\">&gt;</span><span class=\"p\">([]);</span>\n\n  <span class=\"nx\">useEffect</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">https://dev.to/api/articles?username=username</span><span class=\"dl\">\"</span><span class=\"p\">)</span>\n      <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">response</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">response</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">())</span>\n      <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">records</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">records</span><span class=\"p\">));</span>\n  <span class=\"p\">},</span> <span class=\"p\">[]);</span>\n\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">records</span><span class=\"p\">);</span>\n\n  <span class=\"k\">return</span> <span class=\"p\">(</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span>\n      <span class=\"p\">{</span><span class=\"nx\">records</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">((</span><span class=\"nx\">record</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">(</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">li</span> <span class=\"nx\">key</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">record</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">}</span><span class=\"o\">&gt;</span>\n          <span class=\"o\">&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span><span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nx\">record</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">}</span> <span class=\"o\">&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span>          <span class=\"o\">&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span><span class=\"na\">Name</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nx\">record</span><span class=\"p\">.</span><span class=\"nx\">title</span><span class=\"p\">}</span><span class=\"o\">&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"sr\">/li</span><span class=\"err\">&gt;\n</span>      <span class=\"p\">))}</span>\n    <span class=\"o\">&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span>  <span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">App</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Using the model specifies the data types for data retrieved from json.<br>\nOtherwise Typescript will make incorrect inferences.<br>\nRemember to specify the model.</p>\n\n<p>thank you</p>\n\n","body_markdown":"\n\nLet's take a look at how to do it.\n\n\nFirst, create a React with Typescript project.\n```\nnpx create-react-app . --template typescript\n```\n\nThis time, let's using dev.to API\ndev.to API return the posts information that you posted\n\nAnd also, this time i'm using a fetch API.\n\n\n### App.tsx\n```typescript\nfetch(\"https://dev.to/api/articles?username=username\")\n  .then((response) => response.json())\n  .then((records) => console.log(records));\n\n```\n\n### console\n```\n(Toã€€excerpt and just example)\ncanonical_url: \"https://dev.to/username/title\"\ncreated_at: \"2022-10-30T00:00:00Z\"\ndescription: \"This is description...\"\nid: 1234567\npublished_at: \"2022-10-30T00:00:00Z\"\npublished_timestamp: \"2022-10-30T00:00:00Z\"\nreadable_publish_date: \"Oct 30\"\ntag_list: (3) ['java', 'typescript', 'react']\ntags: \"java, typescript, react\"\ntitle: \"This is title\"\ntype_of: \"article\"\nurl: \"https://dev.to/username/ownUrl\"\n...\n```\n\n## The next step is to display this on page.\n\n### App.tsx\n```typescript\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://dev.to/api/articles?username=username\")\n    .then((response) => response.json())\n    .then((records) => setRecords(records));\n  }, []);\n\n  return (\n    <div>\n      {records.map((record) => (\n        <li key={record.id}>\n          <div>id: {record.id}</div>\n          <div>Name: {record.Name}</div>\n        </li>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n```\n\nThis code is using \"useState\" and \"useEffec\"\nI don't explain about these components now.\n(if you don\"t know these components ,you should search on google)\n\nYou load App.tsx at first time, useEffect do fetch API and store the data into \"records\".\nand then, call setRecords function.\n\nfinally, you can access the json data.\n\nIn the return, using map method set the list.\n\nbut Typescript does not allow these code now.\n\nTry to reproduce it in your local workspace.\nYou should see the following error\n\n```\nTS2339: Property 'Name' does not exist on type 'never'.\n```\n\nnever type is basically a type that cannot be assigned a value.\nbecause we are initializing the useState with an empty array.\nTypescript infers that useState is always an empty array.\n\nIn other words, the type of useState must be specified.\n\nThis time a separate file for useState. \nI'm going to create  a model file and specify it.\n\n### records.model.ts\n```typescript\nexport interface recordsModel {\n  id: number;\n  title: string;\n}\n```\nThis time use only id and title.\n\nimport this file in the App.tsx\nand specify the types of useState\n\n### App.tsx\n```typescript\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { recordsModel } from \"./records.model\";\n\nfunction App() {\n  const [records, setRecords] = useState<recordsModel[]>([]);\n\n  useEffect(() => {\n    fetch(\"https://dev.to/api/articles?username=username\")\n      .then((response) => response.json())\n      .then((records) => console.log(records));\n  }, []);\n\n  console.log(records);\n\n  return (\n    <div>\n      {records.map((record) => (\n        <li key={record.id}>\n          <div>id: {record.id} </div>\n          <div>Name: {record.title}</div>\n        </li>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n```\n\nUsing the model specifies the data types for data retrieved from json.\nOtherwise Typescript will make incorrect inferences.\nRemember to specify the model.\n\n\nthank you","user":{"name":"Yuya Hirano","username":"yuya0114","twitter_username":null,"github_username":"YuyaHirano1994","user_id":933028,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--dnmqAVEr--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/933028/c399b233-697e-4bdb-994d-bc594164789e.jpeg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--zxJVWFi6--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/933028/c399b233-697e-4bdb-994d-bc594164789e.jpeg"}}