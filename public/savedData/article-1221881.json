{"type_of":"article","id":1221881,"title":"Building a chat app with Socket.io and React Native ü§Ø","description":"I wrote before on how to build a chat app with React, it got 1660 likes and 52955 views ü§©  So I have...","readable_publish_date":"Oct 17","slug":"building-a-chat-app-with-socketio-and-react-native-k1b","path":"/novu/building-a-chat-app-with-socketio-and-react-native-k1b","url":"https://dev.to/novu/building-a-chat-app-with-socketio-and-react-native-k1b","comments_count":49,"public_reactions_count":1056,"collection_id":null,"published_timestamp":"2022-10-17T11:00:37Z","positive_reactions_count":1056,"cover_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--2YfFiQf9--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qgnznlnobk4wl6luwubj.png","social_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--xaz9hFNl--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qgnznlnobk4wl6luwubj.png","canonical_url":"https://novu.co/blog/building-a-chat-app-with-socket-io-and-react-native/","created_at":"2022-10-17T08:32:30Z","edited_at":null,"crossposted_at":null,"published_at":"2022-10-17T11:00:37Z","last_comment_at":"2022-11-02T14:24:53Z","reading_time_minutes":16,"tag_list":"javascript, webdev, programming, reactnative","tags":["javascript","webdev","programming","reactnative"],"body_html":"<p>I wrote before on <a href=\"https://dev.tourl\">how to build a chat app with React</a>, it got 1660 likes and 52955 views ü§©</p>\n\n<p>So I have decided to make another one for React Native.</p>\n\n<h2>\n  <a name=\"what-is-this-article-about\" href=\"#what-is-this-article-about\">\n  </a>\n  What is this article about?\n</h2>\n\n<p>Chats are all around us, from Whatsapp to Facebook and Instagram, almost every platform offers a chat in some kind of variation.</p>\n\n<p>In Today's digital world we have all gone mobile! Just before this article I wrote a friend a message on Whatsapp.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--m3URvSiV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/km2w1ppw3yw9pd9na7mu.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--m3URvSiV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/km2w1ppw3yw9pd9na7mu.gif\" alt=\"Typing\" loading=\"lazy\" width=\"604\" height=\"454\" data-animated=\"true\"></a></p>\n\n<p>Chats are fun, you send a message to a person or a group, they see the message and reply back. Simple yet complex.<br>\nTo develop a chat app you would need to be aware of new messages as soon as they arrive.</p>\n\n<p><strong>In this article</strong>, we will do something a little bit different than the previous React tutorial. We will create a sign in screen where you can enter your name, create groups where people can join and show real-time messages between the people in the group.</p>\n<h2>\n  <a name=\"getting-live-information-from-the-server\" href=\"#getting-live-information-from-the-server\">\n  </a>\n  Getting Live Information From The Server ‚ÑπÔ∏è\n</h2>\n\n<p>There are two ways to get live information from your server about a new bid:</p>\n\n<p><strong>Use long-polling HTTP request</strong>, basically an HTTP request every 5 - 10 seconds to get information about a new bid.</p>\n\n<p><strong>Use an open-socket (Websockets)</strong> to get information directly from the server when a new bid arrives.</p>\n\n<p>In this article I will talk about <strong>Websockets</strong> and specifically on the Node.js library - <strong>Socket.io</strong></p>\n\n<p><a href=\"https://socket.io/\">Socket.io</a> is a popular JavaScript library that allows us to create real-time, bi-directional communication between software applications and a Node.js server.</p>\n<h2>\n  <a name=\"novu-the-first-opensource-notification-infrastructure\" href=\"#novu-the-first-opensource-notification-infrastructure\">\n  </a>\n  Novu - the first open-source notification infrastructure\n</h2>\n\n<p>Just a quick background about us. Novu is the first open-source <a href=\"https://novu.co\">notification infrastructure</a>. We basically help to manage all the product notifications. It can be <strong>In-App</strong> (the bell icon like you have in the Dev Community - <strong>Websockets</strong>), Emails, SMSs and so on.</p>\n\n<p>I would be super happy if you could give us a star! It will help me to make more articles every week üöÄ<br>\n<a href=\"https://github.com/novuhq/novu\">https://github.com/novuhq/novu</a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--nshlTtHJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yn90yvsd87tgik03c08v.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--nshlTtHJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yn90yvsd87tgik03c08v.gif\" alt=\"Novu\" loading=\"lazy\" width=\"880\" height=\"482\" data-animated=\"true\"></a><br>\nWe are sending some awesome swag during Hacktoberfest üòá</p>\n<h2>\n  <a name=\"how-to-create-a-real-time-connection-between-react-native-amp-socketio\" href=\"#how-to-create-a-real-time-connection-between-react-native-amp-socketio\">\n  </a>\n  How to create a real time connection between React Native &amp; Socket.io\n</h2>\n\n<p>In this tutorial, we'll build the chat application with¬†<a href=\"https://expo.dev/\">Expo</a>¬†- an open-source framework that enables us to create native apps for IOS and Android by writing React and JavaScript code.</p>\n<h3>\n  <a name=\"installing-expo\" href=\"#installing-expo\">\n  </a>\n  Installing Expo\n</h3>\n\n<p><a href=\"https://expo.dev/\">Expo</a>¬†saves us from the complex configurations required to create a native application with¬†<a href=\"https://reactnative.dev/docs/getting-started\">React Native CLI</a>, making it the easiest and fastest way to build and publish React Native apps.</p>\n\n<p>Ensure you have the¬†<a href=\"https://docs.expo.dev/get-started/installation/#1-expo-cli\">Expo CLI</a>,¬†<a href=\"https://nodejs.org/en/\">Node.js</a>, and¬†<a href=\"https://git-scm.com/\">Git</a>¬†installed on your computer. Then, create the project folder and an Expo React Native app by running the code below.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code><span class=\"nb\">mkdir </span>chat-app\n<span class=\"nb\">cd </span>chat-app\nexpo init app\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Expo allows us to create native applications using the <a href=\"https://docs.expo.dev/introduction/managed-vs-bare/#managed-workflow\">Managed</a> or <a href=\"https://docs.expo.dev/introduction/managed-vs-bare/#bare-workflow\">Bare Workflow</a>. We'll use the blank Managed Workflow in this tutorial because all the necessary configurations have been completed for us.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code>? Choose a template: ‚Ä∫ - Use arrow-keys. Return to submit.\n    <span class=\"nt\">-----</span> Managed workflow <span class=\"nt\">-----</span>\n‚ùØ   blank               a minimal app as clean as an empty canvas\n    blank <span class=\"o\">(</span>TypeScript<span class=\"o\">)</span>  same as blank but with TypeScript configuration\n    tabs <span class=\"o\">(</span>TypeScript<span class=\"o\">)</span>   several example screens and tabs using react-navigation and TypeScript\n    <span class=\"nt\">-----</span> Bare workflow <span class=\"nt\">-----</span>\n    minimal             bare and minimal, just the essentials to get you started\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Install Socket.io Client API to the React Native app.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code><span class=\"nb\">cd </span>app\nexpo <span class=\"nb\">install </span>socket.io-client\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Create a <code>socket.js</code> within a <code>utils</code> folder and copy the code below into the file<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code><span class=\"nb\">mkdir </span>utils\n<span class=\"nb\">touch </span>socket.js\n//üëáüèª Paste within socket.js file\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>And add<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">io</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">socket.io-client</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"kd\">const</span> <span class=\"nx\">socket</span> <span class=\"o\">=</span> <span class=\"nx\">io</span><span class=\"p\">.</span><span class=\"nx\">connect</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">http://localhost:4000</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">socket</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>The code snippet above creates a real-time connection to the server hosted at that URL. (<em>We'll create the server in the upcoming section</em>).</p>\n\n<p>Create a <code>styles.js</code> file within the <code>utils</code> folder and copy the code below into the file. It contains all the styling for the chat application.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">StyleSheet</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react-native</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">styles</span> <span class=\"o\">=</span> <span class=\"nx\">StyleSheet</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">({</span>\n    <span class=\"na\">loginscreen</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">flex</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"na\">backgroundColor</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#EEF1FF</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">alignItems</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">justifyContent</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">padding</span><span class=\"p\">:</span> <span class=\"mi\">12</span><span class=\"p\">,</span>\n        <span class=\"na\">width</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">100%</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">loginheading</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">fontSize</span><span class=\"p\">:</span> <span class=\"mi\">26</span><span class=\"p\">,</span>\n        <span class=\"na\">marginBottom</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">logininputContainer</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">width</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">100%</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">alignItems</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">justifyContent</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">logininput</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">borderWidth</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"na\">width</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">90%</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">padding</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"p\">,</span>\n        <span class=\"na\">borderRadius</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">loginbutton</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">backgroundColor</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">green</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">padding</span><span class=\"p\">:</span> <span class=\"mi\">12</span><span class=\"p\">,</span>\n        <span class=\"na\">marginVertical</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"na\">width</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">60%</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">borderRadius</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">50%</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">elevation</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">loginbuttonText</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">textAlign</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">color</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#fff</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">fontWeight</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">600</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">chatscreen</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">backgroundColor</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#F7F7F7</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">flex</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"na\">padding</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"na\">position</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">relative</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">chatheading</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">fontSize</span><span class=\"p\">:</span> <span class=\"mi\">24</span><span class=\"p\">,</span>\n        <span class=\"na\">fontWeight</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">bold</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">color</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">green</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">chattopContainer</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">backgroundColor</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#F7F7F7</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">height</span><span class=\"p\">:</span> <span class=\"mi\">70</span><span class=\"p\">,</span>\n        <span class=\"na\">width</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">100%</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">padding</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">,</span>\n        <span class=\"na\">justifyContent</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">marginBottom</span><span class=\"p\">:</span> <span class=\"mi\">15</span><span class=\"p\">,</span>\n        <span class=\"na\">elevation</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">chatheader</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">flexDirection</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">row</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">alignItems</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">justifyContent</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">space-between</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">chatlistContainer</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">paddingHorizontal</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">chatemptyContainer</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">width</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">100%</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">height</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">80%</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">alignItems</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">justifyContent</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">chatemptyText</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"na\">fontWeight</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">bold</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"na\">fontSize</span><span class=\"p\">:</span> <span class=\"mi\">24</span><span class=\"p\">,</span> <span class=\"na\">paddingBottom</span><span class=\"p\">:</span> <span class=\"mi\">30</span> <span class=\"p\">},</span>\n    <span class=\"na\">messagingscreen</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">flex</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">messaginginputContainer</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">width</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">100%</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">minHeight</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">,</span>\n        <span class=\"na\">backgroundColor</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">white</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">paddingVertical</span><span class=\"p\">:</span> <span class=\"mi\">30</span><span class=\"p\">,</span>\n        <span class=\"na\">paddingHorizontal</span><span class=\"p\">:</span> <span class=\"mi\">15</span><span class=\"p\">,</span>\n        <span class=\"na\">justifyContent</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">flexDirection</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">row</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">messaginginput</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">borderWidth</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"na\">padding</span><span class=\"p\">:</span> <span class=\"mi\">15</span><span class=\"p\">,</span>\n        <span class=\"na\">flex</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"na\">marginRight</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"na\">borderRadius</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">messagingbuttonContainer</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">width</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">30%</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">backgroundColor</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">green</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">borderRadius</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n        <span class=\"na\">alignItems</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">justifyContent</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">borderRadius</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">modalbutton</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">width</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">40%</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">height</span><span class=\"p\">:</span> <span class=\"mi\">45</span><span class=\"p\">,</span>\n        <span class=\"na\">backgroundColor</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">green</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">borderRadius</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n        <span class=\"na\">alignItems</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">justifyContent</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">color</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#fff</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">modalbuttonContainer</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">flexDirection</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">row</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">justifyContent</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">space-between</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">marginTop</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">modaltext</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">color</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#fff</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">modalContainer</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">width</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">100%</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">borderTopColor</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#ddd</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">borderTopWidth</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"na\">elevation</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"na\">height</span><span class=\"p\">:</span> <span class=\"mi\">400</span><span class=\"p\">,</span>\n        <span class=\"na\">backgroundColor</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#fff</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">position</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">absolute</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">bottom</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"na\">zIndex</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"na\">paddingVertical</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">,</span>\n        <span class=\"na\">paddingHorizontal</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">modalinput</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">borderWidth</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n        <span class=\"na\">padding</span><span class=\"p\">:</span> <span class=\"mi\">15</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">modalsubheading</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">fontSize</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">,</span>\n        <span class=\"na\">fontWeight</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">bold</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">marginBottom</span><span class=\"p\">:</span> <span class=\"mi\">15</span><span class=\"p\">,</span>\n        <span class=\"na\">textAlign</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">mmessageWrapper</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">width</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">100%</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">alignItems</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">flex-start</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">marginBottom</span><span class=\"p\">:</span> <span class=\"mi\">15</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">mmessage</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">maxWidth</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">50%</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">backgroundColor</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#f5ccc2</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">padding</span><span class=\"p\">:</span> <span class=\"mi\">15</span><span class=\"p\">,</span>\n        <span class=\"na\">borderRadius</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"na\">marginBottom</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">mvatar</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">marginRight</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">cchat</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">width</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">100%</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">flexDirection</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">row</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">alignItems</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">borderRadius</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n        <span class=\"na\">paddingHorizontal</span><span class=\"p\">:</span> <span class=\"mi\">15</span><span class=\"p\">,</span>\n        <span class=\"na\">backgroundColor</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#fff</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">height</span><span class=\"p\">:</span> <span class=\"mi\">80</span><span class=\"p\">,</span>\n        <span class=\"na\">marginBottom</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">cavatar</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">marginRight</span><span class=\"p\">:</span> <span class=\"mi\">15</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">cusername</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">fontSize</span><span class=\"p\">:</span> <span class=\"mi\">18</span><span class=\"p\">,</span>\n        <span class=\"na\">marginBottom</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n        <span class=\"na\">fontWeight</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">bold</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">cmessage</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">fontSize</span><span class=\"p\">:</span> <span class=\"mi\">14</span><span class=\"p\">,</span>\n        <span class=\"na\">opacity</span><span class=\"p\">:</span> <span class=\"mf\">0.7</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">crightContainer</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">flexDirection</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">row</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">justifyContent</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">space-between</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"na\">flex</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">ctime</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">opacity</span><span class=\"p\">:</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">});</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Install React Navigation and its dependencies.¬†<a href=\"https://reactnavigation.org/\">React Navigation</a>¬†allows us to navigate from one screen to another within a React Native application.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code>npm <span class=\"nb\">install</span> @react-navigation/native\nnpx expo <span class=\"nb\">install </span>react-native-screens react-native-safe-area-context\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h3>\n  <a name=\"setting-up-the-socketio-nodejs-server\" href=\"#setting-up-the-socketio-nodejs-server\">\n  </a>\n  Setting up the Socket.io Node.js server\n</h3>\n\n<p>Here, I will guide you through creating the Socket.io Node.js server for real-time communication with the React Native application.</p>\n\n<p>Create a <code>server</code> folder within the project folder.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code><span class=\"nb\">cd </span>chat-app\n<span class=\"nb\">mkdir </span>server\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Navigate into the server folder and create a <code>package.json</code> file.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code><span class=\"nb\">cd </span>server &amp; npm init <span class=\"nt\">-y</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Install Express.js, CORS, Nodemon, and Socket.io Server API.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code>npm <span class=\"nb\">install </span>express cors nodemon socket.io\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p><a href=\"https://expressjs.com/\">Express.js</a>¬†is a fast, minimalist framework that provides several features for building web applications in Node.js.¬†<a href=\"https://www.npmjs.com/package/cors\">CORS</a>¬†is a Node.js package that allows communication between different domains.</p>\n\n<p><a href=\"https://www.npmjs.com/package/nodemon\">Nodemon</a>¬†is a Node.js tool that automatically restarts the server after detecting file changes, and¬†<a href=\"https://socket.io/docs/v4/server-api/\">Socket.io</a>¬†allows us to configure a real-time connection on the server.</p>\n\n<p>Create an <code>index.js</code> file - the entry point to the Node.js server.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code><span class=\"nb\">touch </span>index.js\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Set up a simple Node.js server using Express.js. The code snippet below returns a JSON object when you visit the <code>http://localhost:4000/api</code> in your browser.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"c1\">//üëáüèª index.js</span>\n<span class=\"kd\">const</span> <span class=\"nx\">express</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">express</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nx\">express</span><span class=\"p\">();</span>\n<span class=\"kd\">const</span> <span class=\"nx\">PORT</span> <span class=\"o\">=</span> <span class=\"mi\">4000</span><span class=\"p\">;</span>\n\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"nx\">urlencoded</span><span class=\"p\">({</span> <span class=\"na\">extended</span><span class=\"p\">:</span> <span class=\"kc\">true</span> <span class=\"p\">}));</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">());</span>\n\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">/api</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">({</span>\n        <span class=\"na\">message</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Hello world</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">});</span>\n<span class=\"p\">});</span>\n\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"nx\">PORT</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`Server listening on </span><span class=\"p\">${</span><span class=\"nx\">PORT</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Import the HTTP and the CORS library to allow data transfer between the client and the server domains.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"kd\">const</span> <span class=\"nx\">express</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">express</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nx\">express</span><span class=\"p\">();</span>\n<span class=\"kd\">const</span> <span class=\"nx\">PORT</span> <span class=\"o\">=</span> <span class=\"mi\">4000</span><span class=\"p\">;</span>\n\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"nx\">urlencoded</span><span class=\"p\">({</span> <span class=\"na\">extended</span><span class=\"p\">:</span> <span class=\"kc\">true</span> <span class=\"p\">}));</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">());</span>\n\n<span class=\"c1\">//üëáüèª New imports</span>\n<span class=\"kd\">const</span> <span class=\"nx\">http</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">http</span><span class=\"dl\">\"</span><span class=\"p\">).</span><span class=\"nx\">Server</span><span class=\"p\">(</span><span class=\"nx\">app</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">cors</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">cors</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">cors</span><span class=\"p\">());</span>\n\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">/api</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">({</span>\n        <span class=\"na\">message</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Hello world</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n    <span class=\"p\">});</span>\n<span class=\"p\">});</span>\n\n<span class=\"nx\">http</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"nx\">PORT</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`Server listening on </span><span class=\"p\">${</span><span class=\"nx\">PORT</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Next, add Socket.io to the project to create a real-time connection. Before the <code>app.get()</code> block, copy the code below:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"c1\">//üëáüèª New imports</span>\n<span class=\"p\">.....</span>\n<span class=\"kd\">const</span> <span class=\"nx\">socketIO</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">socket.io</span><span class=\"dl\">'</span><span class=\"p\">)(</span><span class=\"nx\">http</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"na\">cors</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">origin</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">&lt;http://localhost:3000&gt;</span><span class=\"dl\">\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">});</span>\n\n<span class=\"c1\">//üëáüèª Add this before the app.get() block</span>\n<span class=\"nx\">socketIO</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">connection</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">socket</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`‚ö°: </span><span class=\"p\">${</span><span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">}</span><span class=\"s2\"> user just connected!`</span><span class=\"p\">);</span>\n\n    <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">disconnect</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">disconnect</span><span class=\"p\">()</span>\n      <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">üî•: A user disconnected</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n<span class=\"p\">});</span>\n\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>From the code snippet above, the <code>socket.io(\"connection\")</code> function establishes a connection with the React app, then creates a unique ID for each socket and logs the ID to the console whenever you refresh the app.</p>\n\n<p>When you refresh or close the app, the socket fires the disconnect event showing that a user has disconnected from the socket.</p>\n\n<p>Configure Nodemon by adding the start command to the list of scripts in the <code>package.json</code> file. The code snippet below starts the server using Nodemon.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight json\"><code><span class=\"err\">//üëáüèª</span><span class=\"w\"> </span><span class=\"err\">In</span><span class=\"w\"> </span><span class=\"err\">server/package.json</span><span class=\"w\">\n\n</span><span class=\"nl\">\"scripts\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"test\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"echo </span><span class=\"se\">\\\\</span><span class=\"s2\">\"</span><span class=\"err\">Error:</span><span class=\"w\"> </span><span class=\"err\">no</span><span class=\"w\"> </span><span class=\"err\">test</span><span class=\"w\"> </span><span class=\"err\">specified\\\\</span><span class=\"s2\">\" &amp;&amp; exit 1\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"nodemon index.js\"</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"err\">,</span><span class=\"w\">\n\n</span></code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>You can now run the server with Nodemon by using the command below.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code>npm start\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h2>\n  <a name=\"building-the-user-interface\" href=\"#building-the-user-interface\">\n  </a>\n  Building the user interface\n</h2>\n\n<p>Here, we'll create the user interface for the chat application to enable users to sign in, create chat rooms, and send messages. The app is divided into three screens - the Login screen, the Chat screen, and the Messaging screen.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s---K5xXxv---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://manage.novu.co/wp-content/uploads/2022/10/z.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s---K5xXxv---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://manage.novu.co/wp-content/uploads/2022/10/z.gif\" alt=\"interface\" loading=\"lazy\" width=\"282\" height=\"600\" data-animated=\"true\"></a></p>\n\n<p>First, let's set up React Navigation.</p>\n\n<p>Create a <code>screens</code> folder within the app folder, add the Login, Chat, and Messaging components and render a <code>\"Hello World\"</code> text within them.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code><span class=\"nb\">mkdir </span>screens\n<span class=\"nb\">touch </span>Login.js Chat.js Messaging.js\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Copy the code below into the <code>App.js</code> file within the app folder.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"nx\">React</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"c1\">//üëáüèª app screens</span>\n<span class=\"k\">import</span> <span class=\"nx\">Login</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">./screens/Login</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">Messaging</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">./screens/Messaging</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">Chat</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">./screens/Chat</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"c1\">//üëáüèª React Navigation configurations</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">NavigationContainer</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">@react-navigation/native</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">createNativeStackNavigator</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">@react-navigation/native-stack</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">Stack</span> <span class=\"o\">=</span> <span class=\"nx\">createNativeStackNavigator</span><span class=\"p\">();</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span> <span class=\"nx\">App</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n        <span class=\"p\">&lt;</span><span class=\"nc\">NavigationContainer</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nc\">Stack</span><span class=\"p\">.</span><span class=\"nc\">Navigator</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">Stack</span><span class=\"p\">.</span><span class=\"nc\">Screen</span>\n                    <span class=\"na\">name</span><span class=\"p\">=</span><span class=\"s\">'Login'</span>\n                    <span class=\"na\">component</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">Login</span><span class=\"si\">}</span>\n                    <span class=\"na\">options</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">{</span> <span class=\"na\">headerShown</span><span class=\"p\">:</span> <span class=\"kc\">false</span> <span class=\"p\">}</span><span class=\"si\">}</span>\n                <span class=\"p\">/&gt;</span>\n\n                <span class=\"p\">&lt;</span><span class=\"nc\">Stack</span><span class=\"p\">.</span><span class=\"nc\">Screen</span>\n                    <span class=\"na\">name</span><span class=\"p\">=</span><span class=\"s\">'Chat'</span>\n                    <span class=\"na\">component</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">Chat</span><span class=\"si\">}</span>\n                    <span class=\"na\">options</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">{</span>\n                        <span class=\"na\">title</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Chats</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                        <span class=\"na\">headerShown</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n                    <span class=\"p\">}</span><span class=\"si\">}</span>\n                <span class=\"p\">/&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">Stack</span><span class=\"p\">.</span><span class=\"nc\">Screen</span> <span class=\"na\">name</span><span class=\"p\">=</span><span class=\"s\">'Messaging'</span> <span class=\"na\">component</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">Messaging</span><span class=\"si\">}</span> <span class=\"p\">/&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nc\">Stack</span><span class=\"p\">.</span><span class=\"nc\">Navigator</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nc\">NavigationContainer</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h3>\n  <a name=\"the-login-screen\" href=\"#the-login-screen\">\n  </a>\n  The Login screen\n</h3>\n\n<p>Copy the code below into the <code>Login.js</code> file.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"nx\">React</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">useState</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span>\n    <span class=\"nx\">Text</span><span class=\"p\">,</span>\n    <span class=\"nx\">SafeAreaView</span><span class=\"p\">,</span>\n    <span class=\"nx\">View</span><span class=\"p\">,</span>\n    <span class=\"nx\">TextInput</span><span class=\"p\">,</span>\n    <span class=\"nx\">Pressable</span><span class=\"p\">,</span>\n    <span class=\"nx\">Alert</span><span class=\"p\">,</span>\n<span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react-native</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"c1\">//üëáüèª Import the app styles</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">styles</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../utils/styles</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">Login</span> <span class=\"o\">=</span> <span class=\"p\">({</span> <span class=\"nx\">navigation</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"p\">[</span><span class=\"nx\">username</span><span class=\"p\">,</span> <span class=\"nx\">setUsername</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">useState</span><span class=\"p\">(</span><span class=\"dl\">\"\"</span><span class=\"p\">);</span>\n\n    <span class=\"c1\">//üëáüèª checks if the input field is empty</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">handleSignIn</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">username</span><span class=\"p\">.</span><span class=\"nx\">trim</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n            <span class=\"c1\">//üëáüèª Logs the username to the console</span>\n            <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">({</span> <span class=\"nx\">username</span> <span class=\"p\">});</span>\n        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n            <span class=\"nx\">Alert</span><span class=\"p\">.</span><span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Username is required.</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">};</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n        <span class=\"p\">&lt;</span><span class=\"nc\">SafeAreaView</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">loginscreen</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">loginscreen</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">loginheading</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>Sign in<span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">logininputContainer</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">TextInput</span>\n                        <span class=\"na\">autoCorrect</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"kc\">false</span><span class=\"si\">}</span>\n                        <span class=\"na\">placeholder</span><span class=\"p\">=</span><span class=\"s\">'Enter your username'</span>\n                        <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">logininput</span><span class=\"si\">}</span>\n                        <span class=\"na\">onChangeText</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">(</span><span class=\"nx\">value</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">setUsername</span><span class=\"p\">(</span><span class=\"nx\">value</span><span class=\"p\">)</span><span class=\"si\">}</span>\n                    <span class=\"p\">/&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n\n                <span class=\"p\">&lt;</span><span class=\"nc\">Pressable</span> <span class=\"na\">onPress</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">handleSignIn</span><span class=\"si\">}</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">loginbutton</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n                        <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">loginbuttonText</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>Get Started<span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nc\">Pressable</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nc\">SafeAreaView</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">);</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">Login</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>The code snippet accepts the username from the user and logs it on the console.</p>\n\n<p>Let‚Äôs update the code and save the username using¬†<a href=\"https://react-native-async-storage.github.io/async-storage/\">Async Storage</a>, so users will not be required to sign in to the application every time they launch the app.</p>\n\n<p>üí° <a href=\"https://react-native-async-storage.github.io/async-storage/\">*Async Storage</a>¬†is a React Native package used to store string data in native applications. It is similar to the local storage on the web and can be used to store tokens and various data in string format.*</p>\n\n<p>Run the code below to install Async Storage<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code>expo <span class=\"nb\">install</span> @react-native-async-storage/async-storage\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Update the <code>handleSignIn</code> function to save the username via AsyncStorage.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"nx\">AsyncStorage</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">@react-native-async-storage/async-storage</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">storeUsername</span> <span class=\"o\">=</span> <span class=\"k\">async</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"k\">try</span> <span class=\"p\">{</span>\n            <span class=\"c1\">//üëáüèª async function - saves the username to AsyncStorage</span>\n            <span class=\"c1\">//   redirecting to the Chat page</span>\n            <span class=\"k\">await</span> <span class=\"nx\">AsyncStorage</span><span class=\"p\">.</span><span class=\"nx\">setItem</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">username</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">username</span><span class=\"p\">);</span>\n            <span class=\"nx\">navigation</span><span class=\"p\">.</span><span class=\"nx\">navigate</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Chat</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span> <span class=\"k\">catch</span> <span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nx\">Alert</span><span class=\"p\">.</span><span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Error! While saving username</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">};</span>\n\n    <span class=\"kd\">const</span> <span class=\"nx\">handleSignIn</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">username</span><span class=\"p\">.</span><span class=\"nx\">trim</span><span class=\"p\">())</span> <span class=\"p\">{</span>\n            <span class=\"c1\">//üëáüèª calls AsyncStorage function</span>\n            <span class=\"nx\">storeUsername</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n            <span class=\"nx\">Alert</span><span class=\"p\">.</span><span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Username is required.</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">};</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h3>\n  <a name=\"the-chat-room\" href=\"#the-chat-room\">\n  </a>\n  The Chat room\n</h3>\n\n<p>Here, we'll update the user interface for the <code>Chat</code> screen to display the available chat rooms, allow users to create one, and navigate to the <code>Messaging</code> screen when each room is selected.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s---K5xXxv---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://manage.novu.co/wp-content/uploads/2022/10/z.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s---K5xXxv---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://manage.novu.co/wp-content/uploads/2022/10/z.gif\" alt=\"ChatRoom\" loading=\"lazy\" width=\"282\" height=\"600\" data-animated=\"true\"></a></p>\n\n<p>Copy the code below into the <code>Chat.js</code> file.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"nx\">React</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">View</span><span class=\"p\">,</span> <span class=\"nx\">Text</span><span class=\"p\">,</span> <span class=\"nx\">Pressable</span><span class=\"p\">,</span> <span class=\"nx\">SafeAreaView</span><span class=\"p\">,</span> <span class=\"nx\">FlatList</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react-native</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Feather</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">@expo/vector-icons</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"k\">import</span> <span class=\"nx\">ChatComponent</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../component/ChatComponent</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">styles</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../utils/styles</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">Chat</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n\n    <span class=\"c1\">//üëáüèª Dummy list of rooms</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">rooms</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">1</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n            <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Novu Hangouts</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n            <span class=\"na\">messages</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"p\">{</span>\n                    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">1a</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                    <span class=\"na\">text</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Hello guys, welcome!</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                    <span class=\"na\">time</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">07:50</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                    <span class=\"na\">user</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Tomer</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                <span class=\"p\">},</span>\n                <span class=\"p\">{</span>\n                    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">1b</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                    <span class=\"na\">text</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Hi Tomer, thank you! üòá</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                    <span class=\"na\">time</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">08:50</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                    <span class=\"na\">user</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">David</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                <span class=\"p\">},</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">2</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n            <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Hacksquad Team 1</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n            <span class=\"na\">messages</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                <span class=\"p\">{</span>\n                    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">2a</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                    <span class=\"na\">text</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Guys, who's awake? üôèüèΩ</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                    <span class=\"na\">time</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">12:50</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                    <span class=\"na\">user</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Team Leader</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                <span class=\"p\">},</span>\n                <span class=\"p\">{</span>\n                    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">2b</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                    <span class=\"na\">text</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">What's up? üßëüèª‚Äçüíª</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                    <span class=\"na\">time</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">03:50</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                    <span class=\"na\">user</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Victoria</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n                <span class=\"p\">},</span>\n            <span class=\"p\">],</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">];</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n        <span class=\"p\">&lt;</span><span class=\"nc\">SafeAreaView</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">chatscreen</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">chattopContainer</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">chatheader</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">chatheading</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>Chats<span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n\n            <span class=\"si\">{</span><span class=\"cm\">/* üëáüèª Logs \"ButtonPressed\" to the console when the icon is clicked */</span><span class=\"si\">}</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">Pressable</span> <span class=\"na\">onPress</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Button Pressed!</span><span class=\"dl\">\"</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                        <span class=\"p\">&lt;</span><span class=\"nc\">Feather</span> <span class=\"na\">name</span><span class=\"p\">=</span><span class=\"s\">'edit'</span> <span class=\"na\">size</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"mi\">24</span><span class=\"si\">}</span> <span class=\"na\">color</span><span class=\"p\">=</span><span class=\"s\">'green'</span> <span class=\"p\">/&gt;</span>\n                    <span class=\"p\">&lt;/</span><span class=\"nc\">Pressable</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n\n            <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">chatlistContainer</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                <span class=\"si\">{</span><span class=\"nx\">rooms</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"p\">?</span> <span class=\"p\">(</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">FlatList</span>\n                        <span class=\"na\">data</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">rooms</span><span class=\"si\">}</span>\n                        <span class=\"na\">renderItem</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">({</span> <span class=\"nx\">item</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">&lt;</span><span class=\"nc\">ChatComponent</span> <span class=\"na\">item</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">item</span><span class=\"si\">}</span> <span class=\"p\">/&gt;</span><span class=\"si\">}</span>\n                        <span class=\"na\">keyExtractor</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"si\">}</span>\n                    <span class=\"p\">/&gt;</span>\n                <span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"p\">(</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">chatemptyContainer</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                        <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">chatemptyText</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>No rooms created!<span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n                        <span class=\"p\">&lt;</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>Click the icon above to create a Chat room<span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">)</span><span class=\"si\">}</span>\n            <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nc\">SafeAreaView</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">);</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">Chat</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<ul>\n<li>From the code snippet above:\n\n<ul>\n<li>I created a dummy list of rooms, then rendered them through a¬†<a href=\"https://reactnative.dev/docs/flatlist\">FlatList</a>¬†into the <code>ChatComponent</code>.(<em>yet to be created</em>)</li>\n<li>Since the rooms can either be empty or populated, the conditional statement determines the component to display.</li>\n</ul>\n\n\n</li>\n</ul>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--zqDIVdtX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d8wxiyoqtttftbtk1g69.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--zqDIVdtX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d8wxiyoqtttftbtk1g69.png\" alt=\"Code Snippet\" loading=\"lazy\" width=\"277\" height=\"599\"></a></p>\n\n<p>Next, create the <code>ChatComponent</code> within a component folder. It represents a preview of each chat name, time, the last message sent and redirects users to the <code>Messaging</code> component when clicked. </p>\n\n<p>Copy the code below into the <code>components/ChatComponent.js</code> file.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">View</span><span class=\"p\">,</span> <span class=\"nx\">Text</span><span class=\"p\">,</span> <span class=\"nx\">Pressable</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react-native</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">React</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">useLayoutEffect</span><span class=\"p\">,</span> <span class=\"nx\">useState</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Ionicons</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">@expo/vector-icons</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">useNavigation</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">@react-navigation/native</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">styles</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../utils/styles</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">ChatComponent</span> <span class=\"o\">=</span> <span class=\"p\">({</span> <span class=\"nx\">item</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">navigation</span> <span class=\"o\">=</span> <span class=\"nx\">useNavigation</span><span class=\"p\">();</span>\n    <span class=\"kd\">const</span> <span class=\"p\">[</span><span class=\"nx\">messages</span><span class=\"p\">,</span> <span class=\"nx\">setMessages</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">useState</span><span class=\"p\">({});</span>\n\n    <span class=\"c1\">//üëáüèª Retrieves the last message in the array from the item prop</span>\n    <span class=\"nx\">useLayoutEffect</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"nx\">setMessages</span><span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">messages</span><span class=\"p\">[</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">messages</span><span class=\"p\">.</span><span class=\"nx\">length</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">]);</span>\n    <span class=\"p\">},</span> <span class=\"p\">[]);</span>\n\n    <span class=\"c1\">///üëáüèª Navigates to the Messaging screen</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">handleNavigation</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"nx\">navigation</span><span class=\"p\">.</span><span class=\"nx\">navigate</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Messaging</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n            <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">,</span>\n            <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">,</span>\n        <span class=\"p\">});</span>\n    <span class=\"p\">};</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n        <span class=\"p\">&lt;</span><span class=\"nc\">Pressable</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">cchat</span><span class=\"si\">}</span> <span class=\"na\">onPress</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">handleNavigation</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nc\">Ionicons</span>\n                <span class=\"na\">name</span><span class=\"p\">=</span><span class=\"s\">'person-circle-outline'</span>\n                <span class=\"na\">size</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"mi\">45</span><span class=\"si\">}</span>\n                <span class=\"na\">color</span><span class=\"p\">=</span><span class=\"s\">'black'</span>\n                <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">cavatar</span><span class=\"si\">}</span>\n            <span class=\"p\">/&gt;</span>\n\n            <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">crightContainer</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">cusername</span><span class=\"si\">}</span><span class=\"p\">&gt;</span><span class=\"si\">{</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"si\">}</span><span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n\n                    <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">cmessage</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                        <span class=\"si\">{</span><span class=\"nx\">messages</span><span class=\"p\">?.</span><span class=\"nx\">text</span> <span class=\"p\">?</span> <span class=\"nx\">messages</span><span class=\"p\">.</span><span class=\"nx\">text</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Tap to start chatting</span><span class=\"dl\">\"</span><span class=\"si\">}</span>\n                    <span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">ctime</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                        <span class=\"si\">{</span><span class=\"nx\">messages</span><span class=\"p\">?.</span><span class=\"nx\">time</span> <span class=\"p\">?</span> <span class=\"nx\">messages</span><span class=\"p\">.</span><span class=\"nx\">time</span> <span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">now</span><span class=\"dl\">\"</span><span class=\"si\">}</span>\n                    <span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nc\">Pressable</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">);</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">ChatComponent</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>CongratulationsüíÉüèª! We can now display the list of rooms and redirect the user the <code>Messaging</code> screen.</p>\n\n<p>Before we proceed, let's create a custom Modal component that allows users to create a new group (room) when we press the header icon.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--sjCEBfNp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oj8kfx666h5mc0hg0d3d.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--sjCEBfNp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oj8kfx666h5mc0hg0d3d.png\" alt=\"Before\" loading=\"lazy\" width=\"277\" height=\"599\"></a></p>\n\n<p>Create a <code>Modal.js</code> file within the components folder, import it into the Chat screen and toggle it whenever we press the header icon.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"nx\">React</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">View</span><span class=\"p\">,</span> <span class=\"nx\">Text</span><span class=\"p\">,</span> <span class=\"nx\">Pressable</span><span class=\"p\">,</span> <span class=\"nx\">SafeAreaView</span><span class=\"p\">,</span> <span class=\"nx\">FlatList</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react-native</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Feather</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">@expo/vector-icons</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">ChatComponent</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../component/ChatComponent</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">styles</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../utils/styles</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"c1\">//üëáüèª The Modal component</span>\n<span class=\"k\">import</span> <span class=\"nx\">Modal</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../component/Modal</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">Chat</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"p\">[</span><span class=\"nx\">visible</span><span class=\"p\">,</span> <span class=\"nx\">setVisible</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">useState</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">);</span>\n\n    <span class=\"c1\">//...other variables</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n        <span class=\"p\">&lt;</span><span class=\"nc\">SafeAreaView</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">chatscreen</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">chattopContainer</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">chatheader</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">chatheading</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>Chats<span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n\n                    <span class=\"si\">{</span><span class=\"cm\">/* Displays the Modal component when clicked */</span><span class=\"si\">}</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">Pressable</span> <span class=\"na\">onPress</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">setVisible</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                        <span class=\"p\">&lt;</span><span class=\"nc\">Feather</span> <span class=\"na\">name</span><span class=\"p\">=</span><span class=\"s\">'edit'</span> <span class=\"na\">size</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"mi\">24</span><span class=\"si\">}</span> <span class=\"na\">color</span><span class=\"p\">=</span><span class=\"s\">'green'</span> <span class=\"p\">/&gt;</span>\n                    <span class=\"p\">&lt;/</span><span class=\"nc\">Pressable</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n\n            <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">chatlistContainer</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>...<span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n            <span class=\"si\">{</span><span class=\"cm\">/*\n                Pass setVisible as prop in order to toggle \n                the display within the Modal component.\n            */</span><span class=\"si\">}</span>\n            <span class=\"si\">{</span><span class=\"nx\">visible</span> <span class=\"p\">?</span> <span class=\"p\">&lt;</span><span class=\"nc\">Modal</span> <span class=\"na\">setVisible</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">setVisible</span><span class=\"si\">}</span> <span class=\"p\">/&gt;</span> <span class=\"p\">:</span> <span class=\"dl\">\"\"</span><span class=\"si\">}</span>\n        <span class=\"p\">&lt;/</span><span class=\"nc\">SafeAreaView</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">);</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">Chat</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Copy the code below into the <code>Modal.js</code> file.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">View</span><span class=\"p\">,</span> <span class=\"nx\">Text</span><span class=\"p\">,</span> <span class=\"nx\">TextInput</span><span class=\"p\">,</span> <span class=\"nx\">Pressable</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react-native</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">React</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">useState</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">styles</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../utils/styles</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">Modal</span> <span class=\"o\">=</span> <span class=\"p\">({</span> <span class=\"nx\">setVisible</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"p\">[</span><span class=\"nx\">groupName</span><span class=\"p\">,</span> <span class=\"nx\">setGroupName</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">useState</span><span class=\"p\">(</span><span class=\"dl\">\"\"</span><span class=\"p\">);</span>\n\n    <span class=\"c1\">//üëáüèª Function that closes the Modal component</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">closeModal</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">setVisible</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">);</span>\n\n    <span class=\"c1\">//üëáüèª Logs the group name to the console</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">handleCreateRoom</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">({</span> <span class=\"nx\">groupName</span> <span class=\"p\">});</span>\n        <span class=\"nx\">closeModal</span><span class=\"p\">();</span>\n    <span class=\"p\">};</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n        <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modalContainer</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modalsubheading</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>Enter your Group name<span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nc\">TextInput</span>\n                <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modalinput</span><span class=\"si\">}</span>\n                <span class=\"na\">placeholder</span><span class=\"p\">=</span><span class=\"s\">'Group name'</span>\n                <span class=\"na\">onChangeText</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">(</span><span class=\"nx\">value</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">setGroupName</span><span class=\"p\">(</span><span class=\"nx\">value</span><span class=\"p\">)</span><span class=\"si\">}</span>\n            <span class=\"p\">/&gt;</span>\n\n            <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modalbuttonContainer</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">Pressable</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modalbutton</span><span class=\"si\">}</span> <span class=\"na\">onPress</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">handleCreateRoom</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modaltext</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>CREATE<span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nc\">Pressable</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">Pressable</span>\n                    <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">[</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modalbutton</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"na\">backgroundColor</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#E14D2A</span><span class=\"dl\">\"</span> <span class=\"p\">}]</span><span class=\"si\">}</span>\n                    <span class=\"na\">onPress</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">closeModal</span><span class=\"si\">}</span>\n                <span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modaltext</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>CANCEL<span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nc\">Pressable</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">);</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">Modal</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h3>\n  <a name=\"the-messaging-screen\" href=\"#the-messaging-screen\">\n  </a>\n  The Messaging screen\n</h3>\n\n<p>Copy the code below into the <code>Messaging.js</code> file.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"nx\">React</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">useLayoutEffect</span><span class=\"p\">,</span> <span class=\"nx\">useState</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">View</span><span class=\"p\">,</span> <span class=\"nx\">TextInput</span><span class=\"p\">,</span> <span class=\"nx\">Text</span><span class=\"p\">,</span> <span class=\"nx\">FlatList</span><span class=\"p\">,</span> <span class=\"nx\">Pressable</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react-native</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">AsyncStorage</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">@react-native-async-storage/async-storage</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">MessageComponent</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../component/MessageComponent</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">styles</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../utils/styles</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">Messaging</span> <span class=\"o\">=</span> <span class=\"p\">({</span> <span class=\"nx\">route</span><span class=\"p\">,</span> <span class=\"nx\">navigation</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"p\">[</span><span class=\"nx\">chatMessages</span><span class=\"p\">,</span> <span class=\"nx\">setChatMessages</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">useState</span><span class=\"p\">([</span>\n        <span class=\"p\">{</span>\n            <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">1</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n            <span class=\"na\">text</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Hello guys, welcome!</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n            <span class=\"na\">time</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">07:50</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n            <span class=\"na\">user</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Tomer</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">2</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n            <span class=\"na\">text</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">Hi Tomer, thank you! üòá</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n            <span class=\"na\">time</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">08:50</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n            <span class=\"na\">user</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">David</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">]);</span>\n    <span class=\"kd\">const</span> <span class=\"p\">[</span><span class=\"nx\">message</span><span class=\"p\">,</span> <span class=\"nx\">setMessage</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">useState</span><span class=\"p\">(</span><span class=\"dl\">\"\"</span><span class=\"p\">);</span>\n    <span class=\"kd\">const</span> <span class=\"p\">[</span><span class=\"nx\">user</span><span class=\"p\">,</span> <span class=\"nx\">setUser</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">useState</span><span class=\"p\">(</span><span class=\"dl\">\"\"</span><span class=\"p\">);</span>\n\n    <span class=\"c1\">//üëáüèª Access the chatroom's name and id</span>\n    <span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">name</span><span class=\"p\">,</span> <span class=\"nx\">id</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">route</span><span class=\"p\">.</span><span class=\"nx\">params</span><span class=\"p\">;</span>\n\n<span class=\"c1\">//üëáüèª This function gets the username saved on AsyncStorage</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">getUsername</span> <span class=\"o\">=</span> <span class=\"k\">async</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"k\">try</span> <span class=\"p\">{</span>\n            <span class=\"kd\">const</span> <span class=\"nx\">value</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">AsyncStorage</span><span class=\"p\">.</span><span class=\"nx\">getItem</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">username</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n            <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">value</span> <span class=\"o\">!==</span> <span class=\"kc\">null</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"nx\">setUser</span><span class=\"p\">(</span><span class=\"nx\">value</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span> <span class=\"k\">catch</span> <span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Error while loading username!</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">};</span>\n\n    <span class=\"c1\">//üëáüèª Sets the header title to the name chatroom's name</span>\n    <span class=\"nx\">useLayoutEffect</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"nx\">navigation</span><span class=\"p\">.</span><span class=\"nx\">setOptions</span><span class=\"p\">({</span> <span class=\"na\">title</span><span class=\"p\">:</span> <span class=\"nx\">name</span> <span class=\"p\">});</span>\n        <span class=\"nx\">getUsername</span><span class=\"p\">()</span>\n    <span class=\"p\">},</span> <span class=\"p\">[]);</span>\n\n    <span class=\"cm\">/*üëáüèª \n        This function gets the time the user sends a message, then \n        logs the username, message, and the timestamp to the console.\n     */</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">handleNewMessage</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"kd\">const</span> <span class=\"nx\">hour</span> <span class=\"o\">=</span>\n            <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">getHours</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span>\n                <span class=\"p\">?</span> <span class=\"s2\">`0</span><span class=\"p\">${</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">getHours</span><span class=\"p\">()}</span><span class=\"s2\">`</span>\n                <span class=\"p\">:</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">getHours</span><span class=\"p\">()}</span><span class=\"s2\">`</span><span class=\"p\">;</span>\n\n        <span class=\"kd\">const</span> <span class=\"nx\">mins</span> <span class=\"o\">=</span>\n            <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">getMinutes</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span>\n                <span class=\"p\">?</span> <span class=\"s2\">`0</span><span class=\"p\">${</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">getMinutes</span><span class=\"p\">()}</span><span class=\"s2\">`</span>\n                <span class=\"p\">:</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">getMinutes</span><span class=\"p\">()}</span><span class=\"s2\">`</span><span class=\"p\">;</span>\n\n        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">({</span>\n            <span class=\"nx\">message</span><span class=\"p\">,</span>\n            <span class=\"nx\">user</span><span class=\"p\">,</span>\n            <span class=\"na\">timestamp</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"nx\">hour</span><span class=\"p\">,</span> <span class=\"nx\">mins</span> <span class=\"p\">},</span>\n        <span class=\"p\">});</span>\n    <span class=\"p\">};</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n        <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">messagingscreen</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nc\">View</span>\n                <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">[</span>\n                    <span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">messagingscreen</span><span class=\"p\">,</span>\n                    <span class=\"p\">{</span> <span class=\"na\">paddingVertical</span><span class=\"p\">:</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"na\">paddingHorizontal</span><span class=\"p\">:</span> <span class=\"mi\">10</span> <span class=\"p\">},</span>\n                <span class=\"p\">]</span><span class=\"si\">}</span>\n            <span class=\"p\">&gt;</span>\n                <span class=\"si\">{</span><span class=\"nx\">chatMessages</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"p\">?</span> <span class=\"p\">(</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">FlatList</span>\n                        <span class=\"na\">data</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">chatMessages</span><span class=\"si\">}</span>\n                        <span class=\"na\">renderItem</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">({</span> <span class=\"nx\">item</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">(</span>\n                            <span class=\"p\">&lt;</span><span class=\"nc\">MessageComponent</span> <span class=\"na\">item</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">item</span><span class=\"si\">}</span> <span class=\"na\">user</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">user</span><span class=\"si\">}</span> <span class=\"p\">/&gt;</span>\n                        <span class=\"p\">)</span><span class=\"si\">}</span>\n                        <span class=\"na\">keyExtractor</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"si\">}</span>\n                    <span class=\"p\">/&gt;</span>\n                <span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"p\">(</span>\n                    <span class=\"dl\">\"\"</span>\n                <span class=\"p\">)</span><span class=\"si\">}</span>\n            <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n\n            <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">messaginginputContainer</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">TextInput</span>\n                    <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">messaginginput</span><span class=\"si\">}</span>\n                    <span class=\"na\">onChangeText</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">(</span><span class=\"nx\">value</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">setMessage</span><span class=\"p\">(</span><span class=\"nx\">value</span><span class=\"p\">)</span><span class=\"si\">}</span>\n                <span class=\"p\">/&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">Pressable</span>\n                    <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">messagingbuttonContainer</span><span class=\"si\">}</span>\n                    <span class=\"na\">onPress</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">handleNewMessage</span><span class=\"si\">}</span>\n                <span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n                        <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">{</span> <span class=\"na\">color</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#f2f0f1</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"na\">fontSize</span><span class=\"p\">:</span> <span class=\"mi\">20</span> <span class=\"p\">}</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>SEND<span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nc\">Pressable</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">);</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">Messaging</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>The code snippet above renders the messages in each chatroom via the <code>MessageComponent</code> component. </p>\n\n<p>Create the <code>MessageComponent</code> file and copy the code below into the file:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">View</span><span class=\"p\">,</span> <span class=\"nx\">Text</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react-native</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">React</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Ionicons</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">@expo/vector-icons</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">styles</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../utils/styles</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span> <span class=\"nx\">MessageComponent</span><span class=\"p\">({</span> <span class=\"nx\">item</span><span class=\"p\">,</span> <span class=\"nx\">user</span> <span class=\"p\">})</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">status</span> <span class=\"o\">=</span> <span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">user</span> <span class=\"o\">!==</span> <span class=\"nx\">user</span><span class=\"p\">;</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n        <span class=\"p\">&lt;</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nc\">View</span>\n                <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span>\n                    <span class=\"nx\">status</span>\n                        <span class=\"p\">?</span> <span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">mmessageWrapper</span>\n                        <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">mmessageWrapper</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"na\">alignItems</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">flex-end</span><span class=\"dl\">\"</span> <span class=\"p\">}]</span>\n                <span class=\"si\">}</span>\n            <span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">{</span> <span class=\"na\">flexDirection</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">row</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"na\">alignItems</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">center</span><span class=\"dl\">\"</span> <span class=\"p\">}</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">Ionicons</span>\n                        <span class=\"na\">name</span><span class=\"p\">=</span><span class=\"s\">'person-circle-outline'</span>\n                        <span class=\"na\">size</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"mi\">30</span><span class=\"si\">}</span>\n                        <span class=\"na\">color</span><span class=\"p\">=</span><span class=\"s\">'black'</span>\n                        <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">mavatar</span><span class=\"si\">}</span>\n                    <span class=\"p\">/&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">View</span>\n                        <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span>\n                            <span class=\"nx\">status</span>\n                                <span class=\"p\">?</span> <span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">mmessage</span>\n                                <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">mmessage</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"na\">backgroundColor</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">rgb(194, 243, 194)</span><span class=\"dl\">\"</span> <span class=\"p\">}]</span>\n                        <span class=\"si\">}</span>\n                    <span class=\"p\">&gt;</span>\n                        <span class=\"p\">&lt;</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span><span class=\"si\">{</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">text</span><span class=\"si\">}</span><span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">{</span> <span class=\"na\">marginLeft</span><span class=\"p\">:</span> <span class=\"mi\">40</span> <span class=\"p\">}</span><span class=\"si\">}</span><span class=\"p\">&gt;</span><span class=\"si\">{</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">time</span><span class=\"si\">}</span><span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>From the code snippet above, the <code>status</code> variable checks if the user key on the message is the same as the current user so as to determine how to align the messages.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--v2LC7QGA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ks89kg6h1f86pacpklk1.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--v2LC7QGA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ks89kg6h1f86pacpklk1.png\" alt=\"Image description\" loading=\"lazy\" width=\"277\" height=\"599\"></a></p>\n\n<p>We've now completed the user interface for the application!üéä Next, let's learn how to communicate with the Socket.io server, create chat rooms, and send messages in real time via Socket.io.</p>\n\n<h2>\n  <a name=\"creating-chat-rooms-with-socketio-in-react-native\" href=\"#creating-chat-rooms-with-socketio-in-react-native\">\n  </a>\n  Creating chat rooms with Socket.io in React Native\n</h2>\n\n<p>In this section, I'll guide you through creating chat rooms on the Socket.io server and displaying them on the app.</p>\n\n<p>Update the <code>Modal.js</code> file to send a message to the server when we create a new chat room.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">View</span><span class=\"p\">,</span> <span class=\"nx\">Text</span><span class=\"p\">,</span> <span class=\"nx\">TextInput</span><span class=\"p\">,</span> <span class=\"nx\">Pressable</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react-native</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">React</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">useState</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">styles</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../utils/styles</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"c1\">//üëáüèª Import socket from the socket.js file in utils folder</span>\n<span class=\"k\">import</span> <span class=\"nx\">socket</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../utils/socket</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">Modal</span> <span class=\"o\">=</span> <span class=\"p\">({</span> <span class=\"nx\">setVisible</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">closeModal</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">setVisible</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">);</span>\n    <span class=\"kd\">const</span> <span class=\"p\">[</span><span class=\"nx\">groupName</span><span class=\"p\">,</span> <span class=\"nx\">setGroupName</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">useState</span><span class=\"p\">(</span><span class=\"dl\">\"\"</span><span class=\"p\">);</span>\n\n    <span class=\"kd\">const</span> <span class=\"nx\">handleCreateRoom</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"c1\">//üëáüèª sends a message containing the group name to the server</span>\n        <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">emit</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">createRoom</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">groupName</span><span class=\"p\">);</span>\n        <span class=\"nx\">closeModal</span><span class=\"p\">();</span>\n    <span class=\"p\">};</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n        <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modalContainer</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modalsubheading</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>Enter your Group name<span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nc\">TextInput</span>\n                <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modalinput</span><span class=\"si\">}</span>\n                <span class=\"na\">placeholder</span><span class=\"p\">=</span><span class=\"s\">'Group name'</span>\n                <span class=\"na\">onChangeText</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">(</span><span class=\"nx\">value</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">setGroupName</span><span class=\"p\">(</span><span class=\"nx\">value</span><span class=\"p\">)</span><span class=\"si\">}</span>\n            <span class=\"p\">/&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modalbuttonContainer</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                <span class=\"si\">{</span><span class=\"cm\">/* üëáüèª The create button triggers the function*/</span><span class=\"si\">}</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">Pressable</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modalbutton</span><span class=\"si\">}</span> <span class=\"na\">onPress</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">handleCreateRoom</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modaltext</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>CREATE<span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nc\">Pressable</span><span class=\"p\">&gt;</span>\n\n                <span class=\"p\">&lt;</span><span class=\"nc\">Pressable</span>\n                    <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">[</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modalbutton</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"na\">backgroundColor</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#E14D2A</span><span class=\"dl\">\"</span> <span class=\"p\">}]</span><span class=\"si\">}</span>\n                    <span class=\"na\">onPress</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">closeModal</span><span class=\"si\">}</span>\n                <span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">Text</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">modaltext</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>CANCEL<span class=\"p\">&lt;/</span><span class=\"nc\">Text</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nc\">Pressable</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">);</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">Modal</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Create a listener on the backend server that saves the group name to an array and returns the whole list.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"c1\">//üëáüèª Generates random string as the ID</span>\n<span class=\"kd\">const</span> <span class=\"nx\">generateID</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"nb\">Math</span><span class=\"p\">.</span><span class=\"nx\">random</span><span class=\"p\">().</span><span class=\"nx\">toString</span><span class=\"p\">(</span><span class=\"mi\">36</span><span class=\"p\">).</span><span class=\"nx\">substring</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">);</span>\n\n<span class=\"kd\">let</span> <span class=\"nx\">chatRooms</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\">//üëáüèª Here is the data structure of each chatroom</span>\n    <span class=\"c1\">// {</span>\n    <span class=\"c1\">//  id: generateID(),</span>\n    <span class=\"c1\">//  name: \"Novu Hangouts\",</span>\n    <span class=\"c1\">//  messages: [</span>\n    <span class=\"c1\">//      {</span>\n    <span class=\"c1\">//          id: generateID(),</span>\n    <span class=\"c1\">//          text: \"Hello guys, welcome!\",</span>\n    <span class=\"c1\">//          time: \"07:50\",</span>\n    <span class=\"c1\">//          user: \"Tomer\",</span>\n    <span class=\"c1\">//      },</span>\n    <span class=\"c1\">//      {</span>\n    <span class=\"c1\">//          id: generateID(),</span>\n    <span class=\"c1\">//          text: \"Hi Tomer, thank you! üòá\",</span>\n    <span class=\"c1\">//          time: \"08:50\",</span>\n    <span class=\"c1\">//          user: \"David\",</span>\n    <span class=\"c1\">//      },</span>\n    <span class=\"c1\">//  ],</span>\n    <span class=\"c1\">// },</span>\n<span class=\"p\">];</span>\n\n<span class=\"nx\">socketIO</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">connection</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">socket</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">`‚ö°: </span><span class=\"p\">${</span><span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">}</span><span class=\"s2\"> user just connected!`</span><span class=\"p\">);</span>\n\n    <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">createRoom</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">roomName</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"nx\">roomName</span><span class=\"p\">);</span>\n        <span class=\"c1\">//üëáüèª Adds the new group name to the chat rooms array</span>\n        <span class=\"nx\">chatRooms</span><span class=\"p\">.</span><span class=\"nx\">unshift</span><span class=\"p\">({</span> <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"nx\">generateID</span><span class=\"p\">(),</span> <span class=\"nx\">roomName</span><span class=\"p\">,</span> <span class=\"na\">messages</span><span class=\"p\">:</span> <span class=\"p\">[]</span> <span class=\"p\">});</span>\n        <span class=\"c1\">//üëáüèª Returns the updated chat rooms via another event</span>\n        <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">emit</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">roomsList</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">chatRooms</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n\n    <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">disconnect</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">disconnect</span><span class=\"p\">();</span>\n        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">üî•: A user disconnected</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n<span class=\"p\">});</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Also, return the chat room list via the API route as below:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"kd\">get</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">/api</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">(</span><span class=\"nx\">chatRooms</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Update the <code>Chat.js</code> file to fetch and listen to the <code>roomsList</code> from the server and display the chat rooms.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"kd\">const</span> <span class=\"p\">[</span><span class=\"nx\">rooms</span><span class=\"p\">,</span> <span class=\"nx\">setRooms</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">useState</span><span class=\"p\">([]);</span>\n\n<span class=\"c1\">//üëáüèª Runs when the component mounts</span>\n<span class=\"nx\">useLayoutEffect</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">function</span> <span class=\"nx\">fetchGroups</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">http://localhost:4000/api</span><span class=\"dl\">\"</span><span class=\"p\">)</span>\n            <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">())</span>\n            <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">((</span><span class=\"nx\">data</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">setRooms</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">))</span>\n            <span class=\"p\">.</span><span class=\"k\">catch</span><span class=\"p\">((</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">));</span>\n    <span class=\"p\">}</span>\n    <span class=\"nx\">fetchGroups</span><span class=\"p\">();</span>\n<span class=\"p\">},</span> <span class=\"p\">[]);</span>\n\n<span class=\"c1\">//üëáüèª Runs whenever there is new trigger from the backend</span>\n<span class=\"nx\">useEffect</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">roomsList</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">rooms</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"nx\">setRooms</span><span class=\"p\">(</span><span class=\"nx\">rooms</span><span class=\"p\">);</span>\n    <span class=\"p\">});</span>\n<span class=\"p\">},</span> <span class=\"p\">[</span><span class=\"nx\">socket</span><span class=\"p\">]);</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h2>\n  <a name=\"sending-messages-via-socketio-in-react-native\" href=\"#sending-messages-via-socketio-in-react-native\">\n  </a>\n  Sending messages via Socket.io in React Native\n</h2>\n\n<p>In the previous section, we were able to create new chat rooms, save them in an array on the server, and display them within the app. Here, we'll update the chat room messages by adding new messages to the sub-array.</p>\n\n<h3>\n  <a name=\"how-to-display-the-chat-room-messages\" href=\"#how-to-display-the-chat-room-messages\">\n  </a>\n  How to display the chat room messages\n</h3>\n\n<p>Recall that the id of each chat room is passed into the Messaging component. Now, let's send the id to the server via Socket.io when the screen loads.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"k\">import</span> <span class=\"nx\">React</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">useEffect</span><span class=\"p\">,</span> <span class=\"nx\">useLayoutEffect</span><span class=\"p\">,</span> <span class=\"nx\">useState</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">View</span><span class=\"p\">,</span> <span class=\"nx\">TextInput</span><span class=\"p\">,</span> <span class=\"nx\">Text</span><span class=\"p\">,</span> <span class=\"nx\">FlatList</span><span class=\"p\">,</span> <span class=\"nx\">Pressable</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">react-native</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">socket</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../utils/socket</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">MessageComponent</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../component/MessageComponent</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">styles</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">\"</span><span class=\"s2\">../utils/styles</span><span class=\"dl\">\"</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">Messaging</span> <span class=\"o\">=</span> <span class=\"p\">({</span> <span class=\"nx\">route</span><span class=\"p\">,</span> <span class=\"nx\">navigation</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"c1\">//üëáüèª The id passed</span>\n    <span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">name</span><span class=\"p\">,</span> <span class=\"nx\">id</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">route</span><span class=\"p\">.</span><span class=\"nx\">params</span><span class=\"p\">;</span>\n\n<span class=\"c1\">//...other functions</span>\n\n    <span class=\"nx\">useLayoutEffect</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n        <span class=\"nx\">navigation</span><span class=\"p\">.</span><span class=\"nx\">setOptions</span><span class=\"p\">({</span> <span class=\"na\">title</span><span class=\"p\">:</span> <span class=\"nx\">name</span> <span class=\"p\">});</span>\n\n        <span class=\"c1\">//üëáüèª Sends the id to the server to fetch all its messages</span>\n        <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">emit</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">findRoom</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">id</span><span class=\"p\">);</span>\n    <span class=\"p\">},</span> <span class=\"p\">[]);</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">&lt;</span><span class=\"nc\">View</span> <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">messagingscreen</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>...<span class=\"p\">&lt;/</span><span class=\"nc\">View</span><span class=\"p\">&gt;;</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">Messaging</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Create the event listener on the server.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">findRoom</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">id</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"c1\">//üëáüèª Filters the array by the ID</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">result</span> <span class=\"o\">=</span> <span class=\"nx\">chatRooms</span><span class=\"p\">.</span><span class=\"nx\">filter</span><span class=\"p\">((</span><span class=\"nx\">room</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">room</span><span class=\"p\">.</span><span class=\"nx\">id</span> <span class=\"o\">==</span> <span class=\"nx\">id</span><span class=\"p\">);</span>\n    <span class=\"c1\">//üëáüèª Sends the messages to the app</span>\n    <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">emit</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">foundRoom</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nx\">messages</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Next, listen to the <code>foundRoom</code> event and display the messages to the user.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"c1\">//üëáüèª This runs only initial mount</span>\n<span class=\"nx\">useLayoutEffect</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">navigation</span><span class=\"p\">.</span><span class=\"nx\">setOptions</span><span class=\"p\">({</span> <span class=\"na\">title</span><span class=\"p\">:</span> <span class=\"nx\">name</span> <span class=\"p\">});</span>\n    <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">emit</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">findRoom</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">id</span><span class=\"p\">);</span>\n    <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">foundRoom</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">roomChats</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">setChatMessages</span><span class=\"p\">(</span><span class=\"nx\">roomChats</span><span class=\"p\">));</span>\n<span class=\"p\">},</span> <span class=\"p\">[]);</span>\n\n<span class=\"c1\">//üëáüèª This runs when the messages are updated.</span>\n<span class=\"nx\">useEffect</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">foundRoom</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">roomChats</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">setChatMessages</span><span class=\"p\">(</span><span class=\"nx\">roomChats</span><span class=\"p\">));</span>\n<span class=\"p\">},</span> <span class=\"p\">[</span><span class=\"nx\">socket</span><span class=\"p\">])</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h3>\n  <a name=\"how-to-create-new-messages\" href=\"#how-to-create-new-messages\">\n  </a>\n  How to create new messages\n</h3>\n\n<p>To create new messages, we need to update the <code>handleNewMessage</code> function to send message property to the server and add it to the <code>messages</code> array.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"kd\">const</span> <span class=\"nx\">handleNewMessage</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">hour</span> <span class=\"o\">=</span>\n        <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">getHours</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span>\n            <span class=\"p\">?</span> <span class=\"s2\">`0</span><span class=\"p\">${</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">getHours</span><span class=\"p\">()}</span><span class=\"s2\">`</span>\n            <span class=\"p\">:</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">getHours</span><span class=\"p\">()}</span><span class=\"s2\">`</span><span class=\"p\">;</span>\n\n    <span class=\"kd\">const</span> <span class=\"nx\">mins</span> <span class=\"o\">=</span>\n        <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">getMinutes</span><span class=\"p\">()</span> <span class=\"o\">&lt;</span> <span class=\"mi\">10</span>\n            <span class=\"p\">?</span> <span class=\"s2\">`0</span><span class=\"p\">${</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">getMinutes</span><span class=\"p\">()}</span><span class=\"s2\">`</span>\n            <span class=\"p\">:</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">().</span><span class=\"nx\">getMinutes</span><span class=\"p\">()}</span><span class=\"s2\">`</span><span class=\"p\">;</span>\n\n    <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">emit</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">newMessage</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"nx\">message</span><span class=\"p\">,</span>\n        <span class=\"na\">room_id</span><span class=\"p\">:</span> <span class=\"nx\">id</span><span class=\"p\">,</span>\n        <span class=\"nx\">user</span><span class=\"p\">,</span>\n        <span class=\"na\">timestamp</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"nx\">hour</span><span class=\"p\">,</span> <span class=\"nx\">mins</span> <span class=\"p\">},</span>\n    <span class=\"p\">});</span>\n<span class=\"p\">};</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Listen to the event on the server and update the <code>chatRoom</code> array.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">on</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">newMessage</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"c1\">//üëáüèª Destructures the property from the object</span>\n    <span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">room_id</span><span class=\"p\">,</span> <span class=\"nx\">message</span><span class=\"p\">,</span> <span class=\"nx\">user</span><span class=\"p\">,</span> <span class=\"nx\">timestamp</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">data</span><span class=\"p\">;</span>\n\n    <span class=\"c1\">//üëáüèª Finds the room where the message was sent</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">result</span> <span class=\"o\">=</span> <span class=\"nx\">chatRooms</span><span class=\"p\">.</span><span class=\"nx\">filter</span><span class=\"p\">((</span><span class=\"nx\">room</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">room</span><span class=\"p\">.</span><span class=\"nx\">id</span> <span class=\"o\">==</span> <span class=\"nx\">room_id</span><span class=\"p\">);</span>\n\n    <span class=\"c1\">//üëáüèª Create the data structure for the message</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">newMessage</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"nx\">generateID</span><span class=\"p\">(),</span>\n        <span class=\"na\">text</span><span class=\"p\">:</span> <span class=\"nx\">message</span><span class=\"p\">,</span>\n        <span class=\"nx\">user</span><span class=\"p\">,</span>\n        <span class=\"na\">time</span><span class=\"p\">:</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"nx\">timestamp</span><span class=\"p\">.</span><span class=\"nx\">hour</span><span class=\"p\">}</span><span class=\"s2\">:</span><span class=\"p\">${</span><span class=\"nx\">timestamp</span><span class=\"p\">.</span><span class=\"nx\">mins</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">,</span>\n    <span class=\"p\">};</span>\n    <span class=\"c1\">//üëáüèª Updates the chatroom messages</span>\n    <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">to</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nx\">name</span><span class=\"p\">).</span><span class=\"nx\">emit</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">roomMessage</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">newMessage</span><span class=\"p\">);</span>\n    <span class=\"nx\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nx\">messages</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nx\">newMessage</span><span class=\"p\">);</span>\n\n    <span class=\"c1\">//üëáüèª Trigger the events to reflect the new changes</span>\n    <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">emit</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">roomsList</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">chatRooms</span><span class=\"p\">);</span>\n    <span class=\"nx\">socket</span><span class=\"p\">.</span><span class=\"nx\">emit</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">foundRoom</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"nx\">messages</span><span class=\"p\">);</span>\n<span class=\"p\">});</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h2>\n  <a name=\"conclusion\" href=\"#conclusion\">\n  </a>\n  Conclusion\n</h2>\n\n<p>So far, you've learnt how to set up Socket.io in a React Native and Node.js application, save data with Async Storage and communicate between a server and the Expo app via Socket.io.</p>\n\n<p>Socket.io is a great tool with excellent features that enables us to build efficient real-time applications like sports betting websites,¬†<a href=\"https://dev.to/novu/how-to-build-a-real-time-auction-system-with-socketio-and-reactjs-3ble\">auction and forex trading applications</a>, and of course,¬†<a href=\"https://dev.to/novu/building-a-chat-app-with-socketio-and-react-2edj\">chat applications</a>¬†by creating lasting connections with a Node.js server.</p>\n\n<p>Feel free to improve the application by:</p>\n\n<ul>\n<li>adding authentication</li>\n<li>saving the token with Async Storage</li>\n<li>adding a real-time database for the messages, and</li>\n<li>adding push notifications with the¬†<a href=\"https://docs.expo.dev/push-notifications/overview/\">expo notification</a>¬†package.</li>\n</ul>\n\n<p>The source code for this tutorial is available here:</p>\n\n<p><a href=\"https://github.com/novuhq/blog/tree/main/chat-app-reactnative-socketIO\">https://github.com/novuhq/blog/tree/main/chat-app-reactnative-socketIO</a></p>\n\n<p>Thank you for reading!üíÉüèª</p>\n\n<p><strong>P.S</strong> Novu is sending awesome swag on Hacktoberfest! Come and participate! Happy if you can support us by giving us a star! ‚≠êÔ∏è<br>\n<a href=\"https://github.com/novuhq/novu\">https://github.com/novuhq/novu</a></p>\n\n","body_markdown":"I wrote before on [how to build a chat app with React](url), it got 1660 likes and 52955 views ü§©\n\nSo I have decided to make another one for React Native.\n## What is this article about?\nChats are all around us, from Whatsapp to Facebook and Instagram, almost every platform offers a chat in some kind of variation.\n\nIn Today's digital world we have all gone mobile! Just before this article I wrote a friend a message on Whatsapp.\n\n![Typing](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/km2w1ppw3yw9pd9na7mu.gif)\n\nChats are fun, you send a message to a person or a group, they see the message and reply back. Simple yet complex.\nTo develop a chat app you would need to be aware of new messages as soon as they arrive.\n\n**In this article**, we will do something a little bit different than the previous React tutorial. We will create a sign in screen where you can enter your name, create groups where people can join and show real-time messages between the people in the group.\n\n## Getting Live Information From The Server ‚ÑπÔ∏è\nThere are two ways to get live information from your server about a new bid:\n\n**Use long-polling HTTP request**, basically an HTTP request every 5 - 10 seconds to get information about a new bid.\n\n**Use an open-socket (Websockets)** to get information directly from the server when a new bid arrives.\n\nIn this article I will talk about **Websockets** and specifically on the Node.js library - **Socket.io**\n\n[Socket.io](https://socket.io/) is a popular JavaScript library that allows us to create real-time, bi-directional communication between software applications and a Node.js server.\n\n## Novu - the first open-source notification infrastructure\nJust a quick background about us. Novu is the first open-source [notification infrastructure](https://novu.co). We basically help to manage all the product notifications. It can be **In-App** (the bell icon like you have in the Dev Community - **Websockets**), Emails, SMSs and so on.\n\nI would be super happy if you could give us a star! It will help me to make more articles every week üöÄ\nhttps://github.com/novuhq/novu\n\n![Novu](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yn90yvsd87tgik03c08v.gif)\nWe are sending some awesome swag during Hacktoberfest üòá\n\n## How to create a real time connection between React Native & Socket.io\n\nIn this tutorial, we'll build the chat application with¬†[Expo](https://expo.dev/)¬†- an open-source framework that enables us to create native apps for IOS and Android by writing React and JavaScript code.\n\n### Installing Expo\n[Expo](https://expo.dev/)¬†saves us from the complex configurations required to create a native application with¬†[React Native CLI](https://reactnative.dev/docs/getting-started), making it the easiest and fastest way to build and publish React Native apps.\n\nEnsure you have the¬†[Expo CLI](https://docs.expo.dev/get-started/installation/#1-expo-cli),¬†[Node.js](https://nodejs.org/en/), and¬†[Git](https://git-scm.com/)¬†installed on your computer. Then, create the project folder and an Expo React Native app by running the code below.\n\n```bash\nmkdir chat-app\ncd chat-app\nexpo init app\n```\n\nExpo allows us to create native applications using the [Managed](https://docs.expo.dev/introduction/managed-vs-bare/#managed-workflow) or [Bare Workflow](https://docs.expo.dev/introduction/managed-vs-bare/#bare-workflow). We'll use the blank Managed Workflow in this tutorial because all the necessary configurations have been completed for us.\n\n```bash\n? Choose a template: ‚Ä∫ - Use arrow-keys. Return to submit.\n    ----- Managed workflow -----\n‚ùØ   blank               a minimal app as clean as an empty canvas\n    blank (TypeScript)  same as blank but with TypeScript configuration\n    tabs (TypeScript)   several example screens and tabs using react-navigation and TypeScript\n    ----- Bare workflow -----\n    minimal             bare and minimal, just the essentials to get you started\n```\n\nInstall Socket.io Client API to the React Native app.\n\n```bash\ncd app\nexpo install socket.io-client\n```\n\nCreate a `socket.js` within a `utils` folder and copy the code below into the file\n\n```bash\nmkdir utils\ntouch socket.js\n//üëáüèª Paste within socket.js file\n```\nAnd add\n```jsx\nimport { io } from \"socket.io-client\";\nconst socket = io.connect(\"http://localhost:4000\");\nexport default socket;\n```\n\nThe code snippet above creates a real-time connection to the server hosted at that URL. (*We'll create the server in the upcoming section*).\n\nCreate a `styles.js` file within the `utils` folder and copy the code below into the file. It contains all the styling for the chat application.\n\n```jsx\nimport { StyleSheet } from \"react-native\";\n\nexport const styles = StyleSheet.create({\n\tloginscreen: {\n\t\tflex: 1,\n\t\tbackgroundColor: \"#EEF1FF\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tpadding: 12,\n\t\twidth: \"100%\",\n\t},\n\tloginheading: {\n\t\tfontSize: 26,\n\t\tmarginBottom: 10,\n\t},\n\tlogininputContainer: {\n\t\twidth: \"100%\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n\tlogininput: {\n\t\tborderWidth: 1,\n\t\twidth: \"90%\",\n\t\tpadding: 8,\n\t\tborderRadius: 2,\n\t},\n\tloginbutton: {\n\t\tbackgroundColor: \"green\",\n\t\tpadding: 12,\n\t\tmarginVertical: 10,\n\t\twidth: \"60%\",\n\t\tborderRadius: \"50%\",\n\t\televation: 1,\n\t},\n\tloginbuttonText: {\n\t\ttextAlign: \"center\",\n\t\tcolor: \"#fff\",\n\t\tfontWeight: \"600\",\n\t},\n\tchatscreen: {\n\t\tbackgroundColor: \"#F7F7F7\",\n\t\tflex: 1,\n\t\tpadding: 10,\n\t\tposition: \"relative\",\n\t},\n\tchatheading: {\n\t\tfontSize: 24,\n\t\tfontWeight: \"bold\",\n\t\tcolor: \"green\",\n\t},\n\tchattopContainer: {\n\t\tbackgroundColor: \"#F7F7F7\",\n\t\theight: 70,\n\t\twidth: \"100%\",\n\t\tpadding: 20,\n\t\tjustifyContent: \"center\",\n\t\tmarginBottom: 15,\n\t\televation: 2,\n\t},\n\tchatheader: {\n\t\tflexDirection: \"row\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"space-between\",\n\t},\n\tchatlistContainer: {\n\t\tpaddingHorizontal: 10,\n\t},\n\tchatemptyContainer: {\n\t\twidth: \"100%\",\n\t\theight: \"80%\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t},\n\tchatemptyText: { fontWeight: \"bold\", fontSize: 24, paddingBottom: 30 },\n\tmessagingscreen: {\n\t\tflex: 1,\n\t},\n\tmessaginginputContainer: {\n\t\twidth: \"100%\",\n\t\tminHeight: 100,\n\t\tbackgroundColor: \"white\",\n\t\tpaddingVertical: 30,\n\t\tpaddingHorizontal: 15,\n\t\tjustifyContent: \"center\",\n\t\tflexDirection: \"row\",\n\t},\n\tmessaginginput: {\n\t\tborderWidth: 1,\n\t\tpadding: 15,\n\t\tflex: 1,\n\t\tmarginRight: 10,\n\t\tborderRadius: 20,\n\t},\n\tmessagingbuttonContainer: {\n\t\twidth: \"30%\",\n\t\tbackgroundColor: \"green\",\n\t\tborderRadius: 3,\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tborderRadius: 50,\n\t},\n\tmodalbutton: {\n\t\twidth: \"40%\",\n\t\theight: 45,\n\t\tbackgroundColor: \"green\",\n\t\tborderRadius: 5,\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tcolor: \"#fff\",\n\t},\n\tmodalbuttonContainer: {\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"space-between\",\n\t\tmarginTop: 10,\n\t},\n\tmodaltext: {\n\t\tcolor: \"#fff\",\n\t},\n\tmodalContainer: {\n\t\twidth: \"100%\",\n\t\tborderTopColor: \"#ddd\",\n\t\tborderTopWidth: 1,\n\t\televation: 1,\n\t\theight: 400,\n\t\tbackgroundColor: \"#fff\",\n\t\tposition: \"absolute\",\n\t\tbottom: 0,\n\t\tzIndex: 10,\n\t\tpaddingVertical: 50,\n\t\tpaddingHorizontal: 20,\n\t},\n\tmodalinput: {\n\t\tborderWidth: 2,\n\t\tpadding: 15,\n\t},\n\tmodalsubheading: {\n\t\tfontSize: 20,\n\t\tfontWeight: \"bold\",\n\t\tmarginBottom: 15,\n\t\ttextAlign: \"center\",\n\t},\n\tmmessageWrapper: {\n\t\twidth: \"100%\",\n\t\talignItems: \"flex-start\",\n\t\tmarginBottom: 15,\n\t},\n\tmmessage: {\n\t\tmaxWidth: \"50%\",\n\t\tbackgroundColor: \"#f5ccc2\",\n\t\tpadding: 15,\n\t\tborderRadius: 10,\n\t\tmarginBottom: 2,\n\t},\n\tmvatar: {\n\t\tmarginRight: 5,\n\t},\n\tcchat: {\n\t\twidth: \"100%\",\n\t\tflexDirection: \"row\",\n\t\talignItems: \"center\",\n\t\tborderRadius: 5,\n\t\tpaddingHorizontal: 15,\n\t\tbackgroundColor: \"#fff\",\n\t\theight: 80,\n\t\tmarginBottom: 10,\n\t},\n\tcavatar: {\n\t\tmarginRight: 15,\n\t},\n\tcusername: {\n\t\tfontSize: 18,\n\t\tmarginBottom: 5,\n\t\tfontWeight: \"bold\",\n\t},\n\tcmessage: {\n\t\tfontSize: 14,\n\t\topacity: 0.7,\n\t},\n\tcrightContainer: {\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"space-between\",\n\t\tflex: 1,\n\t},\n\tctime: {\n\t\topacity: 0.5,\n\t},\n});\n```\n\nInstall React Navigation and its dependencies.¬†[React Navigation](https://reactnavigation.org/)¬†allows us to navigate from one screen to another within a React Native application.\n\n```bash\nnpm install @react-navigation/native\nnpx expo install react-native-screens react-native-safe-area-context\n```\n\n### Setting up the Socket.io Node.js server\n\nHere, I will guide you through creating the Socket.io Node.js server for real-time communication with the React Native application.\n\nCreate a `server` folder within the project folder.\n\n```bash\ncd chat-app\nmkdir server\n```\n\nNavigate into the server folder and create a `package.json` file.\n\n```bash\ncd server & npm init -y\n```\n\nInstall Express.js, CORS, Nodemon, and Socket.io Server API.\n\n```bash\nnpm install express cors nodemon socket.io\n```\n\n[Express.js](https://expressjs.com/)¬†is a fast, minimalist framework that provides several features for building web applications in Node.js.¬†[CORS](https://www.npmjs.com/package/cors)¬†is a Node.js package that allows communication between different domains.\n\n[Nodemon](https://www.npmjs.com/package/nodemon)¬†is a Node.js tool that automatically restarts the server after detecting file changes, and¬†[Socket.io](https://socket.io/docs/v4/server-api/)¬†allows us to configure a real-time connection on the server.\n\nCreate an `index.js` file - the entry point to the Node.js server.\n\n```bash\ntouch index.js\n```\n\nSet up a simple Node.js server using Express.js. The code snippet below returns a JSON object when you visit the `http://localhost:4000/api` in your browser.\n\n```jsx\n//üëáüèª index.js\nconst express = require(\"express\");\nconst app = express();\nconst PORT = 4000;\n\napp.use(express.urlencoded({ extended: true }));\napp.use(express.json());\n\napp.get(\"/api\", (req, res) => {\n\tres.json({\n\t\tmessage: \"Hello world\",\n\t});\n});\n\napp.listen(PORT, () => {\n\tconsole.log(`Server listening on ${PORT}`);\n});\n```\n\nImport the HTTP and the CORS library to allow data transfer between the client and the server domains.\n\n```jsx\nconst express = require(\"express\");\nconst app = express();\nconst PORT = 4000;\n\napp.use(express.urlencoded({ extended: true }));\napp.use(express.json());\n\n//üëáüèª New imports\nconst http = require(\"http\").Server(app);\nconst cors = require(\"cors\");\n\napp.use(cors());\n\napp.get(\"/api\", (req, res) => {\n\tres.json({\n\t\tmessage: \"Hello world\",\n\t});\n});\n\nhttp.listen(PORT, () => {\n\tconsole.log(`Server listening on ${PORT}`);\n});\n```\n\nNext, add Socket.io to the project to create a real-time connection. Before the `app.get()` block, copy the code below:\n\n```jsx\n//üëáüèª New imports\n.....\nconst socketIO = require('socket.io')(http, {\n    cors: {\n        origin: \"<http://localhost:3000>\"\n    }\n});\n\n//üëáüèª Add this before the app.get() block\nsocketIO.on('connection', (socket) => {\n    console.log(`‚ö°: ${socket.id} user just connected!`);\n\n    socket.on('disconnect', () => {\n      socket.disconnect()\n      console.log('üî•: A user disconnected');\n    });\n});\n\n```\n\nFrom the code snippet above, the `socket.io(\"connection\")` function establishes a connection with the React app, then creates a unique ID for each socket and logs the ID to the console whenever you refresh the app.\n\nWhen you refresh or close the app, the socket fires the disconnect event showing that a user has disconnected from the socket.\n\nConfigure Nodemon by adding the start command to the list of scripts in the `package.json` file. The code snippet below starts the server using Nodemon.\n\n```json\n//üëáüèª In server/package.json\n\n\"scripts\": {\n    \"test\": \"echo \\\\\"Error: no test specified\\\\\" && exit 1\",\n    \"start\": \"nodemon index.js\"\n  },\n\n```\n\nYou can now run the server with Nodemon by using the command below.\n\n```bash\nnpm start\n```\n\n## Building the user interface\n\nHere, we'll create the user interface for the chat application to enable users to sign in, create chat rooms, and send messages. The app is divided into three screens - the Login screen, the Chat screen, and the Messaging screen.\n\n![interface](https://manage.novu.co/wp-content/uploads/2022/10/z.gif)\n\nFirst, let's set up React Navigation.\n\nCreate a `screens` folder within the app folder, add the Login, Chat, and Messaging components and render a `\"Hello World\"` text within them.\n\n```bash\nmkdir screens\ntouch Login.js Chat.js Messaging.js\n```\n\nCopy the code below into the `App.js` file within the app folder.\n\n```jsx\nimport React from \"react\";\n\n//üëáüèª app screens\nimport Login from \"./screens/Login\";\nimport Messaging from \"./screens/Messaging\";\nimport Chat from \"./screens/Chat\";\n\n//üëáüèª React Navigation configurations\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n\treturn (\n\t\t<NavigationContainer>\n\t\t\t<Stack.Navigator>\n\t\t\t\t<Stack.Screen\n\t\t\t\t\tname='Login'\n\t\t\t\t\tcomponent={Login}\n\t\t\t\t\toptions={{ headerShown: false }}\n\t\t\t\t/>\n\n\t\t\t\t<Stack.Screen\n\t\t\t\t\tname='Chat'\n\t\t\t\t\tcomponent={Chat}\n\t\t\t\t\toptions={{\n\t\t\t\t\t\ttitle: \"Chats\",\n\t\t\t\t\t\theaderShown: false,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Stack.Screen name='Messaging' component={Messaging} />\n\t\t\t</Stack.Navigator>\n\t\t</NavigationContainer>\n\t);\n}\n```\n\n### The Login screen\n\nCopy the code below into the `Login.js` file.\n\n```jsx\nimport React, { useState } from \"react\";\nimport {\n\tText,\n\tSafeAreaView,\n\tView,\n\tTextInput,\n\tPressable,\n\tAlert,\n} from \"react-native\";\n\n//üëáüèª Import the app styles\nimport { styles } from \"../utils/styles\";\n\nconst Login = ({ navigation }) => {\n\tconst [username, setUsername] = useState(\"\");\n\n\t//üëáüèª checks if the input field is empty\n\tconst handleSignIn = () => {\n\t\tif (username.trim()) {\n\t\t\t//üëáüèª Logs the username to the console\n\t\t\tconsole.log({ username });\n\t\t} else {\n\t\t\tAlert.alert(\"Username is required.\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<SafeAreaView style={styles.loginscreen}>\n\t\t\t<View style={styles.loginscreen}>\n\t\t\t\t<Text style={styles.loginheading}>Sign in</Text>\n\t\t\t\t<View style={styles.logininputContainer}>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tautoCorrect={false}\n\t\t\t\t\t\tplaceholder='Enter your username'\n\t\t\t\t\t\tstyle={styles.logininput}\n\t\t\t\t\t\tonChangeText={(value) => setUsername(value)}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\n\t\t\t\t<Pressable onPress={handleSignIn} style={styles.loginbutton}>\n\t\t\t\t\t<View>\n\t\t\t\t\t\t<Text style={styles.loginbuttonText}>Get Started</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</Pressable>\n\t\t\t</View>\n\t\t</SafeAreaView>\n\t);\n};\n\nexport default Login;\n```\n\nThe code snippet accepts the username from the user and logs it on the console.\n\nLet‚Äôs update the code and save the username using¬†[Async Storage](https://react-native-async-storage.github.io/async-storage/), so users will not be required to sign in to the application every time they launch the app.\n\n<aside>\nüí° [*Async Storage](https://react-native-async-storage.github.io/async-storage/)¬†is a React Native package used to store string data in native applications. It is similar to the local storage on the web and can be used to store tokens and various data in string format.*\n\n</aside>\n\nRun the code below to install Async Storage\n\n```bash\nexpo install @react-native-async-storage/async-storage\n```\n\nUpdate the `handleSignIn` function to save the username via AsyncStorage.\n\n```jsx\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst storeUsername = async () => {\n\t\ttry {\n\t\t\t//üëáüèª async function - saves the username to AsyncStorage\n\t\t\t//   redirecting to the Chat page\n\t\t\tawait AsyncStorage.setItem(\"username\", username);\n\t\t\tnavigation.navigate(\"Chat\");\n\t\t} catch (e) {\n\t\t\tAlert.alert(\"Error! While saving username\");\n\t\t}\n\t};\n\n\tconst handleSignIn = () => {\n\t\tif (username.trim()) {\n\t\t\t//üëáüèª calls AsyncStorage function\n\t\t\tstoreUsername();\n\t\t} else {\n\t\t\tAlert.alert(\"Username is required.\");\n\t\t}\n\t};\n```\n\n### The Chat room\n\nHere, we'll update the user interface for the `Chat` screen to display the available chat rooms, allow users to create one, and navigate to the `Messaging` screen when each room is selected.\n\n![ChatRoom](https://manage.novu.co/wp-content/uploads/2022/10/z.gif)\n\nCopy the code below into the `Chat.js` file.\n\n```jsx\nimport React from \"react\";\nimport { View, Text, Pressable, SafeAreaView, FlatList } from \"react-native\";\nimport { Feather } from \"@expo/vector-icons\";\n\nimport ChatComponent from \"../component/ChatComponent\";\nimport { styles } from \"../utils/styles\";\n\nconst Chat = () => {\n\n\t//üëáüèª Dummy list of rooms\n\tconst rooms = [\n\t\t{\n\t\t\tid: \"1\",\n\t\t\tname: \"Novu Hangouts\",\n\t\t\tmessages: [\n\t\t\t\t{\n\t\t\t\t\tid: \"1a\",\n\t\t\t\t\ttext: \"Hello guys, welcome!\",\n\t\t\t\t\ttime: \"07:50\",\n\t\t\t\t\tuser: \"Tomer\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"1b\",\n\t\t\t\t\ttext: \"Hi Tomer, thank you! üòá\",\n\t\t\t\t\ttime: \"08:50\",\n\t\t\t\t\tuser: \"David\",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tid: \"2\",\n\t\t\tname: \"Hacksquad Team 1\",\n\t\t\tmessages: [\n\t\t\t\t{\n\t\t\t\t\tid: \"2a\",\n\t\t\t\t\ttext: \"Guys, who's awake? üôèüèΩ\",\n\t\t\t\t\ttime: \"12:50\",\n\t\t\t\t\tuser: \"Team Leader\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"2b\",\n\t\t\t\t\ttext: \"What's up? üßëüèª‚Äçüíª\",\n\t\t\t\t\ttime: \"03:50\",\n\t\t\t\t\tuser: \"Victoria\",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t];\n\n\treturn (\n\t\t<SafeAreaView style={styles.chatscreen}>\n\t\t\t<View style={styles.chattopContainer}>\n\t\t\t\t<View style={styles.chatheader}>\n\t\t\t\t\t<Text style={styles.chatheading}>Chats</Text>\n\n\t\t\t{/* üëáüèª Logs \"ButtonPressed\" to the console when the icon is clicked */}\n\t\t\t\t\t<Pressable onPress={() => console.log(\"Button Pressed!\")}>\n\t\t\t\t\t\t<Feather name='edit' size={24} color='green' />\n\t\t\t\t\t</Pressable>\n\t\t\t\t</View>\n\t\t\t</View>\n\n\t\t\t<View style={styles.chatlistContainer}>\n\t\t\t\t{rooms.length > 0 ? (\n\t\t\t\t\t<FlatList\n\t\t\t\t\t\tdata={rooms}\n\t\t\t\t\t\trenderItem={({ item }) => <ChatComponent item={item} />}\n\t\t\t\t\t\tkeyExtractor={(item) => item.id}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<View style={styles.chatemptyContainer}>\n\t\t\t\t\t\t<Text style={styles.chatemptyText}>No rooms created!</Text>\n\t\t\t\t\t\t<Text>Click the icon above to create a Chat room</Text>\n\t\t\t\t\t</View>\n\t\t\t\t)}\n\t\t\t</View>\n\t\t</SafeAreaView>\n\t);\n};\n\nexport default Chat;\n```\n\n- From the code snippet above:\n    - I created a dummy list of rooms, then rendered them through a¬†[FlatList](https://reactnative.dev/docs/flatlist)¬†into the `ChatComponent`.(*yet to be created*)\n    - Since the rooms can either be empty or populated, the conditional statement determines the component to display.\n\n\n![Code Snippet](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d8wxiyoqtttftbtk1g69.png)\n\nNext, create the `ChatComponent` within a component folder. It represents a preview of each chat name, time, the last message sent and redirects users to the `Messaging` component when clicked. \n\nCopy the code below into the `components/ChatComponent.js` file.\n\n```jsx\nimport { View, Text, Pressable } from \"react-native\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { styles } from \"../utils/styles\";\n\nconst ChatComponent = ({ item }) => {\n\tconst navigation = useNavigation();\n\tconst [messages, setMessages] = useState({});\n\n\t//üëáüèª Retrieves the last message in the array from the item prop\n\tuseLayoutEffect(() => {\n\t\tsetMessages(item.messages[item.messages.length - 1]);\n\t}, []);\n\n\t///üëáüèª Navigates to the Messaging screen\n\tconst handleNavigation = () => {\n\t\tnavigation.navigate(\"Messaging\", {\n\t\t\tid: item.id,\n\t\t\tname: item.name,\n\t\t});\n\t};\n\n\treturn (\n\t\t<Pressable style={styles.cchat} onPress={handleNavigation}>\n\t\t\t<Ionicons\n\t\t\t\tname='person-circle-outline'\n\t\t\t\tsize={45}\n\t\t\t\tcolor='black'\n\t\t\t\tstyle={styles.cavatar}\n\t\t\t/>\n\n\t\t\t<View style={styles.crightContainer}>\n\t\t\t\t<View>\n\t\t\t\t\t<Text style={styles.cusername}>{item.name}</Text>\n\n\t\t\t\t\t<Text style={styles.cmessage}>\n\t\t\t\t\t\t{messages?.text ? messages.text : \"Tap to start chatting\"}\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t\t<View>\n\t\t\t\t\t<Text style={styles.ctime}>\n\t\t\t\t\t\t{messages?.time ? messages.time : \"now\"}\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t</Pressable>\n\t);\n};\n\nexport default ChatComponent;\n```\n\nCongratulationsüíÉüèª! We can now display the list of rooms and redirect the user the `Messaging` screen.\n\nBefore we proceed, let's create a custom Modal component that allows users to create a new group (room) when we press the header icon.\n\n![Before](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oj8kfx666h5mc0hg0d3d.png)\n\nCreate a `Modal.js` file within the components folder, import it into the Chat screen and toggle it whenever we press the header icon.\n\n```jsx\nimport React from \"react\";\nimport { View, Text, Pressable, SafeAreaView, FlatList } from \"react-native\";\nimport { Feather } from \"@expo/vector-icons\";\nimport ChatComponent from \"../component/ChatComponent\";\nimport { styles } from \"../utils/styles\";\n\n//üëáüèª The Modal component\nimport Modal from \"../component/Modal\";\n\nconst Chat = () => {\n\tconst [visible, setVisible] = useState(false);\n\n\t//...other variables\n\treturn (\n\t\t<SafeAreaView style={styles.chatscreen}>\n\t\t\t<View style={styles.chattopContainer}>\n\t\t\t\t<View style={styles.chatheader}>\n\t\t\t\t\t<Text style={styles.chatheading}>Chats</Text>\n\n\t\t\t\t\t{/* Displays the Modal component when clicked */}\n\t\t\t\t\t<Pressable onPress={() => setVisible(true)}>\n\t\t\t\t\t\t<Feather name='edit' size={24} color='green' />\n\t\t\t\t\t</Pressable>\n\t\t\t\t</View>\n\t\t\t</View>\n\n\t\t\t<View style={styles.chatlistContainer}>...</View>\n\t\t\t{/*\n\t\t\t\tPass setVisible as prop in order to toggle \n\t\t\t\tthe display within the Modal component.\n\t\t\t*/}\n\t\t\t{visible ? <Modal setVisible={setVisible} /> : \"\"}\n\t\t</SafeAreaView>\n\t);\n};\n\nexport default Chat;\n```\n\nCopy the code below into the `Modal.js` file.\n\n```jsx\nimport { View, Text, TextInput, Pressable } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { styles } from \"../utils/styles\";\n\nconst Modal = ({ setVisible }) => {\n\tconst [groupName, setGroupName] = useState(\"\");\n\n\t//üëáüèª Function that closes the Modal component\n\tconst closeModal = () => setVisible(false);\n\n\t//üëáüèª Logs the group name to the console\n\tconst handleCreateRoom = () => {\n\t\tconsole.log({ groupName });\n\t\tcloseModal();\n\t};\n\treturn (\n\t\t<View style={styles.modalContainer}>\n\t\t\t<Text style={styles.modalsubheading}>Enter your Group name</Text>\n\t\t\t<TextInput\n\t\t\t\tstyle={styles.modalinput}\n\t\t\t\tplaceholder='Group name'\n\t\t\t\tonChangeText={(value) => setGroupName(value)}\n\t\t\t/>\n\n\t\t\t<View style={styles.modalbuttonContainer}>\n\t\t\t\t<Pressable style={styles.modalbutton} onPress={handleCreateRoom}>\n\t\t\t\t\t<Text style={styles.modaltext}>CREATE</Text>\n\t\t\t\t</Pressable>\n\t\t\t\t<Pressable\n\t\t\t\t\tstyle={[styles.modalbutton, { backgroundColor: \"#E14D2A\" }]}\n\t\t\t\t\tonPress={closeModal}\n\t\t\t\t>\n\t\t\t\t\t<Text style={styles.modaltext}>CANCEL</Text>\n\t\t\t\t</Pressable>\n\t\t\t</View>\n\t\t</View>\n\t);\n};\n\nexport default Modal;\n```\n\n### The Messaging screen\n\nCopy the code below into the `Messaging.js` file.\n\n```jsx\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { View, TextInput, Text, FlatList, Pressable } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport MessageComponent from \"../component/MessageComponent\";\nimport { styles } from \"../utils/styles\";\n\nconst Messaging = ({ route, navigation }) => {\n\tconst [chatMessages, setChatMessages] = useState([\n\t\t{\n\t\t\tid: \"1\",\n\t\t\ttext: \"Hello guys, welcome!\",\n\t\t\ttime: \"07:50\",\n\t\t\tuser: \"Tomer\",\n\t\t},\n\t\t{\n\t\t\tid: \"2\",\n\t\t\ttext: \"Hi Tomer, thank you! üòá\",\n\t\t\ttime: \"08:50\",\n\t\t\tuser: \"David\",\n\t\t},\n\t]);\n\tconst [message, setMessage] = useState(\"\");\n\tconst [user, setUser] = useState(\"\");\n\n\t//üëáüèª Access the chatroom's name and id\n\tconst { name, id } = route.params;\n\n//üëáüèª This function gets the username saved on AsyncStorage\n\tconst getUsername = async () => {\n\t\ttry {\n\t\t\tconst value = await AsyncStorage.getItem(\"username\");\n\t\t\tif (value !== null) {\n\t\t\t\tsetUser(value);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Error while loading username!\");\n\t\t}\n\t};\n\n\t//üëáüèª Sets the header title to the name chatroom's name\n\tuseLayoutEffect(() => {\n\t\tnavigation.setOptions({ title: name });\n\t\tgetUsername()\n\t}, []);\n\n\t/*üëáüèª \n\t\tThis function gets the time the user sends a message, then \n\t\tlogs the username, message, and the timestamp to the console.\n\t */\n\tconst handleNewMessage = () => {\n\t\tconst hour =\n\t\t\tnew Date().getHours() < 10\n\t\t\t\t? `0${new Date().getHours()}`\n\t\t\t\t: `${new Date().getHours()}`;\n\n\t\tconst mins =\n\t\t\tnew Date().getMinutes() < 10\n\t\t\t\t? `0${new Date().getMinutes()}`\n\t\t\t\t: `${new Date().getMinutes()}`;\n\n\t\tconsole.log({\n\t\t\tmessage,\n\t\t\tuser,\n\t\t\ttimestamp: { hour, mins },\n\t\t});\n\t};\n\n\treturn (\n\t\t<View style={styles.messagingscreen}>\n\t\t\t<View\n\t\t\t\tstyle={[\n\t\t\t\t\tstyles.messagingscreen,\n\t\t\t\t\t{ paddingVertical: 15, paddingHorizontal: 10 },\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t{chatMessages[0] ? (\n\t\t\t\t\t<FlatList\n\t\t\t\t\t\tdata={chatMessages}\n\t\t\t\t\t\trenderItem={({ item }) => (\n\t\t\t\t\t\t\t<MessageComponent item={item} user={user} />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tkeyExtractor={(item) => item.id}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t\"\"\n\t\t\t\t)}\n\t\t\t</View>\n\n\t\t\t<View style={styles.messaginginputContainer}>\n\t\t\t\t<TextInput\n\t\t\t\t\tstyle={styles.messaginginput}\n\t\t\t\t\tonChangeText={(value) => setMessage(value)}\n\t\t\t\t/>\n\t\t\t\t<Pressable\n\t\t\t\t\tstyle={styles.messagingbuttonContainer}\n\t\t\t\t\tonPress={handleNewMessage}\n\t\t\t\t>\n\t\t\t\t\t<View>\n\t\t\t\t\t\t<Text style={{ color: \"#f2f0f1\", fontSize: 20 }}>SEND</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</Pressable>\n\t\t\t</View>\n\t\t</View>\n\t);\n};\n\nexport default Messaging;\n```\n\nThe code snippet above renders the messages in each chatroom via the `MessageComponent` component. \n\nCreate the `MessageComponent` file and copy the code below into the file:\n\n```jsx\nimport { View, Text } from \"react-native\";\nimport React from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { styles } from \"../utils/styles\";\n\nexport default function MessageComponent({ item, user }) {\n\tconst status = item.user !== user;\n\n\treturn (\n\t\t<View>\n\t\t\t<View\n\t\t\t\tstyle={\n\t\t\t\t\tstatus\n\t\t\t\t\t\t? styles.mmessageWrapper\n\t\t\t\t\t\t: [styles.mmessageWrapper, { alignItems: \"flex-end\" }]\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n\t\t\t\t\t<Ionicons\n\t\t\t\t\t\tname='person-circle-outline'\n\t\t\t\t\t\tsize={30}\n\t\t\t\t\t\tcolor='black'\n\t\t\t\t\t\tstyle={styles.mavatar}\n\t\t\t\t\t/>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\tstatus\n\t\t\t\t\t\t\t\t? styles.mmessage\n\t\t\t\t\t\t\t\t: [styles.mmessage, { backgroundColor: \"rgb(194, 243, 194)\" }]\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text>{item.text}</Text>\n\t\t\t\t\t</View>\n\t\t\t\t</View>\n\t\t\t\t<Text style={{ marginLeft: 40 }}>{item.time}</Text>\n\t\t\t</View>\n\t\t</View>\n\t);\n}\n```\n\nFrom the code snippet above, the `status` variable checks if the user key on the message is the same as the current user so as to determine how to align the messages.\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ks89kg6h1f86pacpklk1.png)\n\nWe've now completed the user interface for the application!üéä Next, let's learn how to communicate with the Socket.io server, create chat rooms, and send messages in real time via Socket.io.\n\n## Creating chat rooms with Socket.io in React Native\n\nIn this section, I'll guide you through creating chat rooms on the Socket.io server and displaying them on the app.\n\nUpdate the `Modal.js` file to send a message to the server when we create a new chat room.\n\n```jsx\nimport { View, Text, TextInput, Pressable } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { styles } from \"../utils/styles\";\n\n//üëáüèª Import socket from the socket.js file in utils folder\nimport socket from \"../utils/socket\";\n\nconst Modal = ({ setVisible }) => {\n\tconst closeModal = () => setVisible(false);\n\tconst [groupName, setGroupName] = useState(\"\");\n\n\tconst handleCreateRoom = () => {\n\t\t//üëáüèª sends a message containing the group name to the server\n\t\tsocket.emit(\"createRoom\", groupName);\n\t\tcloseModal();\n\t};\n\treturn (\n\t\t<View style={styles.modalContainer}>\n\t\t\t<Text style={styles.modalsubheading}>Enter your Group name</Text>\n\t\t\t<TextInput\n\t\t\t\tstyle={styles.modalinput}\n\t\t\t\tplaceholder='Group name'\n\t\t\t\tonChangeText={(value) => setGroupName(value)}\n\t\t\t/>\n\t\t\t<View style={styles.modalbuttonContainer}>\n\t\t\t\t{/* üëáüèª The create button triggers the function*/}\n\t\t\t\t<Pressable style={styles.modalbutton} onPress={handleCreateRoom}>\n\t\t\t\t\t<Text style={styles.modaltext}>CREATE</Text>\n\t\t\t\t</Pressable>\n\t\t\t\t\n\t\t\t\t<Pressable\n\t\t\t\t\tstyle={[styles.modalbutton, { backgroundColor: \"#E14D2A\" }]}\n\t\t\t\t\tonPress={closeModal}\n\t\t\t\t>\n\t\t\t\t\t<Text style={styles.modaltext}>CANCEL</Text>\n\t\t\t\t</Pressable>\n\t\t\t</View>\n\t\t</View>\n\t);\n};\n\nexport default Modal;\n```\n\nCreate a listener on the backend server that saves the group name to an array and returns the whole list.\n\n```jsx\n//üëáüèª Generates random string as the ID\nconst generateID = () => Math.random().toString(36).substring(2, 10);\n\nlet chatRooms = [\n\t//üëáüèª Here is the data structure of each chatroom\n\t// {\n\t// \tid: generateID(),\n\t// \tname: \"Novu Hangouts\",\n\t// \tmessages: [\n\t// \t\t{\n\t// \t\t\tid: generateID(),\n\t// \t\t\ttext: \"Hello guys, welcome!\",\n\t// \t\t\ttime: \"07:50\",\n\t// \t\t\tuser: \"Tomer\",\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tid: generateID(),\n\t// \t\t\ttext: \"Hi Tomer, thank you! üòá\",\n\t// \t\t\ttime: \"08:50\",\n\t// \t\t\tuser: \"David\",\n\t// \t\t},\n\t// \t],\n\t// },\n];\n\nsocketIO.on(\"connection\", (socket) => {\n\tconsole.log(`‚ö°: ${socket.id} user just connected!`);\n\n\tsocket.on(\"createRoom\", (roomName) => {\n\t\tsocket.join(roomName);\n\t\t//üëáüèª Adds the new group name to the chat rooms array\n\t\tchatRooms.unshift({ id: generateID(), roomName, messages: [] });\n\t\t//üëáüèª Returns the updated chat rooms via another event\n\t\tsocket.emit(\"roomsList\", chatRooms);\n\t});\n\n\tsocket.on(\"disconnect\", () => {\n\t\tsocket.disconnect();\n\t\tconsole.log(\"üî•: A user disconnected\");\n\t});\n});\n```\n\nAlso, return the chat room list via the API route as below:\n\n```jsx\napp.get(\"/api\", (req, res) => {\n    res.json(chatRooms);\n});\n```\n\nUpdate the `Chat.js` file to fetch and listen to the `roomsList` from the server and display the chat rooms.\n\n```jsx\nconst [rooms, setRooms] = useState([]);\n\n//üëáüèª Runs when the component mounts\nuseLayoutEffect(() => {\n    function fetchGroups() {\n        fetch(\"http://localhost:4000/api\")\n            .then((res) => res.json())\n            .then((data) => setRooms(data))\n            .catch((err) => console.error(err));\n    }\n    fetchGroups();\n}, []);\n\n//üëáüèª Runs whenever there is new trigger from the backend\nuseEffect(() => {\n    socket.on(\"roomsList\", (rooms) => {\n        setRooms(rooms);\n    });\n}, [socket]);\n```\n\n## Sending messages via Socket.io in React Native\n\nIn the previous section, we were able to create new chat rooms, save them in an array on the server, and display them within the app. Here, we'll update the chat room messages by adding new messages to the sub-array.\n\n### How to display the chat room messages\n\nRecall that the id of each chat room is passed into the Messaging component. Now, let's send the id to the server via Socket.io when the screen loads.\n\n```jsx\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { View, TextInput, Text, FlatList, Pressable } from \"react-native\";\nimport socket from \"../utils/socket\";\nimport MessageComponent from \"../component/MessageComponent\";\nimport { styles } from \"../utils/styles\";\n\nconst Messaging = ({ route, navigation }) => {\n\t//üëáüèª The id passed\n\tconst { name, id } = route.params;\n\n//...other functions\n\n\tuseLayoutEffect(() => {\n\t\tnavigation.setOptions({ title: name });\n\n\t\t//üëáüèª Sends the id to the server to fetch all its messages\n\t\tsocket.emit(\"findRoom\", id);\n\t}, []);\n\n\treturn <View style={styles.messagingscreen}>...</View>;\n};\n\nexport default Messaging;\n```\n\nCreate the event listener on the server.\n\n```jsx\nsocket.on(\"findRoom\", (id) => {\n\t//üëáüèª Filters the array by the ID\n\tlet result = chatRooms.filter((room) => room.id == id);\n\t//üëáüèª Sends the messages to the app\n\tsocket.emit(\"foundRoom\", result[0].messages);\n});\n```\n\nNext, listen to the `foundRoom` event and display the messages to the user.\n\n```jsx\n//üëáüèª This runs only initial mount\nuseLayoutEffect(() => {\n\tnavigation.setOptions({ title: name });\n\tsocket.emit(\"findRoom\", id);\n\tsocket.on(\"foundRoom\", (roomChats) => setChatMessages(roomChats));\n}, []);\n\n//üëáüèª This runs when the messages are updated.\nuseEffect(() => {\n\tsocket.on(\"foundRoom\", (roomChats) => setChatMessages(roomChats));\n}, [socket])\n```\n\n### How to create new messages\n\nTo create new messages, we need to update the `handleNewMessage` function to send message property to the server and add it to the `messages` array.\n\n```jsx\nconst handleNewMessage = () => {\n\tconst hour =\n\t\tnew Date().getHours() < 10\n\t\t\t? `0${new Date().getHours()}`\n\t\t\t: `${new Date().getHours()}`;\n\n\tconst mins =\n\t\tnew Date().getMinutes() < 10\n\t\t\t? `0${new Date().getMinutes()}`\n\t\t\t: `${new Date().getMinutes()}`;\n\n\tsocket.emit(\"newMessage\", {\n\t\tmessage,\n\t\troom_id: id,\n\t\tuser,\n\t\ttimestamp: { hour, mins },\n\t});\n};\n```\n\nListen to the event on the server and update the `chatRoom` array.\n\n```jsx\nsocket.on(\"newMessage\", (data) => {\n    //üëáüèª Destructures the property from the object\n    const { room_id, message, user, timestamp } = data;\n\n    //üëáüèª Finds the room where the message was sent\n    let result = chatRooms.filter((room) => room.id == room_id);\n\n    //üëáüèª Create the data structure for the message\n    const newMessage = {\n        id: generateID(),\n        text: message,\n        user,\n        time: `${timestamp.hour}:${timestamp.mins}`,\n    };\n    //üëáüèª Updates the chatroom messages\n    socket.to(result[0].name).emit(\"roomMessage\", newMessage);\n    result[0].messages.push(newMessage);\n\n    //üëáüèª Trigger the events to reflect the new changes\n    socket.emit(\"roomsList\", chatRooms);\n    socket.emit(\"foundRoom\", result[0].messages);\n});\n```\n\n## Conclusion\n\nSo far, you've learnt how to set up Socket.io in a React Native and Node.js application, save data with Async Storage and communicate between a server and the Expo app via Socket.io.\n\nSocket.io is a great tool with excellent features that enables us to build efficient real-time applications like sports betting websites,¬†[auction and forex trading applications](https://dev.to/novu/how-to-build-a-real-time-auction-system-with-socketio-and-reactjs-3ble), and of course,¬†[chat applications](https://dev.to/novu/building-a-chat-app-with-socketio-and-react-2edj)¬†by creating lasting connections with a Node.js server.\n\nFeel free to improve the application by:\n\n- adding authentication\n- saving the token with Async Storage\n- adding a real-time database for the messages, and\n- adding push notifications with the¬†[expo notification](https://docs.expo.dev/push-notifications/overview/)¬†package.\n\nThe source code for this tutorial is available here:\n\n[https://github.com/novuhq/blog/tree/main/chat-app-reactnative-socketIO](https://github.com/novuhq/blog/tree/main/chat-app-reactnative-socketIO)\n\nThank you for reading!üíÉüèª\n\n**P.S** Novu is sending awesome swag on Hacktoberfest! Come and participate! Happy if you can support us by giving us a star! ‚≠êÔ∏è\nhttps://github.com/novuhq/novu","user":{"name":"Nevo David","username":"nevodavid","twitter_username":"nevodavid","github_username":"nevo-david","user_id":820341,"website_url":"https://novu.co","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--bIVydCBG--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/820341/e194b487-83e7-47d8-b388-eeb4645aaad0.png","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--ViZheHPS--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/820341/e194b487-83e7-47d8-b388-eeb4645aaad0.png"},"organization":{"name":"novu","username":"novu","slug":"novu","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--176mSuzX--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/5804/9c8d9724-6aea-4480-8832-40c47db5d14b.jpeg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--uAvUyAYM--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/5804/9c8d9724-6aea-4480-8832-40c47db5d14b.jpeg"}}