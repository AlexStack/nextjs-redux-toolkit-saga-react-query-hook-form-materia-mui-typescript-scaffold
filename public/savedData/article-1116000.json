{"type_of":"article","id":1116000,"title":"Progressive web apps with Material UI (MUI), Next.js and Workbox","description":"Setting up PWA's involves a lot of moving parts, so I've decided to create a template repository,...","readable_publish_date":"Jun 16","slug":"progressive-web-apps-with-material-ui-mui-nextjs-and-workbox-1doj","path":"/ivandotv/progressive-web-apps-with-material-ui-mui-nextjs-and-workbox-1doj","url":"https://dev.to/ivandotv/progressive-web-apps-with-material-ui-mui-nextjs-and-workbox-1doj","comments_count":0,"public_reactions_count":9,"collection_id":null,"published_timestamp":"2022-06-16T13:53:05Z","positive_reactions_count":9,"cover_image":null,"social_image":"https://dev.to/social_previews/article/1116000.png","canonical_url":"https://dev.to/ivandotv/progressive-web-apps-with-material-ui-mui-nextjs-and-workbox-1doj","created_at":"2022-06-16T13:53:05Z","edited_at":null,"crossposted_at":null,"published_at":"2022-06-16T13:53:05Z","last_comment_at":"2022-06-16T13:53:05Z","reading_time_minutes":2,"tag_list":"nextjs, materiaui, mui, pwa","tags":["nextjs","materiaui","mui","pwa"],"body_html":"<p>Setting up PWA's involves a lot of moving parts, so I've decided to create a template repository, that I would always keep up to date, and it will enable me to get started quickly.</p>\n\n<p>demo: <a href=\"https://material-pwa.vercel.app/\">https://material-pwa.vercel.app/</a></p>\n\n<p>repository: <a href=\"https://github.com/ivandotv/nextjs-material-pwa\">https://github.com/ivandotv/nextjs-material-pwa</a></p>\n\n<h2>\n  <a name=\"layout\" href=\"#layout\">\n  </a>\n  Layout\n</h2>\n\n<p>The application supports both desktop and mobile layouts.</p>\n\n<p>The desktop layout has a sidebar on the left side that can open and close.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JPUufiJI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dnrxov1innw6wbe9ieyx.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JPUufiJI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dnrxov1innw6wbe9ieyx.gif\" alt=\"desktop layout\" loading=\"lazy\" width=\"600\" height=\"291\" data-animated=\"true\"></a></p>\n\n<p>The mobile layout has two options.</p>\n\n<ul>\n<li>Traditional layout with a sidebar that can be swiped to open/close</li>\n</ul>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--59xgurka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1laz4l8uev3eswo8z847.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--59xgurka--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1laz4l8uev3eswo8z847.gif\" alt=\"mobile sidebar layout\" loading=\"lazy\" width=\"300\" height=\"634\" data-animated=\"true\"></a></p>\n\n<ul>\n<li>Modern layout where menu items are at the bottom</li>\n</ul>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--YcFJMrhn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gl7ib0pvlrkmc4wy3g1m.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--YcFJMrhn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gl7ib0pvlrkmc4wy3g1m.gif\" alt=\"mobile bottom menu layout\" loading=\"lazy\" width=\"300\" height=\"633\" data-animated=\"true\"></a></p>\n\n<h2>\n  <a name=\"theming\" href=\"#theming\">\n  </a>\n  Theming\n</h2>\n\n<ul>\n<li>There are two themes dark and light, and they can easily be customized.</li>\n</ul>\n\n<h2>\n  <a name=\"onboarding-slideshow\" href=\"#onboarding-slideshow\">\n  </a>\n  Onboarding slideshow\n</h2>\n\n<p>I've also included an onboarding slideshow which is usually present in native apps. This is optional and it can easily be removed.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--A8OweA7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnnsxmxfbc3a0zauv8ch.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--A8OweA7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnnsxmxfbc3a0zauv8ch.gif\" alt=\"onboarding slideshow\" loading=\"lazy\" width=\"300\" height=\"634\" data-animated=\"true\"></a></p>\n\n<h2>\n  <a name=\"service-worker\" href=\"#service-worker\">\n  </a>\n  Service worker\n</h2>\n\n<p>The real hard part of creating PWA's is service worker integration, both in the build process and in production.<br>\nService worker functionality is implemented with the excellent <a href=\"https://developer.chrome.com/docs/workbox/\">Workbox library</a></p>\n\n<h3>\n  <a name=\"service-worker-setup\" href=\"#service-worker-setup\">\n  </a>\n  service worker setup\n</h3>\n\n<ul>\n<li>Service worker is written in Typescript and it will be compiled together with the rest of the code. The service worker will precache all the routes, images, CSS, and google fonts. Every time the app is built new cache manifest is created.</li>\n</ul>\n\n<p>When the service worker is installed, the application will show a prompt to reload the application so the new service worker can take over.</p>\n\n<h3>\n  <a name=\"offline-fallback\" href=\"#offline-fallback\">\n  </a>\n  offline fallback\n</h3>\n\n<p>Offline fallback is provided, if <code>navigation</code> happens when there is no network, the fallback page will be shown. Please note that the fallback files must be pure html,css, and js (no react, or css-in-js libraries). Fallback files need to be placed in the <code>public</code> directory.</p>\n\n<p>Also, there is <code>network offline</code> detection, if the browser loses network connection, there will be a notification inside the app that the application is offline. You can test this via the Chrome dev tools network tab.</p>\n\n<h3>\n  <a name=\"installation-prompt\" href=\"#installation-prompt\">\n  </a>\n  installation prompt\n</h3>\n\n<p>The application also has a custom prompt for the installation of the app. Please note that the installation prompt only works on the desktop OS'es and Android, no IOS.</p>\n\n<h3>\n  <a name=\"app-shortcuts\" href=\"#app-shortcuts\">\n  </a>\n  app shortcuts\n</h3>\n\n<p>The application also has set some demo shortcuts which show up if the application is installed. </p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--1h4b-ToK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/urn8si7aijaxcfh1y66h.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--1h4b-ToK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/urn8si7aijaxcfh1y66h.gif\" alt=\"PWA shortcuts\" loading=\"lazy\" width=\"300\" height=\"492\" data-animated=\"true\"></a></p>\n\n<p>Make sure to check out the demo:</p>\n\n<p>demo: <a href=\"https://material-pwa.vercel.app/\">https://material-pwa.vercel.app/</a></p>\n\n<p>repository: <a href=\"https://github.com/ivandotv/nextjs-material-pwa\">https://github.com/ivandotv/nextjs-material-pwa</a></p>\n\n","body_markdown":"Setting up PWA's involves a lot of moving parts, so I've decided to create a template repository, that I would always keep up to date, and it will enable me to get started quickly.\n\ndemo: https://material-pwa.vercel.app/\n\nrepository: https://github.com/ivandotv/nextjs-material-pwa\n\n\n## Layout\n\nThe application supports both desktop and mobile layouts.\n\nThe desktop layout has a sidebar on the left side that can open and close.\n\n![desktop layout](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dnrxov1innw6wbe9ieyx.gif)\n\nThe mobile layout has two options.\n\n- Traditional layout with a sidebar that can be swiped to open/close\n\n\n![mobile sidebar layout](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1laz4l8uev3eswo8z847.gif)\n\n- Modern layout where menu items are at the bottom\n\n\n![mobile bottom menu layout](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gl7ib0pvlrkmc4wy3g1m.gif)\n\n## Theming\n\n- There are two themes dark and light, and they can easily be customized.\n\n## Onboarding slideshow\n\nI've also included an onboarding slideshow which is usually present in native apps. This is optional and it can easily be removed.\n\n![onboarding slideshow](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnnsxmxfbc3a0zauv8ch.gif)\n\n## Service worker\n\nThe real hard part of creating PWA's is service worker integration, both in the build process and in production.\nService worker functionality is implemented with the excellent [Workbox library](https://developer.chrome.com/docs/workbox/)\n\n### service worker setup\n\n- Service worker is written in Typescript and it will be compiled together with the rest of the code. The service worker will precache all the routes, images, CSS, and google fonts. Every time the app is built new cache manifest is created.\n\nWhen the service worker is installed, the application will show a prompt to reload the application so the new service worker can take over.\n\n### offline fallback\n\nOffline fallback is provided, if `navigation` happens when there is no network, the fallback page will be shown. Please note that the fallback files must be pure html,css, and js (no react, or css-in-js libraries). Fallback files need to be placed in the `public` directory.\n\nAlso, there is `network offline` detection, if the browser loses network connection, there will be a notification inside the app that the application is offline. You can test this via the Chrome dev tools network tab.\n\n### installation prompt\n\nThe application also has a custom prompt for the installation of the app. Please note that the installation prompt only works on the desktop OS'es and Android, no IOS.\n\n### app shortcuts\n\nThe application also has set some demo shortcuts which show up if the application is installed. \n\n![PWA shortcuts](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/urn8si7aijaxcfh1y66h.gif)\n\n\nMake sure to check out the demo:\n\ndemo: https://material-pwa.vercel.app/\n\nrepository: https://github.com/ivandotv/nextjs-material-pwa\n\n\n","user":{"name":"Ivan V.","username":"ivandotv","twitter_username":null,"github_username":"ivandotv","user_id":142810,"website_url":"https://github.com/ivandotv/","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--WPnSxn7F--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/142810/72f392ae-8aac-4a8d-bf9f-ddbedcd29533.jpg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--f_eEJG69--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/142810/72f392ae-8aac-4a8d-bf9f-ddbedcd29533.jpg"}}