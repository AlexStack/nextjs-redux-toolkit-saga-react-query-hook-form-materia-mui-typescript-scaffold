{"type_of":"article","id":1246577,"title":"Refactoring 010 - Extract Method Object","description":"You have a big algorithmic method. Let's break it.   TL;DR: Long methods are bad. Move them and break...","readable_publish_date":"Nov 7","slug":"refactoring-010-extract-method-object-3ff8","path":"/mcsee/refactoring-010-extract-method-object-3ff8","url":"https://dev.to/mcsee/refactoring-010-extract-method-object-3ff8","comments_count":0,"public_reactions_count":2,"collection_id":15550,"published_timestamp":"2022-11-07T13:16:12Z","positive_reactions_count":2,"cover_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--4ZzL28-3--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gctis526c1i016x8zagn.jpg","social_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--PR3U0sj7--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gctis526c1i016x8zagn.jpg","canonical_url":"https://maximilianocontieri.com/refactoring-010-extract-method-object","created_at":"2022-11-07T13:16:13Z","edited_at":null,"crossposted_at":null,"published_at":"2022-11-07T13:16:12Z","last_comment_at":"2022-11-07T13:16:12Z","reading_time_minutes":2,"tag_list":"webdev, javascript, beginners, programming","tags":["webdev","javascript","beginners","programming"],"body_html":"<p><em>You have a big algorithmic method. Let's break it.</em></p>\n\n<blockquote>\n<p>TL;DR: Long methods are bad. Move them and break them.</p>\n</blockquote>\n\n<h1>\n  <a name=\"problems-addressed\" href=\"#problems-addressed\">\n  </a>\n  Problems Addressed\n</h1>\n\n<ul>\n<li><p>Lack of Testability</p></li>\n<li><p>Accidental Complexity</p></li>\n<li><p><a href=\"https://dev.to/mcsee/code-smell-112-testing-private-methods-1gm8\">Testing Private Methods</a></p></li>\n</ul>\n\n<h1>\n  <a name=\"related-code-smells\" href=\"#related-code-smells\">\n  </a>\n  Related Code Smells\n</h1>\n\n\n<div class=\"ltag__link\">\n  <a href=\"/mcsee\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__pic\">\n      <img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Mr5voNt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ZNBVrhZ_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/d2322733-1ef8-4f2b-b8e4-facef5397761.jpg\" alt=\"mcsee\" loading=\"lazy\">\n    </div>\n  </a>\n  <a href=\"/mcsee/code-smell-10-too-many-arguments-4o67\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__content\">\n      <h2>Code Smell 10 - Too Many Arguments</h2>\n      <h3>Maxi Contieri ・ Oct 29 '20 ・ 2 min read</h3>\n      <div class=\"ltag__link__taglist\">\n        <span class=\"ltag__link__tag\">#codenewbie</span>\n        <span class=\"ltag__link__tag\">#beginners</span>\n        <span class=\"ltag__link__tag\">#100daysofcode</span>\n        <span class=\"ltag__link__tag\">#oop</span>\n      </div>\n    </div>\n  </a>\n</div>\n \n\n\n<div class=\"ltag__link\">\n  <a href=\"/mcsee\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__pic\">\n      <img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Mr5voNt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ZNBVrhZ_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/d2322733-1ef8-4f2b-b8e4-facef5397761.jpg\" alt=\"mcsee\" loading=\"lazy\">\n    </div>\n  </a>\n  <a href=\"/mcsee/code-smell-21-anonymous-functions-abusers-47f5\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__content\">\n      <h2>Code Smell 21 - Anonymous Functions Abusers</h2>\n      <h3>Maxi Contieri ・ Nov 10 '20 ・ 2 min read</h3>\n      <div class=\"ltag__link__taglist\">\n        <span class=\"ltag__link__tag\">#codenewbie</span>\n        <span class=\"ltag__link__tag\">#oop</span>\n        <span class=\"ltag__link__tag\">#developing</span>\n        <span class=\"ltag__link__tag\">#programming</span>\n      </div>\n    </div>\n  </a>\n</div>\n\n\n\n<div class=\"ltag__link\">\n  <a href=\"/mcsee\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__pic\">\n      <img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Mr5voNt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ZNBVrhZ_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/d2322733-1ef8-4f2b-b8e4-facef5397761.jpg\" alt=\"mcsee\" loading=\"lazy\">\n    </div>\n  </a>\n  <a href=\"/mcsee/code-smell-36-switch-case-elseif-else-if-statements-h6c\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__content\">\n      <h2>Code Smell 36 - Switch/case/elseif/else/if statements</h2>\n      <h3>Maxi Contieri ・ Nov 28 '20 ・ 1 min read</h3>\n      <div class=\"ltag__link__taglist\">\n        <span class=\"ltag__link__tag\">#oop</span>\n        <span class=\"ltag__link__tag\">#webdev</span>\n        <span class=\"ltag__link__tag\">#tutorial</span>\n        <span class=\"ltag__link__tag\">#codenewbie</span>\n      </div>\n    </div>\n  </a>\n</div>\n\n\n\n<div class=\"ltag__link\">\n  <a href=\"/mcsee\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__pic\">\n      <img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Mr5voNt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ZNBVrhZ_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/d2322733-1ef8-4f2b-b8e4-facef5397761.jpg\" alt=\"mcsee\" loading=\"lazy\">\n    </div>\n  </a>\n  <a href=\"/mcsee/code-smell-112-testing-private-methods-1gm8\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__content\">\n      <h2>Code Smell 112 - Testing Private Methods</h2>\n      <h3>Maxi Contieri ・ Dec 29 '21 ・ 2 min read</h3>\n      <div class=\"ltag__link__taglist\">\n        <span class=\"ltag__link__tag\">#oop</span>\n        <span class=\"ltag__link__tag\">#testing</span>\n        <span class=\"ltag__link__tag\">#webdev</span>\n        <span class=\"ltag__link__tag\">#tutorial</span>\n      </div>\n    </div>\n  </a>\n</div>\n\n\n\n<div class=\"ltag__link\">\n  <a href=\"/mcsee\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__pic\">\n      <img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Mr5voNt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ZNBVrhZ_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/d2322733-1ef8-4f2b-b8e4-facef5397761.jpg\" alt=\"mcsee\" loading=\"lazy\">\n    </div>\n  </a>\n  <a href=\"/mcsee/code-smell-149-optional-chaining-jk\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__content\">\n      <h2>Code Smell 149 - Optional Chaining</h2>\n      <h3>Maxi Contieri ・ Jul 16 ・ 2 min read</h3>\n      <div class=\"ltag__link__taglist\">\n        <span class=\"ltag__link__tag\">#javascript</span>\n        <span class=\"ltag__link__tag\">#webdev</span>\n        <span class=\"ltag__link__tag\">#beginners</span>\n        <span class=\"ltag__link__tag\">#programming</span>\n      </div>\n    </div>\n  </a>\n</div>\n\n\n\n<div class=\"ltag__link\">\n  <a href=\"/mcsee\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__pic\">\n      <img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Mr5voNt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ZNBVrhZ_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/d2322733-1ef8-4f2b-b8e4-facef5397761.jpg\" alt=\"mcsee\" loading=\"lazy\">\n    </div>\n  </a>\n  <a href=\"/mcsee/code-smell-112-testing-private-methods-1gm8\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__content\">\n      <h2>Code Smell 112 - Testing Private Methods</h2>\n      <h3>Maxi Contieri ・ Dec 29 '21 ・ 2 min read</h3>\n      <div class=\"ltag__link__taglist\">\n        <span class=\"ltag__link__tag\">#oop</span>\n        <span class=\"ltag__link__tag\">#testing</span>\n        <span class=\"ltag__link__tag\">#webdev</span>\n        <span class=\"ltag__link__tag\">#tutorial</span>\n      </div>\n    </div>\n  </a>\n</div>\n\n\n<h1>\n  <a name=\"steps\" href=\"#steps\">\n  </a>\n  Steps\n</h1>\n\n<ol>\n<li><p>Create an object to represent an invocation of the method</p></li>\n<li><p>Move the big method to the new object</p></li>\n<li><p>Convert the temporary variables of the method into private attributes.</p></li>\n<li><p>Break the big method in the new object by using <a href=\"https://dev.to/mcsee/refactoring-002-extract-method-1eee\">Extract Method</a></p></li>\n<li><p>Remove parameters from method invocation by also converting them to private attributes </p></li>\n</ol>\n\n<h1>\n  <a name=\"sample-code\" href=\"#sample-code\">\n  </a>\n  Sample Code\n</h1>\n\n<h2>\n  <a name=\"before\" href=\"#before\">\n  </a>\n  Before\n</h2>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight java\"><code><span class=\"kd\">class</span> <span class=\"nc\">BlockchainAccount</span> <span class=\"o\">{</span>\n  <span class=\"c1\">// ...</span>\n  <span class=\"kd\">public</span> <span class=\"kt\">double</span> <span class=\"nf\">balance</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"n\">string</span> <span class=\"n\">address</span><span class=\"o\">;</span>    \n    <span class=\"c1\">// Very long untestable method</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n<h2>\n  <a name=\"after\" href=\"#after\">\n  </a>\n  After\n</h2>\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight java\"><code><span class=\"kd\">class</span> <span class=\"nc\">BlockchainAccount</span> <span class=\"o\">{</span>\n  <span class=\"c1\">// ...</span>\n  <span class=\"kd\">public</span> <span class=\"kt\">double</span> <span class=\"nf\">balance</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nf\">BalanceCalculator</span><span class=\"o\">(</span><span class=\"k\">this</span><span class=\"o\">).</span><span class=\"na\">netValue</span><span class=\"o\">();</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n\n<span class=\"c1\">// 1. Create an object to represent an invocation of the method</span>\n<span class=\"c1\">// 2. Move the big method to the new object</span>\n<span class=\"c1\">// 3. Convert the temporary variables of the method into private attributes.</span>\n<span class=\"c1\">// 4. Break the big method in the new object by using The Extract Method</span>\n<span class=\"c1\">// 5. Remove parameters from method invocation by also converting them to private attributes </span>\n\n\n<span class=\"kd\">class</span> <span class=\"nc\">BalanceCalculator</span> <span class=\"o\">{</span>\n  <span class=\"kd\">private</span> <span class=\"n\">string</span> <span class=\"n\">address</span><span class=\"o\">;</span>\n  <span class=\"kd\">private</span> <span class=\"nc\">BlockchainAccount</span> <span class=\"n\">account</span><span class=\"o\">;</span>\n\n  <span class=\"kd\">public</span> <span class=\"nf\">BalanceCalculator</span><span class=\"o\">(</span><span class=\"nc\">BlockchainAccount</span> <span class=\"n\">account</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n    <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">account</span> <span class=\"o\">=</span> <span class=\"n\">account</span><span class=\"o\">;</span>\n  <span class=\"o\">}</span>\n\n  <span class=\"kd\">public</span> <span class=\"kt\">double</span> <span class=\"nf\">netValue</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"k\">this</span><span class=\"o\">.</span><span class=\"na\">findStartingBlock</span><span class=\"o\">();</span>\n    <span class=\"c1\">//...</span>\n    <span class=\"k\">this</span> <span class=\"nf\">computeTransactions</span><span class=\"o\">();</span>\n  <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n<h1>\n  <a name=\"type\" href=\"#type\">\n  </a>\n  Type\n</h1>\n\n<p>[X] Semi-Automatic</p>\n\n<p>Some IDEs have tools to extract a function into a method object.</p>\n<h1>\n  <a name=\"safety\" href=\"#safety\">\n  </a>\n  Safety\n</h1>\n\n<p>This is a syntactic and structural refactoring. </p>\n\n<p>We can make the changes automatically in a safe way.</p>\n<h1>\n  <a name=\"why-code-is-better\" href=\"#why-code-is-better\">\n  </a>\n  Why code is better?\n</h1>\n\n<p>We extract the logic into a new component.</p>\n\n<p>We can unit-test it, reuse it, exchange it, etc.</p>\n<h1>\n  <a name=\"tags\" href=\"#tags\">\n  </a>\n  Tags\n</h1>\n\n<ul>\n<li>Bloaters </li>\n</ul>\n<h1>\n  <a name=\"related-refactorings\" href=\"#related-refactorings\">\n  </a>\n  Related Refactorings\n</h1>\n\n\n<div class=\"ltag__link\">\n  <a href=\"/mcsee\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__pic\">\n      <img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Mr5voNt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ZNBVrhZ_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/d2322733-1ef8-4f2b-b8e4-facef5397761.jpg\" alt=\"mcsee\" loading=\"lazy\">\n    </div>\n  </a>\n  <a href=\"/mcsee/refactoring-002-extract-method-1eee\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__content\">\n      <h2>Refactoring 002 - Extract Method</h2>\n      <h3>Maxi Contieri ・ Nov 25 '21 ・ 2 min read</h3>\n      <div class=\"ltag__link__taglist\">\n        <span class=\"ltag__link__tag\">#refactoring</span>\n        <span class=\"ltag__link__tag\">#oop</span>\n        <span class=\"ltag__link__tag\">#webdev</span>\n        <span class=\"ltag__link__tag\">#codenewbie</span>\n      </div>\n    </div>\n  </a>\n</div>\n\n\n\n<h1>\n  <a name=\"see-also\" href=\"#see-also\">\n  </a>\n  See also\n</h1>\n\n<p><a href=\"https://en.wikipedia.org/wiki/Strategy_pattern\">Wikipedia: Strategy Pattern</a></p>\n\n<p><a href=\"https://learning.oreilly.com/library/view/smalltalk-best-practice/9780132852098/ch03.xhtml\">Method Object Definition</a></p>\n\n<p><a href=\"https://refactoring.guru/es/replace-method-with-method-object\">Refactoring.guru</a></p>\n\n<p><a href=\"https://wiki.c2.com/?MethodObject\">C2 Wiki</a></p>\n\n<h1>\n  <a name=\"conclusion\" href=\"#conclusion\">\n  </a>\n  Conclusion\n</h1>\n\n<p>The Method-Object is suitable when we are using several extract methods passing partial state among them as parts of an algorithm.</p>\n\n<p>We store these partial computations in the method-object internal state.</p>\n\n<p>A strong indicator of method object opportunity is when computations are not cohesively related to the host method.</p>\n\n<p>We can also reify <a href=\"https://dev.to/mcsee/code-smell-21-anonymous-functions-abusers-47f5\">anonymous functions</a> with more atomic, cohesive, and testable method objects.</p>\n\n<h1>\n  <a name=\"credits\" href=\"#credits\">\n  </a>\n  Credits\n</h1>\n\n<p>Image by <a href=\"https://pixabay.com/users/mfuente-1590732/\">Manuel de la Fuente</a> on <a href=\"https://pixabay.com/\">Pixabay</a></p>\n\n\n<hr>\n\n<p>This article is part of the Refactoring Series.</p>\n\n\n<div class=\"ltag__link\">\n  <a href=\"/mcsee\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__pic\">\n      <img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Mr5voNt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ZNBVrhZ_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/d2322733-1ef8-4f2b-b8e4-facef5397761.jpg\" alt=\"mcsee\" loading=\"lazy\">\n    </div>\n  </a>\n  <a href=\"/mcsee/how-to-improve-your-code-with-easy-refactorings-2ij6\" class=\"ltag__link__link\">\n    <div class=\"ltag__link__content\">\n      <h2>How to Improve your Code With easy Refactorings</h2>\n      <h3>Maxi Contieri ・ Oct 24 ・ 1 min read</h3>\n      <div class=\"ltag__link__taglist\">\n        <span class=\"ltag__link__tag\">#webdev</span>\n        <span class=\"ltag__link__tag\">#beginners</span>\n        <span class=\"ltag__link__tag\">#programming</span>\n        <span class=\"ltag__link__tag\">#tutorial</span>\n      </div>\n    </div>\n  </a>\n</div>\n\n\n","body_markdown":"*You have a big algorithmic method. Let's break it.*\n\n> TL;DR: Long methods are bad. Move them and break them.\n\n# Problems Addressed\n\n- Lack of Testability\n\n- Accidental Complexity\n\n- [Testing Private Methods](https://dev.to/mcsee/code-smell-112-testing-private-methods-1gm8)\n\n# Related Code Smells\n\n{% post https://dev.to/mcsee/code-smell-10-too-many-arguments-4o67 %} \n\n{% post https://dev.to/mcsee/code-smell-21-anonymous-functions-abusers-47f5 %}\n\n{% post https://dev.to/mcsee/code-smell-36-switch-case-elseif-else-if-statements-h6c %}\n\n{% post https://dev.to/mcsee/code-smell-112-testing-private-methods-1gm8 %}\n\n{% post https://dev.to/mcsee/code-smell-149-optional-chaining-jk %}\n\n{% post https://dev.to/mcsee/code-smell-112-testing-private-methods-1gm8 %}\n\n# Steps\n\n1. Create an object to represent an invocation of the method\n\n2. Move the big method to the new object\n\n3. Convert the temporary variables of the method into private attributes.\n\n4. Break the big method in the new object by using [Extract Method](https://dev.to/mcsee/refactoring-002-extract-method-1eee)\n\n5. Remove parameters from method invocation by also converting them to private attributes \n\n# Sample Code\n\n## Before\n\n[Gist Url]: # (https://gist.github.com/mcsee/c8984513652806d25e26f5c184849af0)\n```java\nclass BlockchainAccount {\n  // ...\n  public double balance() {\n    string address;    \n    // Very long untestable method\n  }\n}\n```\n\n## After\n\n[Gist Url]: # (https://gist.github.com/mcsee/77d24738ede67a5a99d28e796ce1fade)\n```java\nclass BlockchainAccount {\n  // ...\n  public double balance() {\n    return new BalanceCalculator(this).netValue();\n  }\n}\n\n// 1. Create an object to represent an invocation of the method\n// 2. Move the big method to the new object\n// 3. Convert the temporary variables of the method into private attributes.\n// 4. Break the big method in the new object by using The Extract Method\n// 5. Remove parameters from method invocation by also converting them to private attributes \n\n\nclass BalanceCalculator {\n  private string address;\n  private BlockchainAccount account;\n  \n  public BalanceCalculator(BlockchainAccount account) {\n    this.account = account;\n  }\n  \n  public double netValue() {\n    this.findStartingBlock();\n    //...\n    this computeTransactions();\n  }\n}\n```\n\n# Type\n\n[X] Semi-Automatic\n\nSome IDEs have tools to extract a function into a method object.\n\n# Safety\n\nThis is a syntactic and structural refactoring. \n\nWe can make the changes automatically in a safe way.\n\n# Why code is better?\n\nWe extract the logic into a new component.\n\nWe can unit-test it, reuse it, exchange it, etc.\n\n# Tags\n\n- Bloaters \n\n# Related Refactorings\n\n{% post https://dev.to/mcsee/refactoring-002-extract-method-1eee %}\n\n# See also\n\n[Wikipedia: Strategy Pattern](https://en.wikipedia.org/wiki/Strategy_pattern)\n\n[Method Object Definition](https://learning.oreilly.com/library/view/smalltalk-best-practice/9780132852098/ch03.xhtml)\n\n[Refactoring.guru](https://refactoring.guru/es/replace-method-with-method-object)\n\n[C2 Wiki](https://wiki.c2.com/?MethodObject)\n\n# Conclusion\n\nThe Method-Object is suitable when we are using several extract methods passing partial state among them as parts of an algorithm.\n\nWe store these partial computations in the method-object internal state.\n\nA strong indicator of method object opportunity is when computations are not cohesively related to the host method.\n\nWe can also reify [anonymous functions](https://dev.to/mcsee/code-smell-21-anonymous-functions-abusers-47f5) with more atomic, cohesive, and testable method objects.\n\n# Credits\n\nImage by [Manuel de la Fuente](https://pixabay.com/users/mfuente-1590732/) on [Pixabay](https://pixabay.com/)\n\n* * * \n\nThis article is part of the Refactoring Series.\n\n{% post https://dev.to/mcsee/how-to-improve-your-code-with-easy-refactorings-2ij6 %}","user":{"name":"Maxi Contieri","username":"mcsee","twitter_username":"mcsee1","github_username":"mcsee","user_id":366059,"website_url":"http://maximilianocontieri.com","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--FYK6LLAC--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/d2322733-1ef8-4f2b-b8e4-facef5397761.jpg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--IVpbdWAj--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366059/d2322733-1ef8-4f2b-b8e4-facef5397761.jpg"}}