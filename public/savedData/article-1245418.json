{"type_of":"article","id":1245418,"title":"SSL For RDS With Glue Python Job and AWS SDK For Pandas","description":"This blog post is the result of a recent interaction with AWS Support. As always they were very...","readable_publish_date":"Nov 6","slug":"ssl-for-rds-with-glue-python-job-and-aws-sdk-for-pandas-2cf6","path":"/aws-builders/ssl-for-rds-with-glue-python-job-and-aws-sdk-for-pandas-2cf6","url":"https://dev.to/aws-builders/ssl-for-rds-with-glue-python-job-and-aws-sdk-for-pandas-2cf6","comments_count":0,"public_reactions_count":2,"collection_id":null,"published_timestamp":"2022-11-06T10:40:36Z","positive_reactions_count":2,"cover_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--w8qI7QCK--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca8u673possrk3tzytrd.jpg","social_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--GdJB-KIf--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca8u673possrk3tzytrd.jpg","canonical_url":"https://dev.to/aws-builders/ssl-for-rds-with-glue-python-job-and-aws-sdk-for-pandas-2cf6","created_at":"2022-11-06T10:03:45Z","edited_at":null,"crossposted_at":null,"published_at":"2022-11-06T10:40:36Z","last_comment_at":"2022-11-06T10:40:36Z","reading_time_minutes":4,"tag_list":"aws, glue, python, etl","tags":["aws","glue","python","etl"],"body_html":"<p>This blog post is the result of a recent interaction with AWS Support. As always they were very helpful in resolving the issue.</p>\n\n<h2>\n  <a name=\"aws-sdk-for-pandas\" href=\"#aws-sdk-for-pandas\">\n  </a>\n  AWS SDK For Pandas\n</h2>\n\n<p>Recently AWS renamed the AWS data wrangler python library to <a href=\"https://aws-sdk-pandas.readthedocs.io/en/stable/#\">AWS SDK for Pandas</a>.  This is an AWS Professional Service open source python initiative that extends the power of Pandas library to AWS connecting DataFrames and AWS data related services.</p>\n\n<p>Built on top of other open-source projects like Pandas, Apache Arrow and Boto3, it offers abstracted functions to execute usual ETL tasks like load/unload data from Data Lakes, Data Warehouses and Databases.</p>\n\n<p>I was looking to use the integration with AWS Glue to use a glue connection within some Python ETL code. The connection in my case was to an Amazon RDS PostgreSQL database.</p>\n\n<p>For example:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight python\"><code><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">awswrangler</span> <span class=\"k\">as</span> <span class=\"n\">wr</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"n\">pd</span>\n\n<span class=\"n\">con_postgresql</span> <span class=\"o\">=</span> <span class=\"n\">wr</span><span class=\"p\">.</span><span class=\"n\">postgresql</span><span class=\"p\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">connection</span><span class=\"o\">=</span><span class=\"s\">\"My-RDS-PostgreSQL-Connection\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">con_postgresql</span><span class=\"p\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>The theory was that the connection could be defined in Glue once and used by multiple AWS Glue ETL </p>\n\n<h2>\n  <a name=\"amazon-rds-ready-encryption-requirements\" href=\"#amazon-rds-ready-encryption-requirements\">\n  </a>\n  Amazon RDS Ready - Encryption Requirements\n</h2>\n\n<p>The purpose of the <a href=\"https://aws.amazon.com/rds/partners/?blog-posts-cards.sort-by=item.additionalFields.modifiedDate&amp;blog-posts-cards.sort-order=desc&amp;partner-solutions-cards.sort-by=item.additionalFields.partnerNameLower&amp;partner-solutions-cards.sort-order=asc&amp;awsf.partner-solutions-filter-partner-type=*all&amp;awsf.partner-solutions-filter-product=*all&amp;awsf.partner-solutions-filter-location=*all\">Amazon Relational Database Service (RDS) Ready Program</a> is to recognise AWS Partner products that support the use of Amazon RDS database as a backend for business applications deployed within a customer’s AWS account or provided as SaaS deployed in APN Partner’s AWS Account. </p>\n\n<p>This program requires that products follow AWS security, availability, reliability, performance and other architecture best practices while integrating with Amazon RDS.</p>\n\n<p>At CDL our software has been accredited as Amazon RDS Ready and we apply these standards when developing new solutions. Specifically on Data encryption the Amazon RDS Ready states:</p>\n\n<p><strong>DBCONN-004 - Data Encryption:</strong><br>\n<em>For business applications where data encryption is a requirement for security compliance, the product must support encryption of data at rest and in transit for Amazon RDS.</em></p>\n\n<p>At CDL we ensure that data to RDS is encrypted in transit by setting the rds.force_ssl parameter to 1. See <a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/PostgreSQL.Concepts.General.SSL.html#PostgreSQL.Concepts.General.SSL.Requiring\">Using SSL with a PostgreSQL DB instance - Amazon Relational Database Service</a></p>\n<h2>\n  <a name=\"attempting-an-ssl-connection-from-glue-to-rds\" href=\"#attempting-an-ssl-connection-from-glue-to-rds\">\n  </a>\n  Attempting an SSL Connection From Glue To RDS\n</h2>\n\n<p>A connection in Glue is created to a RDS database that has rds.force_ssl set.</p>\n\n<p>This is done via the legacy glue connection screen in the console as this allows us to test the connection.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--crhCev7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f38cjxt2o51ud7az6ndk.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--crhCev7o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f38cjxt2o51ud7az6ndk.png\" alt=\"Glue Connection\" loading=\"lazy\" width=\"880\" height=\"418\"></a></p>\n\n<p>As you can see running the test works.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Y5e1Fv6Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j83y03bx6ibxcxqfygss.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Y5e1Fv6Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j83y03bx6ibxcxqfygss.png\" alt=\"Glue Connection Test OK\" loading=\"lazy\" width=\"880\" height=\"303\"></a></p>\n<h2>\n  <a name=\"the-problem\" href=\"#the-problem\">\n  </a>\n  The Problem\n</h2>\n\n<p>Next we try an use that connection in a AWS Glue Python Job utilising the AWS SDK For Pandas.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight python\"><code><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">awswrangler</span> <span class=\"k\">as</span> <span class=\"n\">wr</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"n\">pd</span>\n\n<span class=\"n\">con_postgresql</span> <span class=\"o\">=</span> <span class=\"n\">wr</span><span class=\"p\">.</span><span class=\"n\">postgresql</span><span class=\"p\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">connection</span><span class=\"o\">=</span><span class=\"s\">\"My-RDS-PostgreSQL-Connection\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">con_postgresql</span><span class=\"p\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Running the job will return errors about SSL. I got a couple of different errors when trying to debug different versions of the code.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xOyiBgpk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ft6w1vh9e2bk0cmqwbjg.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xOyiBgpk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ft6w1vh9e2bk0cmqwbjg.png\" alt=\"SSL Error\" loading=\"lazy\" width=\"880\" height=\"181\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Q--wT_KH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/invwx0qeuh1b0o8t7q8x.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Q--wT_KH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/invwx0qeuh1b0o8t7q8x.png\" alt=\"SSL Error\" loading=\"lazy\" width=\"880\" height=\"246\"></a></p>\n\n<p>After a bit of back and forth with AWS Support trying to debug the issue the service team identified the following.</p>\n\n<p><strong>Currently, awswrangler loads and uses default SSL configuration for creating boto3 session clients.</strong></p>\n\n<p>It was clear from the errors we receive that this default did not include the Amazon RDS Root CA.</p>\n\n<p><strong>To overwrite a default configuration, it’s possible to use the connect() function in awswrangler that allows to pass an SSL context.</strong></p>\n\n<p>We need to download the RDS root certificate and point to it.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight python\"><code><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">awswrangler</span> <span class=\"k\">as</span> <span class=\"n\">wr</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"n\">pd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">ssl</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">urllib.request</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">download_rds_root_ca</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Downloading RDS CA root cert…\"</span><span class=\"p\">)</span>\n    <span class=\"n\">urllib</span><span class=\"p\">.</span><span class=\"n\">request</span><span class=\"p\">.</span><span class=\"n\">urlretrieve</span><span class=\"p\">(</span><span class=\"s\">'https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem'</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Downloaded RDS CA root cert.\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">create_rds_ssl_context</span><span class=\"p\">():</span>\n    <span class=\"n\">cafile</span> <span class=\"o\">=</span> <span class=\"s\">'/tmp/rds-ca-2019-root.pem'</span>\n    <span class=\"n\">download_rds_root_ca</span><span class=\"p\">(</span><span class=\"n\">cafile</span><span class=\"p\">)</span>\n    <span class=\"n\">ssl_context</span> <span class=\"o\">=</span> <span class=\"n\">ssl</span><span class=\"p\">.</span><span class=\"n\">SSLContext</span><span class=\"p\">(</span><span class=\"n\">ssl</span><span class=\"p\">.</span><span class=\"n\">PROTOCOL_TLS</span><span class=\"p\">);</span>\n    <span class=\"n\">ssl_context</span><span class=\"p\">.</span><span class=\"n\">verify_mode</span> <span class=\"o\">=</span> <span class=\"n\">ssl</span><span class=\"p\">.</span><span class=\"n\">CERT_REQUIRED</span><span class=\"p\">;</span>\n    <span class=\"n\">ssl_context</span><span class=\"p\">.</span><span class=\"n\">load_verify_locations</span><span class=\"p\">(</span><span class=\"n\">cafile</span><span class=\"o\">=</span><span class=\"n\">cafile</span><span class=\"p\">,</span> <span class=\"n\">capath</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">cadata</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">ssl_context</span>\n\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Connecting to RDS database…\"</span><span class=\"p\">)</span>\n<span class=\"n\">rds_ssl_context</span> <span class=\"o\">=</span> <span class=\"n\">create_rds_ssl_context</span><span class=\"p\">()</span>\n<span class=\"n\">con_postgresql</span> <span class=\"o\">=</span> <span class=\"n\">wr</span><span class=\"p\">.</span><span class=\"n\">postgresql</span><span class=\"p\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">connection</span><span class=\"o\">=</span><span class=\"s\">\"My-RDS-PostgreSQL-Connection\"</span><span class=\"p\">,</span> <span class=\"n\">ssl_context</span><span class=\"o\">=</span><span class=\"n\">rds_ssl_context</span><span class=\"p\">)</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Successfully connected to RDS database.\"</span><span class=\"p\">)</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h2>\n  <a name=\"run-with-ssl\" href=\"#run-with-ssl\">\n  </a>\n  Run With SSL\n</h2>\n\n<p>Running the job again with the correct SSL certificate in place we get a successful execution.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LVkwr6Mn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4cepiajb4td9dp0ozx8v.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LVkwr6Mn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4cepiajb4td9dp0ozx8v.png\" alt=\"Job Run Ok\" loading=\"lazy\" width=\"880\" height=\"166\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--KdxPVMWl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqe734omy8x9v4hlv0b8.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--KdxPVMWl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqe734omy8x9v4hlv0b8.png\" alt=\"Jon Run Logs\" loading=\"lazy\" width=\"880\" height=\"353\"></a></p>\n\n","body_markdown":"This blog post is the result of a recent interaction with AWS Support. As always they were very helpful in resolving the issue.\n\n## AWS SDK For Pandas\n\nRecently AWS renamed the AWS data wrangler python library to [AWS SDK for Pandas](https://aws-sdk-pandas.readthedocs.io/en/stable/#).  This is an AWS Professional Service open source python initiative that extends the power of Pandas library to AWS connecting DataFrames and AWS data related services.\n\nBuilt on top of other open-source projects like Pandas, Apache Arrow and Boto3, it offers abstracted functions to execute usual ETL tasks like load/unload data from Data Lakes, Data Warehouses and Databases.\n\nI was looking to use the integration with AWS Glue to use a glue connection within some Python ETL code. The connection in my case was to an Amazon RDS PostgreSQL database.\n\nFor example:\n\n```python\nimport sys\nimport awswrangler as wr\nimport pandas as pd\n\ncon_postgresql = wr.postgresql.connect(connection=\"My-RDS-PostgreSQL-Connection\")\n\ncon_postgresql.close()\n```\n\nThe theory was that the connection could be defined in Glue once and used by multiple AWS Glue ETL \n\n\n## Amazon RDS Ready - Encryption Requirements\n\nThe purpose of the [Amazon Relational Database Service (RDS) Ready Program](https://aws.amazon.com/rds/partners/?blog-posts-cards.sort-by=item.additionalFields.modifiedDate&blog-posts-cards.sort-order=desc&partner-solutions-cards.sort-by=item.additionalFields.partnerNameLower&partner-solutions-cards.sort-order=asc&awsf.partner-solutions-filter-partner-type=*all&awsf.partner-solutions-filter-product=*all&awsf.partner-solutions-filter-location=*all) is to recognise AWS Partner products that support the use of Amazon RDS database as a backend for business applications deployed within a customer’s AWS account or provided as SaaS deployed in APN Partner’s AWS Account. \n\nThis program requires that products follow AWS security, availability, reliability, performance and other architecture best practices while integrating with Amazon RDS.\n\nAt CDL our software has been accredited as Amazon RDS Ready and we apply these standards when developing new solutions. Specifically on Data encryption the Amazon RDS Ready states:\n\n\n**DBCONN-004 - Data Encryption:**\n_For business applications where data encryption is a requirement for security compliance, the product must support encryption of data at rest and in transit for Amazon RDS._\n\nAt CDL we ensure that data to RDS is encrypted in transit by setting the rds.force_ssl parameter to 1. See [Using SSL with a PostgreSQL DB instance - Amazon Relational Database Service](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/PostgreSQL.Concepts.General.SSL.html#PostgreSQL.Concepts.General.SSL.Requiring)\n\n## Attempting an SSL Connection From Glue To RDS\nA connection in Glue is created to a RDS database that has rds.force_ssl set.\n\nThis is done via the legacy glue connection screen in the console as this allows us to test the connection.\n\n\n\n![Glue Connection](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f38cjxt2o51ud7az6ndk.png)\n\nAs you can see running the test works.\n\n\n![Glue Connection Test OK](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j83y03bx6ibxcxqfygss.png)\n\n\n## The Problem\n\nNext we try an use that connection in a AWS Glue Python Job utilising the AWS SDK For Pandas.\n\n```python\nimport sys\nimport awswrangler as wr\nimport pandas as pd\n\ncon_postgresql = wr.postgresql.connect(connection=\"My-RDS-PostgreSQL-Connection\")\n\ncon_postgresql.close()\n```\n\nRunning the job will return errors about SSL. I got a couple of different errors when trying to debug different versions of the code.\n\n\n![SSL Error](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ft6w1vh9e2bk0cmqwbjg.png)\n\n\n![SSL Error](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/invwx0qeuh1b0o8t7q8x.png)\n\n\nAfter a bit of back and forth with AWS Support trying to debug the issue the service team identified the following.\n\n**Currently, awswrangler loads and uses default SSL configuration for creating boto3 session clients.**\n\nIt was clear from the errors we receive that this default did not include the Amazon RDS Root CA.\n\n**To overwrite a default configuration, it’s possible to use the connect() function in awswrangler that allows to pass an SSL context.**\n\nWe need to download the RDS root certificate and point to it.\n\n```python\nimport sys\nimport awswrangler as wr\nimport pandas as pd\nimport ssl\nimport os\nimport urllib.request\n\ndef download_rds_root_ca(filename: str):\n\tprint(\"Downloading RDS CA root cert…\")\n\turllib.request.urlretrieve('https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem', filename=filename)\n\tprint(\"Downloaded RDS CA root cert.\")\n\ndef create_rds_ssl_context():\n\tcafile = '/tmp/rds-ca-2019-root.pem'\n\tdownload_rds_root_ca(cafile)\n\tssl_context = ssl.SSLContext(ssl.PROTOCOL_TLS);\n\tssl_context.verify_mode = ssl.CERT_REQUIRED;\n\tssl_context.load_verify_locations(cafile=cafile, capath=None, cadata=None)\n\treturn ssl_context\n\nprint(\"Connecting to RDS database…\")\nrds_ssl_context = create_rds_ssl_context()\ncon_postgresql = wr.postgresql.connect(connection=\"My-RDS-PostgreSQL-Connection\", ssl_context=rds_ssl_context)\nprint(\"Successfully connected to RDS database.\")\n```\n\n\n## Run With SSL\n\nRunning the job again with the correct SSL certificate in place we get a successful execution.\n\n\n![Job Run Ok](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4cepiajb4td9dp0ozx8v.png)\n\n\n![Jon Run Logs](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqe734omy8x9v4hlv0b8.png)","user":{"name":"Matt Houghton","username":"mattdevdba","twitter_username":"mattdevdba","github_username":null,"user_id":497647,"website_url":"https://blog.mattdevdba.tech","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--9PUIQ3Dy--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/497647/5b057ee3-a70e-41a2-8652-dcd4b6d8a36c.jpeg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--OmGMr5oE--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/497647/5b057ee3-a70e-41a2-8652-dcd4b6d8a36c.jpeg"},"organization":{"name":"AWS Community Builders ","username":"aws-builders","slug":"aws-builders","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--zmOZQNzv--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/2794/88da75b6-aadd-4ea1-8083-ae2dfca8be94.png","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--vWmcJ-ty--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/2794/88da75b6-aadd-4ea1-8083-ae2dfca8be94.png"}}