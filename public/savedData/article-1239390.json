{"type_of":"article","id":1239390,"title":"Google Sign-In using Supabase and React Native (Expo)","description":"This post will cover how to add Google Sign-In to your Expo + Supabase project using...","readable_publish_date":"Nov 2","slug":"google-sign-in-using-supabase-and-react-native-expo-14jf","path":"/fedorish/google-sign-in-using-supabase-and-react-native-expo-14jf","url":"https://dev.to/fedorish/google-sign-in-using-supabase-and-react-native-expo-14jf","comments_count":0,"public_reactions_count":3,"collection_id":null,"published_timestamp":"2022-11-02T20:13:05Z","positive_reactions_count":3,"cover_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--AT-O3DRF--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3mjp97qnp2qld4s6ibp.png","social_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--8xDhiN4I--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3mjp97qnp2qld4s6ibp.png","canonical_url":"https://dev.to/fedorish/google-sign-in-using-supabase-and-react-native-expo-14jf","created_at":"2022-11-01T21:24:33Z","edited_at":"2022-11-04T23:19:37Z","crossposted_at":null,"published_at":"2022-11-02T20:13:05Z","last_comment_at":"2022-11-02T20:13:05Z","reading_time_minutes":3,"tag_list":"supabase, reactnative, tutorial","tags":["supabase","reactnative","tutorial"],"body_html":"<p>This post will cover how to add Google Sign-In to your <a href=\"//expo.dev\">Expo</a> + <a href=\"https://supabase.com/\">Supabase</a> project using <code>expo-auth-session</code>.</p>\n\n<p>If you don't have a Expo + Supabase project  you can follow this <a href=\"https://supabase.com/docs/guides/with-expo\">supabase guide</a>. This example uses v2 of <code>supabase-js</code>. </p>\n\n<p>We'll start of by configuring Supabase and Google Cloud</p>\n\n<h2>\n  <a name=\"google-cloud\" href=\"#google-cloud\">\n  </a>\n  Google Cloud\n</h2>\n\n<p>Go to <a href=\"https://console.cloud.google.com/\">Google Cloud</a> and create a new project if you haven't done so. When you have your Google Cloud Project setup go to the <a href=\"https://console.cloud.google.com/apis/credentials\">Credentials page</a>. </p>\n\n<ol>\n<li>If you see a prompt to \"Configure Consent Screen\", click that button and follow the instructions to finish the setup. </li>\n<li>Click on \"Create Credentials\" that should be located at the top of the screen and select \"OAuth Client ID\". </li>\n<li>In the \"Application type\" field select \"Web application\" and give your application a name.</li>\n<li>Under \"Authorized redirect URIs\" add <code>https://{YOUR_PROJECT_REFERENCE_ID}.supabase.co/auth/v1/callback</code>. Your reference ID can be found under <code>Settings -&gt; General</code> in your Supabase project dashboard, click <code>SAVE</code>\n</li>\n<li>Click on your newly created credential under <code>OAuth 2.0 Client IDs</code>, in the top right you should see <code>Client ID</code> and <code>Client secret</code>. Copy and save these because they will be needed when we configure Supabase. </li>\n</ol>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--sJQbt4uC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dpdq8nv527mp82kqj9q8.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--sJQbt4uC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dpdq8nv527mp82kqj9q8.png\" alt=\"Google Cloud\" loading=\"lazy\" width=\"880\" height=\"648\"></a></p>\n\n<h2>\n  <a name=\"supabase\" href=\"#supabase\">\n  </a>\n  Supabase\n</h2>\n\n<h3>\n  <a name=\"activate-google-provider\" href=\"#activate-google-provider\">\n  </a>\n  Activate Google Provider\n</h3>\n\n<p>In your Supabase project dashbarod go to <code>Authentication -&gt; Providers</code> <br>\n<code>https://app.supabase.com/project/{YOUR_PROJECT_REFERENCE_ID}/auth/providers</code>. </p>\n\n<ol>\n<li>Scroll down to <code>Google</code> and open it. </li>\n<li>Add the <code>Client ID</code> and <code>Client Secret</code> you saved from step 5 in configuring Google Cloud. </li>\n<li>Press <code>Save</code>.</li>\n</ol>\n\n<p>Now the Google provider should be configured in your Supabase project. </p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--gFeI5n4L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id4fy16x0yelw5wymaoa.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--gFeI5n4L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id4fy16x0yelw5wymaoa.png\" alt=\"Google Provider\" loading=\"lazy\" width=\"880\" height=\"489\"></a></p>\n<h3>\n  <a name=\"add-redirect\" href=\"#add-redirect\">\n  </a>\n  Add Redirect\n</h3>\n\n<p>Go to your Supabase project and navigate to <code>Authentication -&gt; URL Configuration</code> <br>\n<code>https://app.supabase.com/project/{YOUR_PROJECT_REFERENCE_ID}/auth/url-configuration</code></p>\n\n<p>Click on <code>Add URL</code> and add <code>exp://{LOCAL_IP_ADDRESS}:19000/--/auth/callback</code></p>\n\n<p>Mine looks like<br>\n<a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--j7SvbfUz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uwpttlsyx61r8l8esctt.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--j7SvbfUz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uwpttlsyx61r8l8esctt.png\" alt=\"Supabase Redirect URL\" loading=\"lazy\" width=\"880\" height=\"256\"></a>  </p>\n\n<p>Now we are done configuring Supabase. </p>\n<h3>\n  <a name=\"code\" href=\"#code\">\n  </a>\n  Code\n</h3>\n\n<p>If you followed the <a href=\"https://supabase.com/docs/guides/with-expo\">supabase guide</a> you should be pretty much good to go. We need to create a new functions to handle the Google Sign-In.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">makeRedirectUri</span><span class=\"p\">,</span> <span class=\"nx\">startAsync</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">expo-auth-session</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">supabase</span><span class=\"p\">,</span> <span class=\"nx\">supabaseUrl</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">./supabase</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"nx\">googleSignIn</span> <span class=\"o\">=</span> <span class=\"k\">async</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// This will create a redirectUri</span>\n  <span class=\"c1\">// This should be the URL you added to \"Redirect URLs\" in Supabase URL Configuration</span>\n  <span class=\"c1\">// If they are different add the value of redirectUrl to your Supabase Redirect URLs</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">redirectUrl</span> <span class=\"o\">=</span> <span class=\"nx\">makeRedirectUri</span><span class=\"p\">({</span>\n    <span class=\"na\">path</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">/auth/callback</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"c1\">// authUrl: https://{YOUR_PROJECT_REFERENCE_ID}.supabase.co</span>\n  <span class=\"c1\">// returnURL: the redirectUrl you created above.</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">authResponse</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">startAsync</span><span class=\"p\">({</span>\n    <span class=\"na\">authUrl</span><span class=\"p\">:</span> <span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"nx\">supabaseUrl</span><span class=\"p\">}</span><span class=\"s2\">/auth/v1/authorize?provider=google&amp;redirect_to=</span><span class=\"p\">${</span><span class=\"nx\">redirectUrl</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">,</span>\n    <span class=\"na\">returnUrl</span><span class=\"p\">:</span> <span class=\"nx\">redirectUrl</span><span class=\"p\">,</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"c1\">// If the user successfully signs in</span>\n  <span class=\"c1\">// we will have access to an accessToken and an refreshToken</span>\n  <span class=\"c1\">// and then we'll use setSession (https://supabase.com/docs/reference/javascript/auth-setsession)</span>\n  <span class=\"c1\">// to create a Supabase-session using these token</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">authResponse</span><span class=\"p\">.</span><span class=\"nx\">type</span> <span class=\"o\">===</span> <span class=\"dl\">'</span><span class=\"s1\">success</span><span class=\"dl\">'</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">supabase</span><span class=\"p\">.</span><span class=\"nx\">auth</span><span class=\"p\">.</span><span class=\"nx\">setSession</span><span class=\"p\">({</span>\n      <span class=\"na\">access_token</span><span class=\"p\">:</span> <span class=\"nx\">authResponse</span><span class=\"p\">.</span><span class=\"nx\">params</span><span class=\"p\">.</span><span class=\"nx\">access_token</span><span class=\"p\">,</span>\n      <span class=\"na\">refresh_token</span><span class=\"p\">:</span> <span class=\"nx\">authResponse</span><span class=\"p\">.</span><span class=\"nx\">params</span><span class=\"p\">.</span><span class=\"nx\">refresh_token</span><span class=\"p\">,</span>\n    <span class=\"p\">});</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Now you should be all good to go! Call this function when a user wants to sign in with Google. </p>\n\n<p>Leave a comment if you find any errors or if you have any questions.</p>\n\n<p><em>I want to give credit to the people in this <a href=\"https://github.com/supabase/gotrue-js/issues/406\">GitHub Issue</a> whose comments helped me put all the pieces together.</em></p>\n\n","body_markdown":"This post will cover how to add Google Sign-In to your [Expo](expo.dev) + [Supabase](https://supabase.com/) project using `expo-auth-session`.\n\nIf you don't have a Expo + Supabase project  you can follow this [supabase guide](https://supabase.com/docs/guides/with-expo). This example uses v2 of `supabase-js`. \n\nWe'll start of by configuring Supabase and Google Cloud\n\n## Google Cloud \nGo to [Google Cloud](https://console.cloud.google.com/) and create a new project if you haven't done so. When you have your Google Cloud Project setup go to the [Credentials page](https://console.cloud.google.com/apis/credentials). \n\n1. If you see a prompt to \"Configure Consent Screen\", click that button and follow the instructions to finish the setup. \n2. Click on \"Create Credentials\" that should be located at the top of the screen and select \"OAuth Client ID\". \n3. In the \"Application type\" field select \"Web application\" and give your application a name.\n4. Under \"Authorized redirect URIs\" add `https://{YOUR_PROJECT_REFERENCE_ID}.supabase.co/auth/v1/callback`. Your reference ID can be found under `Settings -> General` in your Supabase project dashboard, click `SAVE`\n5. Click on your newly created credential under `OAuth 2.0 Client IDs`, in the top right you should see `Client ID` and `Client secret`. Copy and save these because they will be needed when we configure Supabase. \n\n\n![Google Cloud](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dpdq8nv527mp82kqj9q8.png)\n\n\n## Supabase\n\n### Activate Google Provider\nIn your Supabase project dashbarod go to `Authentication -> Providers` \n`https://app.supabase.com/project/{YOUR_PROJECT_REFERENCE_ID}/auth/providers`. \n1. Scroll down to `Google` and open it. \n2. Add the `Client ID` and `Client Secret` you saved from step 5 in configuring Google Cloud. \n3. Press `Save`.\n\nNow the Google provider should be configured in your Supabase project. \n\n\n![Google Provider](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/id4fy16x0yelw5wymaoa.png)\n\n### Add Redirect\nGo to your Supabase project and navigate to `Authentication -> URL Configuration` \n`https://app.supabase.com/project/{YOUR_PROJECT_REFERENCE_ID}/auth/url-configuration`\n\nClick on `Add URL` and add `exp://{LOCAL_IP_ADDRESS}:19000/--/auth/callback`\n \nMine looks like\n![Supabase Redirect URL](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uwpttlsyx61r8l8esctt.png)  \n\nNow we are done configuring Supabase. \n\n### Code\nIf you followed the [supabase guide](https://supabase.com/docs/guides/with-expo) you should be pretty much good to go. We need to create a new functions to handle the Google Sign-In. \n\n```js\nimport { makeRedirectUri, startAsync } from 'expo-auth-session';\nimport { supabase, supabaseUrl } from './supabase';\n\nexport const googleSignIn = async () => {\n  // This will create a redirectUri\n  // This should be the URL you added to \"Redirect URLs\" in Supabase URL Configuration\n  // If they are different add the value of redirectUrl to your Supabase Redirect URLs\n  const redirectUrl = makeRedirectUri({\n    path: '/auth/callback',\n  });\n\n  // authUrl: https://{YOUR_PROJECT_REFERENCE_ID}.supabase.co\n  // returnURL: the redirectUrl you created above.\n  const authResponse = await startAsync({\n    authUrl: `${supabaseUrl}/auth/v1/authorize?provider=google&redirect_to=${redirectUrl}`,\n    returnUrl: redirectUrl,\n  });\n\n  // If the user successfully signs in\n  // we will have access to an accessToken and an refreshToken\n  // and then we'll use setSession (https://supabase.com/docs/reference/javascript/auth-setsession)\n  // to create a Supabase-session using these token\n  if (authResponse.type === 'success') {\n    supabase.auth.setSession({\n      access_token: authResponse.params.access_token,\n      refresh_token: authResponse.params.refresh_token,\n    });\n  }\n};\n```\n\nNow you should be all good to go! Call this function when a user wants to sign in with Google. \n\nLeave a comment if you find any errors or if you have any questions.\n\n_I want to give credit to the people in this [GitHub Issue](https://github.com/supabase/gotrue-js/issues/406) whose comments helped me put all the pieces together._\n","user":{"name":"Patrik","username":"fedorish","twitter_username":null,"github_username":"fedorish","user_id":939771,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--OiKFqn40--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/939771/b642fe51-74df-4750-93b5-4e0e117f062e.png","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--Kt0s4Vux--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/939771/b642fe51-74df-4750-93b5-4e0e117f062e.png"}}