{"type_of":"article","id":1243877,"title":"Telegram bots with Node.js","description":"Telegram bots, besides regular chatbots, can also be used as \"dashboards\". Authentication is already...","readable_publish_date":"Nov 7","slug":"telegram-bots-with-nodejs-14cl","path":"/zsevic/telegram-bots-with-nodejs-14cl","url":"https://dev.to/zsevic/telegram-bots-with-nodejs-14cl","comments_count":0,"public_reactions_count":0,"collection_id":null,"published_timestamp":"2022-11-07T11:26:20Z","positive_reactions_count":0,"cover_image":null,"social_image":"https://dev.to/social_previews/article/1243877.png","canonical_url":"https://sevic.dev/telegram-bots-nodejs/","created_at":"2022-11-04T23:21:17Z","edited_at":null,"crossposted_at":"2022-11-07T11:26:20Z","published_at":"2022-11-07T11:26:00Z","last_comment_at":"2022-11-07T11:26:00Z","reading_time_minutes":3,"tag_list":"node, bottender, heroku","tags":["node","bottender","heroku"],"body_html":"<p>Telegram bots, besides regular chatbots, can also be used as \"dashboards\". Authentication is already there, as well as the UI to send commands to receive specific data. One additional option is to implement a cronjob that executes some commands and sends a response to the user. Also setting up the bot is much faster compared to other platforms.</p>\n\n<h3>\n  <a name=\"prerequisites\" href=\"#prerequisites\">\n  </a>\n  Prerequisites\n</h3>\n\n<ul>\n<li>Telegram app installed</li>\n</ul>\n\n<h3>\n  <a name=\"telegram-setup\" href=\"#telegram-setup\">\n  </a>\n  Telegram setup\n</h3>\n\n<p>Find <code>BotFather</code> account and send <code>/newbot</code> command. Choose name and username, after that you'll get an access token for a newly created bot. To add default commands for it, send <code>/setcommands</code> command and send commands as it's stated in the instructions.</p>\n\n<h3>\n  <a name=\"setup-for-development-environment\" href=\"#setup-for-development-environment\">\n  </a>\n  Setup for development environment\n</h3>\n\n<h4>\n  <a name=\"bootstrapping-bot\" href=\"#bootstrapping-bot\">\n  </a>\n  Bootstrapping bot\n</h4>\n\n<p>Bottender is a great framework for developing bots, it supports multiple platforms. Start with the following command and choose platform and session store. Update <code>.env</code> file with the access token that <code>BotFather</code> sent.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code>npx create-bottender-app &lt;bot-name&gt;\n<span class=\"nb\">cd</span> &lt;bot-name&gt;\nnpm i express body-parser cron ngrok shelljs pino\nnpm i nodemon <span class=\"nt\">-D</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h4>\n  <a name=\"publicly-exposed-url\" href=\"#publicly-exposed-url\">\n  </a>\n  Publicly exposed URL\n</h4>\n\n<p>Telegram bots require publicly available URLs for the webhooks. <a href=\"https://ngrok.com/\">Ngrok</a> creates a secure public URL pointing to the local server while Bottender enables webhook integrations. To automate this process, a custom server has to be implemented.</p>\n\n<h4>\n  <a name=\"server-setup\" href=\"#server-setup\">\n  </a>\n  Server setup\n</h4>\n\n<p>Bellow implementation starts the cronjob and custom server with an automated connection to the tunnel and webhook URL setup.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"c1\">// server.js</span>\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">bottender</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">bottender</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">ngrok</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">ngrok</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">shell</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">shelljs</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">setupCustomServer</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">./src/custom-server</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">logger</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">./src/logger</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">setupScheduler</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">./src/scheduler</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nx\">bottender</span><span class=\"p\">({</span>\n  <span class=\"na\">dev</span><span class=\"p\">:</span> <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">NODE_ENV</span> <span class=\"o\">!==</span> <span class=\"dl\">'</span><span class=\"s1\">production</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n<span class=\"p\">});</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">setWebhookUrl</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">url</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span>\n  <span class=\"nx\">shell</span><span class=\"p\">.</span><span class=\"nx\">exec</span><span class=\"p\">(</span><span class=\"s2\">`npm run telegram-webhook:set </span><span class=\"p\">${</span><span class=\"nx\">url</span><span class=\"p\">}</span><span class=\"s2\">/webhooks/telegram`</span><span class=\"p\">);</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">connectToTunnel</span> <span class=\"o\">=</span> <span class=\"k\">async</span> <span class=\"p\">(</span><span class=\"nx\">port</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">url</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">ngrok</span><span class=\"p\">.</span><span class=\"nx\">connect</span><span class=\"p\">({</span>\n    <span class=\"na\">addr</span><span class=\"p\">:</span> <span class=\"nx\">port</span><span class=\"p\">,</span>\n    <span class=\"na\">onStatusChange</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nx\">status</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"k\">switch</span> <span class=\"p\">(</span><span class=\"nx\">status</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"k\">case</span> <span class=\"dl\">'</span><span class=\"s1\">connected</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"nx\">logger</span><span class=\"p\">.</span><span class=\"nx\">info</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Connected to tunnel...</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n          <span class=\"k\">break</span><span class=\"p\">;</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">case</span> <span class=\"dl\">'</span><span class=\"s1\">closed</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"nx\">logger</span><span class=\"p\">.</span><span class=\"nx\">warn</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Connection to tunnel is closed...</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n          <span class=\"nx\">logger</span><span class=\"p\">.</span><span class=\"nx\">info</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Reconnecting...</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n          <span class=\"k\">return</span> <span class=\"nx\">connectToTunnel</span><span class=\"p\">(</span><span class=\"nx\">port</span><span class=\"p\">);</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">});</span>\n  <span class=\"nx\">setWebhookUrl</span><span class=\"p\">(</span><span class=\"nx\">url</span><span class=\"p\">);</span>\n<span class=\"p\">};</span>\n\n<span class=\"p\">(</span><span class=\"k\">async</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">try</span> <span class=\"p\">{</span>\n    <span class=\"k\">await</span> <span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">prepare</span><span class=\"p\">();</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">port</span> <span class=\"o\">=</span> <span class=\"nb\">Number</span><span class=\"p\">(</span><span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">PORT</span><span class=\"p\">)</span> <span class=\"o\">||</span> <span class=\"mi\">5000</span><span class=\"p\">;</span>\n    <span class=\"nx\">setupCustomServer</span><span class=\"p\">(</span><span class=\"nx\">app</span><span class=\"p\">,</span> <span class=\"nx\">port</span><span class=\"p\">);</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">NODE_ENV</span> <span class=\"o\">!==</span> <span class=\"dl\">'</span><span class=\"s1\">production</span><span class=\"dl\">'</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">await</span> <span class=\"nx\">connectToTunnel</span><span class=\"p\">(</span><span class=\"nx\">port</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"nx\">setupScheduler</span><span class=\"p\">();</span>\n  <span class=\"p\">}</span> <span class=\"k\">catch</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">logger</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">Setting up failed...</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">})();</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h4>\n  <a name=\"custom-server-implementation-for-the-webhook\" href=\"#custom-server-implementation-for-the-webhook\">\n  </a>\n  Custom server implementation for the webhook\n</h4>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"c1\">// src/custom-server.js</span>\n<span class=\"kd\">const</span> <span class=\"nx\">bodyParser</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">body-parser</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">express</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">express</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">logger</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">./logger</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">setupCustomServer</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">app</span><span class=\"p\">,</span> <span class=\"nx\">port</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// the request handler of the bottender app</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">handle</span> <span class=\"o\">=</span> <span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">getRequestHandler</span><span class=\"p\">();</span>\n\n  <span class=\"kd\">const</span> <span class=\"nx\">server</span> <span class=\"o\">=</span> <span class=\"nx\">express</span><span class=\"p\">();</span>\n\n  <span class=\"kd\">const</span> <span class=\"nx\">verify</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">_</span><span class=\"p\">,</span> <span class=\"nx\">buf</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">rawBody</span> <span class=\"o\">=</span> <span class=\"nx\">buf</span><span class=\"p\">.</span><span class=\"nx\">toString</span><span class=\"p\">();</span>\n  <span class=\"p\">};</span>\n  <span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">bodyParser</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">({</span> <span class=\"nx\">verify</span> <span class=\"p\">}));</span>\n  <span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">bodyParser</span><span class=\"p\">.</span><span class=\"nx\">urlencoded</span><span class=\"p\">({</span> <span class=\"na\">extended</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span> <span class=\"nx\">verify</span> <span class=\"p\">}));</span>\n\n  <span class=\"c1\">// route for webhook request</span>\n  <span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">all</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">*</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"nx\">handle</span><span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">);</span>\n  <span class=\"p\">});</span>\n\n  <span class=\"nx\">server</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"nx\">port</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"k\">throw</span> <span class=\"nx\">err</span><span class=\"p\">;</span>\n    <span class=\"nx\">logger</span><span class=\"p\">.</span><span class=\"nx\">info</span><span class=\"p\">(</span><span class=\"s2\">`Ready on http://localhost:</span><span class=\"p\">${</span><span class=\"nx\">port</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">);</span>\n  <span class=\"p\">});</span>\n<span class=\"p\">};</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"nx\">setupCustomServer</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h4>\n  <a name=\"custom-scheduler\" href=\"#custom-scheduler\">\n  </a>\n  Custom scheduler\n</h4>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"c1\">// src/scheduler.js</span>\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">getClient</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">bottender</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">CronJob</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">cron</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">CHAT_ID</span><span class=\"p\">,</span> <span class=\"nx\">CRONJOB_INTERVAL</span><span class=\"p\">,</span> <span class=\"nx\">replyMarkup</span><span class=\"p\">,</span> <span class=\"nx\">TIMEZONE</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">./constants</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">executeCustomCommand</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">./services</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">client</span> <span class=\"o\">=</span> <span class=\"nx\">getClient</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">telegram</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">setupScheduler</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span>\n  <span class=\"k\">new</span> <span class=\"nx\">CronJob</span><span class=\"p\">(</span>\n    <span class=\"nx\">CRONJOB_INTERVAL</span><span class=\"p\">,</span>\n    <span class=\"k\">async</span> <span class=\"kd\">function</span> <span class=\"p\">()</span> <span class=\"p\">{</span>\n      <span class=\"kd\">const</span> <span class=\"nx\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">executeCustomCommand</span><span class=\"p\">();</span>\n\n      <span class=\"k\">await</span> <span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">sendMessage</span><span class=\"p\">(</span><span class=\"nx\">CHAT_ID</span><span class=\"p\">,</span> <span class=\"nx\">response</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"na\">parseMode</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">HTML</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n        <span class=\"nx\">replyMarkup</span><span class=\"p\">,</span>\n      <span class=\"p\">});</span>\n    <span class=\"p\">},</span>\n    <span class=\"kc\">null</span><span class=\"p\">,</span>\n    <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"nx\">TIMEZONE</span><span class=\"p\">,</span>\n  <span class=\"p\">);</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"nx\">setupScheduler</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h4>\n  <a name=\"npm-scripts\" href=\"#npm-scripts\">\n  </a>\n  Npm scripts\n</h4>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight json\"><code><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">package.json</span><span class=\"w\">\n</span><span class=\"p\">{</span><span class=\"w\">\n  </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">...</span><span class=\"w\">\n  </span><span class=\"nl\">\"scripts\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"dev\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"nodemon server.js\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"lint\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"eslint . \"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"lint:fix\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"npm run lint -- --fix\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"start\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"node server.js\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"telegram-webhook:set\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"echo 'Y' | bottender telegram webhook set -w $1\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"test\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"jest\"</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"w\">\n  </span><span class=\"err\">//</span><span class=\"w\"> </span><span class=\"err\">...</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h4>\n  <a name=\"linter\" href=\"#linter\">\n  </a>\n  Linter\n</h4>\n\n<p>Update <code>ecmaVersion</code> field in eslint config to <code>2021</code>.</p>\n\n<h4>\n  <a name=\"logger\" href=\"#logger\">\n  </a>\n  Logger\n</h4>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">logger</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">pino</span><span class=\"dl\">'</span><span class=\"p\">)();</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"nx\">logger</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h3>\n  <a name=\"bot-development\" href=\"#bot-development\">\n  </a>\n  Bot development\n</h3>\n\n<p>Below is the bot entry point, multiple handlers can be specified.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"c1\">// src/index.js</span>\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">router</span><span class=\"p\">,</span> <span class=\"nx\">telegram</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">bottender/router</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">HandleMessage</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">./handlers/message-handler</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"k\">async</span> <span class=\"kd\">function</span> <span class=\"nx\">App</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nx\">router</span><span class=\"p\">([</span><span class=\"nx\">telegram</span><span class=\"p\">.</span><span class=\"nx\">message</span><span class=\"p\">(</span><span class=\"nx\">HandleMessage</span><span class=\"p\">)]);</span>\n<span class=\"p\">};</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Bellow is basic message handler implementation. Restricting the access to the bot can be done by chat id. For a message with HTML content, <code>parseMode</code> parameter should be set to <code>HTML</code>. Quick replies can be added in <code>replyMarkup</code> field. Received bot commands have a type <code>bot_command</code>.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"c1\">// src/handlers/message-handler.js</span>\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">ADMIN_CHAT_ID</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">../constants</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">handleCustomLogic</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">../services</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n<span class=\"k\">async</span> <span class=\"kd\">function</span> <span class=\"nx\">HandleMessage</span><span class=\"p\">(</span><span class=\"nx\">context</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">chatId</span> <span class=\"o\">=</span> <span class=\"nx\">context</span><span class=\"p\">.</span><span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">_rawEvent</span><span class=\"p\">.</span><span class=\"nx\">message</span><span class=\"p\">?.</span><span class=\"nx\">chat</span><span class=\"p\">?.</span><span class=\"nx\">id</span><span class=\"p\">;</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">chatId</span> <span class=\"o\">!==</span> <span class=\"nx\">ADMIN_CHAT_ID</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">await</span> <span class=\"nx\">context</span><span class=\"p\">.</span><span class=\"nx\">sendMessage</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Access denied!</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"kd\">const</span> <span class=\"nx\">isBotCommand</span> <span class=\"o\">=</span> <span class=\"o\">!!</span><span class=\"nx\">context</span><span class=\"p\">.</span><span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">_rawEvent</span><span class=\"p\">.</span><span class=\"nx\">message</span><span class=\"p\">?.</span><span class=\"nx\">entities</span><span class=\"p\">?.</span><span class=\"nx\">find</span><span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"nx\">entity</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">entity</span><span class=\"p\">.</span><span class=\"nx\">type</span> <span class=\"o\">===</span> <span class=\"dl\">'</span><span class=\"s1\">bot_command</span><span class=\"dl\">'</span>\n  <span class=\"p\">);</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">message</span> <span class=\"o\">=</span> <span class=\"nx\">isBotCommand</span>\n    <span class=\"p\">?</span> <span class=\"nx\">context</span><span class=\"p\">.</span><span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">text</span><span class=\"p\">.</span><span class=\"nx\">replace</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">/</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">''</span><span class=\"p\">)</span>\n    <span class=\"p\">:</span> <span class=\"nx\">context</span><span class=\"p\">.</span><span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">text</span><span class=\"p\">;</span>\n\n  <span class=\"kd\">const</span> <span class=\"nx\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">handleCustomLogic</span><span class=\"p\">(</span><span class=\"nx\">message</span><span class=\"p\">);</span>\n\n  <span class=\"k\">await</span> <span class=\"nx\">context</span><span class=\"p\">.</span><span class=\"nx\">sendMessage</span><span class=\"p\">(</span><span class=\"nx\">response</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"na\">parseMode</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">HTML</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"na\">replyMarkup</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"na\">keyboard</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"na\">text</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">/command</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n          <span class=\"p\">},</span>\n        <span class=\"p\">],</span>\n      <span class=\"p\">],</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">});</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">module</span><span class=\"p\">.</span><span class=\"nx\">exports</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"nx\">HandleMessage</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h3>\n  <a name=\"deployment\" href=\"#deployment\">\n  </a>\n  Deployment\n</h3>\n\n<p>One of the options to deploy a Telegram bot is Heroku (Heroku CLI has to be installed as a prerequisite) running the following commands for the setup and deployment.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>// Procfile\nweb: npm start\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code>heroku create <span class=\"nt\">-a</span> &lt;PROJECT_NAME&gt;\ngit init\nheroku git:remote <span class=\"nt\">-a</span> &lt;PROJECT_NAME&gt;\ngit add <span class=\"nb\">.</span>\ngit commit <span class=\"nt\">-m</span> <span class=\"s2\">\"Initial commit\"</span>\ngit push heroku master\nheroku config:set <span class=\"nv\">TELEGRAM_ACCESS_TOKEN</span><span class=\"o\">=</span>&lt;ACCESS_TOKEN&gt;\nnpm run telegram:webhook-set https://&lt;PROJECT_NAME&gt;.herokuapp.com/webhooks/telegram\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n","body_markdown":"---\ntitle: Telegram bots with Node.js\npublished: true\ndate: 2022-11-07 11:26:00 UTC\ntags: ['node', 'bottender', 'heroku']\ncanonical_url: https://sevic.dev/telegram-bots-nodejs/\n---\n\nTelegram bots, besides regular chatbots, can also be used as \"dashboards\". Authentication is already there, as well as the UI to send commands to receive specific data. One additional option is to implement a cronjob that executes some commands and sends a response to the user. Also setting up the bot is much faster compared to other platforms.\n\n### Prerequisites\n\n- Telegram app installed\n\n### Telegram setup\n\nFind `BotFather` account and send `/newbot` command. Choose name and username, after that you'll get an access token for a newly created bot. To add default commands for it, send `/setcommands` command and send commands as it's stated in the instructions.\n\n### Setup for development environment\n\n#### Bootstrapping bot\n\nBottender is a great framework for developing bots, it supports multiple platforms. Start with the following command and choose platform and session store. Update `.env` file with the access token that `BotFather` sent.\n\n```bash\nnpx create-bottender-app <bot-name>\ncd <bot-name>\nnpm i express body-parser cron ngrok shelljs pino\nnpm i nodemon -D\n```\n\n#### Publicly exposed URL\n\nTelegram bots require publicly available URLs for the webhooks. [Ngrok](https://ngrok.com/) creates a secure public URL pointing to the local server while Bottender enables webhook integrations. To automate this process, a custom server has to be implemented.\n\n#### Server setup\n\nBellow implementation starts the cronjob and custom server with an automated connection to the tunnel and webhook URL setup.\n\n```js\n// server.js\nconst { bottender } = require('bottender');\nconst ngrok = require('ngrok');\nconst shell = require('shelljs');\nconst { setupCustomServer } = require('./src/custom-server');\nconst { logger } = require('./src/logger');\nconst { setupScheduler } = require('./src/scheduler');\n\nconst app = bottender({\n  dev: process.env.NODE_ENV !== 'production',\n});\n\nconst setWebhookUrl = (url) =>\n  shell.exec(`npm run telegram-webhook:set ${url}/webhooks/telegram`);\n\nconst connectToTunnel = async (port) => {\n  const url = await ngrok.connect({\n    addr: port,\n    onStatusChange: (status) => {\n      switch (status) {\n        case 'connected': {\n          logger.info('Connected to tunnel...');\n          break;\n        }\n        case 'closed': {\n          logger.warn('Connection to tunnel is closed...');\n          logger.info('Reconnecting...');\n          return connectToTunnel(port);\n        }\n      }\n    },\n  });\n  setWebhookUrl(url);\n};\n\n(async () => {\n  try {\n    await app.prepare();\n    const port = Number(process.env.PORT) || 5000;\n    setupCustomServer(app, port);\n\n    if (process.env.NODE_ENV !== 'production') {\n      await connectToTunnel(port);\n    }\n    setupScheduler();\n  } catch (error) {\n    logger.error(error, 'Setting up failed...');\n  }\n})();\n```\n\n#### Custom server implementation for the webhook\n\n```js\n// src/custom-server.js\nconst bodyParser = require('body-parser');\nconst express = require('express');\nconst { logger } = require('./logger');\n\nconst setupCustomServer = (app, port) => {\n  // the request handler of the bottender app\n  const handle = app.getRequestHandler();\n\n  const server = express();\n\n  const verify = (req, _, buf) => {\n    req.rawBody = buf.toString();\n  };\n  server.use(bodyParser.json({ verify }));\n  server.use(bodyParser.urlencoded({ extended: false, verify }));\n\n  // route for webhook request\n  server.all('*', (req, res) => {\n    return handle(req, res);\n  });\n\n  server.listen(port, (err) => {\n    if (err) throw err;\n    logger.info(`Ready on http://localhost:${port}`);\n  });\n};\n\nmodule.exports = {\n  setupCustomServer,\n};\n```\n\n#### Custom scheduler\n\n```js\n// src/scheduler.js\nconst { getClient } = require('bottender');\nconst { CronJob } = require('cron');\nconst { CHAT_ID, CRONJOB_INTERVAL, replyMarkup, TIMEZONE } = require('./constants');\nconst { executeCustomCommand } = require('./services');\n\nconst client = getClient('telegram');\n\nconst setupScheduler = () =>\n  new CronJob(\n    CRONJOB_INTERVAL,\n    async function () {\n      const response = await executeCustomCommand();\n\n      await client.sendMessage(CHAT_ID, response, {\n        parseMode: 'HTML',\n        replyMarkup,\n      });\n    },\n    null,\n    true,\n    TIMEZONE,\n  );\n\nmodule.exports = {\n  setupScheduler,\n};\n```\n\n#### Npm scripts\n\n```json\n// package.json\n{\n  // ...\n  \"scripts\": {\n    \"dev\": \"nodemon server.js\",\n    \"lint\": \"eslint . \",\n    \"lint:fix\": \"npm run lint -- --fix\",\n    \"start\": \"node server.js\",\n    \"telegram-webhook:set\": \"echo 'Y' | bottender telegram webhook set -w $1\",\n    \"test\": \"jest\"\n  }\n  // ...\n}\n```\n\n#### Linter\n\nUpdate `ecmaVersion` field in eslint config to `2021`.\n\n#### Logger\n\n```js\nconst logger = require('pino')();\n\nmodule.exports = {\n  logger,\n};\n```\n\n### Bot development\n\nBelow is the bot entry point, multiple handlers can be specified.\n\n```js\n// src/index.js\nconst { router, telegram } = require('bottender/router');\nconst { HandleMessage } = require('./handlers/message-handler');\n\nmodule.exports = async function App() {\n  return router([telegram.message(HandleMessage)]);\n};\n```\n\nBellow is basic message handler implementation. Restricting the access to the bot can be done by chat id. For a message with HTML content, `parseMode` parameter should be set to `HTML`. Quick replies can be added in `replyMarkup` field. Received bot commands have a type `bot_command`.\n\n```js\n// src/handlers/message-handler.js\nconst { ADMIN_CHAT_ID } = require('../constants');\nconst { handleCustomLogic } = require('../services');\n\nasync function HandleMessage(context) {\n  const chatId = context.event._rawEvent.message?.chat?.id;\n  if (chatId !== ADMIN_CHAT_ID) {\n    await context.sendMessage('Access denied!');\n    return;\n  }\n\n  const isBotCommand = !!context.event._rawEvent.message?.entities?.find(\n    (entity) => entity.type === 'bot_command'\n  );\n  const message = isBotCommand\n    ? context.event.text.replace('/', '')\n    : context.event.text;\n\n  const response = await handleCustomLogic(message);\n\n  await context.sendMessage(response, {\n    parseMode: 'HTML',\n    replyMarkup: {\n      keyboard: [\n        [\n          {\n            text: '/command',\n          },\n        ],\n      ],\n    },\n  });\n}\n\nmodule.exports = {\n  HandleMessage,\n};\n```\n\n### Deployment\n\nOne of the options to deploy a Telegram bot is Heroku (Heroku CLI has to be installed as a prerequisite) running the following commands for the setup and deployment.\n\n```\n// Procfile\nweb: npm start\n```\n\n```bash\nheroku create -a <PROJECT_NAME>\ngit init\nheroku git:remote -a <PROJECT_NAME>\ngit add .\ngit commit -m \"Initial commit\"\ngit push heroku master\nheroku config:set TELEGRAM_ACCESS_TOKEN=<ACCESS_TOKEN>\nnpm run telegram:webhook-set https://<PROJECT_NAME>.herokuapp.com/webhooks/telegram\n```","user":{"name":"Željko Šević","username":"zsevic","twitter_username":null,"github_username":"zsevic","user_id":329310,"website_url":"https://sevic.dev","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--CqhGVkFW--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/329310/1134d19a-755a-427e-b2f4-fb9d4166b783.png","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s---eIudLqN--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/329310/1134d19a-755a-427e-b2f4-fb9d4166b783.png"}}