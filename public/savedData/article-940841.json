{"type_of":"article","id":940841,"title":"Component System with Material UI: Typography","description":"This is the second post from a series which will attempt to create a Component System that maps an...","readable_publish_date":"Jan 11","slug":"component-system-with-material-ui-typography-6m9","path":"/gonzavic/component-system-with-material-ui-typography-6m9","url":"https://dev.to/gonzavic/component-system-with-material-ui-typography-6m9","comments_count":0,"public_reactions_count":1,"collection_id":16090,"published_timestamp":"2022-01-11T16:01:48Z","positive_reactions_count":1,"cover_image":null,"social_image":"https://dev.to/social_previews/article/940841.png","canonical_url":"https://dev.to/gonzavic/component-system-with-material-ui-typography-6m9","created_at":"2021-12-30T23:46:17Z","edited_at":"2022-01-11T16:02:39Z","crossposted_at":null,"published_at":"2022-01-11T16:01:48Z","last_comment_at":"2022-01-11T16:01:48Z","reading_time_minutes":2,"tag_list":"react, mui, system, tutorial","tags":["react","mui","system","tutorial"],"body_html":"<p>This is the second post from a series which will attempt to create a Component System that maps an already created Design System: <a href=\"https://www.figma.com/file/a94lX91ZmYGIDBxvb8shwLn8/00.-Styleguide---Library?node-id=3390%3A38\">VTEX Design Sistem</a></p>\n\n<p>In this post I'll be creating the code needed to map the Typography style from the design system into the project. For that I'll be overriding the defaults style values and also creating new variants.</p>\n\n<p>You can check the Typography configuration within Figma <a href=\"https://www.figma.com/file/a94lX91ZmYGIDBxvb8shwLn8/00.-Styleguide---Library?node-id=3390%3A38\">here</a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--eCn62-71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3t96yoozy9nv7dkmxwz.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--eCn62-71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3t96yoozy9nv7dkmxwz.png\" alt=\"Typography Design\" loading=\"lazy\" width=\"880\" height=\"557\"></a></p>\n\n\n<hr>\n\n<p>A Typography is a component to render text into a React App, Mui has an already pre-defined set of variant values for this component, <a href=\"https://mui.com/api/typography/#props\">here is the documentation for it</a>.</p>\n\n<h2>\n  <a name=\"setting-variants-styles\" href=\"#setting-variants-styles\">\n  </a>\n  Setting variants styles\n</h2>\n\n\n<div class=\"ltag_gist-liquid-tag\">\n  <script id=\"gist-ltag\" src=\"https://gist.github.com/GonzAVic/ffbb4b1e09eda1e574bb9468b73d0b89.js\"></script>\n</div>\n\n\n<p>In the code example above I'm using the <code>typography: {...}</code> property to set the correct styling for the already pre-defined typography variants, and also create new ones, like: bodyBold, small, smallBold.</p>\n\n<p>Also, at the same level than <code>typography:{...}</code> there is another property called <code>components:{...}</code>, in here I'm using <code>MuiTypography</code> to specify which html node should be rendered when any of the new variants are being called (variantMapping).</p>\n\n<p>If I don't set this <code>variantMapping</code>, when I use a Typography with variant \"small\", for example, a <code>span</code> will be rendered.</p>\n\n<p>Here is how the code above looks on a React application:</p>\n\n<p><iframe src=\"https://codesandbox.io/embed/9eim9?initialpath=/typographies&amp;module=/src/Typographies.js\" style=\"width:100%; height:calc(300px + 8vw); border:0; border-radius: 4px; overflow:hidden;\" allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb\" loading=\"lazy\" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\">\n</iframe>\n</p>\n\n<h2>\n  <a name=\"customizing-typographies-on-the-flight\" href=\"#customizing-typographies-on-the-flight\">\n  </a>\n  Customizing Typographies on the flight\n</h2>\n\n<p>The idea of creating and setting variants on Mui is to write more maintainable and clean code, most of the time you only need the default version of Typography but when you need specific changes like the color of the text, you can pass it as a property.</p>\n\n<p>For that you can pass a <code>color</code> prop to a Typography component to use any defined color on the theme.</p>\n\n\n<div class=\"ltag_gist-liquid-tag\">\n  <script id=\"gist-ltag\" src=\"https://gist.github.com/GonzAVic/af803a87ba5f62e498afcb300f60b48a.js\"></script>\n</div>\n\n\n<p>You can see more examples of this on the codesandbox above.</p>\n\n<h2>\n  <a name=\"conclusion\" href=\"#conclusion\">\n  </a>\n  Conclusion\n</h2>\n\n<p>Set all your typographies styles needed on your application, create some custom variants if need it and use the <code>Typography</code> component so you don't need to set the correct styles on each text you need to display.</p>\n\n<p>Also take advantage of the <code>color</code> prop to customize the color in case you need it.</p>\n\n","body_markdown":"This is the second post from a series which will attempt to create a Component System that maps an already created Design System: [VTEX Design Sistem](https://www.figma.com/file/a94lX91ZmYGIDBxvb8shwLn8/00.-Styleguide---Library?node-id=3390%3A38)\n\nIn this post I'll be creating the code needed to map the Typography style from the design system into the project. For that I'll be overriding the defaults style values and also creating new variants.\n\nYou can check the Typography configuration within Figma [here](https://www.figma.com/file/a94lX91ZmYGIDBxvb8shwLn8/00.-Styleguide---Library?node-id=3390%3A38)\n\n![Typography Design](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3t96yoozy9nv7dkmxwz.png)\n \n\n---\n\nA Typography is a component to render text into a React App, Mui has an already pre-defined set of variant values for this component, [here is the documentation for it](https://mui.com/api/typography/#props).\n\n## Setting variants styles\n\n{% gist https://gist.github.com/GonzAVic/ffbb4b1e09eda1e574bb9468b73d0b89 %}\n\nIn the code example above I'm using the `typography: {...}` property to set the correct styling for the already pre-defined typography variants, and also create new ones, like: bodyBold, small, smallBold.\n\nAlso, at the same level than `typography:{...}` there is another property called `components:{...}`, in here I'm using `MuiTypography` to specify which html node should be rendered when any of the new variants are being called (variantMapping).\n\nIf I don't set this `variantMapping`, when I use a Typography with variant \"small\", for example, a `span` will be rendered.\n\n\nHere is how the code above looks on a React application:\n\n{% codesandbox 9eim9 initialpath=/typographies module=/src/Typographies.js %}\n\n## Customizing Typographies on the flight\n\nThe idea of creating and setting variants on Mui is to write more maintainable and clean code, most of the time you only need the default version of Typography but when you need specific changes like the color of the text, you can pass it as a property.\n\nFor that you can pass a `color` prop to a Typography component to use any defined color on the theme.\n\n{% gist https://gist.github.com/GonzAVic/af803a87ba5f62e498afcb300f60b48a %}\n\nYou can see more examples of this on the codesandbox above.\n\n## Conclusion\nSet all your typographies styles needed on your application, create some custom variants if need it and use the `Typography` component so you don't need to set the correct styles on each text you need to display.\n\nAlso take advantage of the `color` prop to customize the color in case you need it.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","user":{"name":"Victor Gonzalez","username":"gonzavic","twitter_username":"Vic_E_Gonzalez","github_username":"GonzAVic","user_id":783300,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--UyipG34E--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/783300/d3a769e3-aa29-45c6-84a5-9c0f809a4718.jpg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--0G1jGJ8O--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/783300/d3a769e3-aa29-45c6-84a5-9c0f809a4718.jpg"}}