{"type_of":"article","id":1244526,"title":"How to handle anything","description":"In this short instalment I show how I have changed the framework from just handling clicks to handling any element event.","readable_publish_date":"Nov 7","slug":"how-to-handle-anything-jdi","path":"/mellen/how-to-handle-anything-jdi","url":"https://dev.to/mellen/how-to-handle-anything-jdi","comments_count":0,"public_reactions_count":0,"collection_id":18894,"published_timestamp":"2022-11-07T12:05:24Z","positive_reactions_count":0,"cover_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--D5Ddnwnz--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1eble812kv34qoah8l1k.png","social_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--1fHRXGgV--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1eble812kv34qoah8l1k.png","canonical_url":"https://dev.to/mellen/how-to-handle-anything-jdi","created_at":"2022-11-05T13:03:36Z","edited_at":"2022-11-07T12:06:04Z","crossposted_at":null,"published_at":"2022-11-07T12:05:24Z","last_comment_at":"2022-11-07T12:05:24Z","reading_time_minutes":1,"tag_list":"javascript, tutorial, reactive, rjsf","tags":["javascript","tutorial","reactive","rjsf"],"body_html":"<p>This is just a small change. Initially I created functionality to allow for click events to be handled, <a href=\"https://github.com/Mellen/rjsf/blob/b9729a2135606f201ea967d68a932c67399256ae/rjsf.js#L66\">like so</a>:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">el</span><span class=\"p\">.</span><span class=\"nx\">getAttribute</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">onclick</span><span class=\"dl\">'</span><span class=\"p\">))</span>\n<span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">onclick</span> <span class=\"o\">=</span> <span class=\"nx\">el</span><span class=\"p\">.</span><span class=\"nx\">getAttribute</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">onclick</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n  <span class=\"nx\">el</span><span class=\"p\">.</span><span class=\"nx\">setAttribute</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">onclick</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">''</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">onclick</span> <span class=\"k\">in</span> <span class=\"nx\">_internal</span><span class=\"p\">.</span><span class=\"nx\">originalViewmodel</span><span class=\"p\">.</span><span class=\"nx\">functions</span><span class=\"p\">)</span>\n  <span class=\"p\">{</span>\n    <span class=\"nx\">el</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">click</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">_internal</span><span class=\"p\">.</span><span class=\"nx\">originalViewmodel</span><span class=\"p\">.</span><span class=\"nx\">functions</span><span class=\"p\">[</span><span class=\"nx\">onclick</span><span class=\"p\">].</span><span class=\"nx\">bind</span><span class=\"p\">(</span><span class=\"nx\">_internal</span><span class=\"p\">));</span>\n   <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Obviously people will want to handle any element event, so I need to expand handling to allow for that.</p>\n\n<p>My chosen method is a little brittle. I assume an attribute that starts <code>on</code> is and event, and assign accordingly.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">attr</span> <span class=\"k\">of</span> <span class=\"nx\">el</span><span class=\"p\">.</span><span class=\"nx\">attributes</span><span class=\"p\">)</span>\n<span class=\"p\">{</span>\n  <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">attr</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">.</span><span class=\"nx\">startsWith</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">on</span><span class=\"dl\">'</span><span class=\"p\">))</span>\n  <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">eventName</span> <span class=\"o\">=</span> <span class=\"nx\">attr</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">.</span><span class=\"nx\">substring</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">);</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">eventHandlerName</span> <span class=\"o\">=</span> <span class=\"nx\">attr</span><span class=\"p\">.</span><span class=\"nx\">value</span><span class=\"p\">;</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">eventHandlerName</span> <span class=\"k\">in</span> <span class=\"nx\">_internal</span><span class=\"p\">.</span><span class=\"nx\">originalViewmodel</span><span class=\"p\">.</span><span class=\"nx\">functions</span><span class=\"p\">)</span>\n    <span class=\"p\">{</span>\n      <span class=\"nx\">el</span><span class=\"p\">.</span><span class=\"nx\">setAttribute</span><span class=\"p\">(</span><span class=\"nx\">attr</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">,</span> <span class=\"dl\">''</span><span class=\"p\">);</span>\n      <span class=\"nx\">el</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"nx\">eventName</span><span class=\"p\">,</span> <span class=\"nx\">_internal</span><span class=\"p\">.</span><span class=\"nx\">originalViewmodel</span><span class=\"p\">.</span><span class=\"nx\">functions</span><span class=\"p\">[</span><span class=\"nx\">eventHandlerName</span><span class=\"p\">].</span><span class=\"nx\">bind</span><span class=\"p\">(</span><span class=\"nx\">_internal</span><span class=\"p\">));</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>So now this is possible:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight html\"><code><span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"app\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">onkeyup=</span><span class=\"s\">\"annoy\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;/div&gt;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"k\">import</span> <span class=\"p\">{</span><span class=\"nx\">rjsf</span><span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">../rjsf.js</span><span class=\"dl\">'</span>\n\n<span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">appElement</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">app</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n  <span class=\"kd\">const</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">rjsf</span><span class=\"p\">(</span><span class=\"nx\">appElement</span><span class=\"p\">);</span>\n\n  <span class=\"kd\">const</span> <span class=\"nx\">viewmodel</span> <span class=\"o\">=</span> \n        <span class=\"p\">{</span>\n          <span class=\"na\">functions</span><span class=\"p\">:</span>\n          <span class=\"p\">{</span>\n            <span class=\"na\">annoy</span><span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span>\n            <span class=\"p\">{</span>\n              <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">();</span>\n              <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">this is annoying isn</span><span class=\"se\">\\'</span><span class=\"s1\">t it?</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">},</span>\n        <span class=\"p\">};</span>\n\n  <span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">init</span><span class=\"p\">(</span><span class=\"nx\">viewmodel</span><span class=\"p\">);</span>\n\n<span class=\"p\">})();</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Which will alert a message every time there is a keyup event in the input box.</p>\n\n<p>Next time will be a longer article investigating how to make a for element.</p>\n\n<p>Please let me know any thoughts or questions you have in the comments below.</p>\n\n<p>❤️, share, and follow for the next instalment!</p>\n\n","body_markdown":"---\ntitle: How to handle anything\npublished: true\ndescription: In this short instalment I show how I have changed the framework from just handling clicks to handling any element event.\ntags: javascript, tutorial, reactive, rjsf\nseries: DIY reactive framework\ncover_image: https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1eble812kv34qoah8l1k.png\n---\nThis is just a small change. Initially I created functionality to allow for click events to be handled, [like so](https://github.com/Mellen/rjsf/blob/b9729a2135606f201ea967d68a932c67399256ae/rjsf.js#L66):\n\n``` javascript\nif(el.getAttribute('onclick'))\n{\n  let onclick = el.getAttribute('onclick');\n  el.setAttribute('onclick', '');\n  if(onclick in _internal.originalViewmodel.functions)\n  {\n    el.addEventListener('click', _internal.originalViewmodel.functions[onclick].bind(_internal));\n   }\n}\n```\nObviously people will want to handle any element event, so I need to expand handling to allow for that.\n\nMy chosen method is a little brittle. I assume an attribute that starts `on` is and event, and assign accordingly.\n\n``` javascript\nfor(let attr of el.attributes)\n{\n  if(attr.name.startsWith('on'))\n  {\n    let eventName = attr.name.substring(2);\n    let eventHandlerName = attr.value;\n    if(eventHandlerName in _internal.originalViewmodel.functions)\n    {\n      el.setAttribute(attr.name, '');\n      el.addEventListener(eventName, _internal.originalViewmodel.functions[eventHandlerName].bind(_internal));\n    }\n  }\n}\n```\nSo now this is possible:\n\n``` html\n<div id=\"app\">\n  <input type=\"text\" onkeyup=\"annoy\">\n</div>\n```\n``` javascript\nimport {rjsf} from '../rjsf.js'\n\n(function()\n{\n  const appElement = document.getElementById('app');\n\n  const app = new rjsf(appElement);\n\n  const viewmodel = \n        {\n          functions:\n          {\n            annoy: function(e)\n            {\n              e.preventDefault();\n              alert('this is annoying isn\\'t it?');\n            }\n          },\n        };\n\n  app.init(viewmodel);\n\n})();\n```\nWhich will alert a message every time there is a keyup event in the input box.\n\nNext time will be a longer article investigating how to make a for element.\n\nPlease let me know any thoughts or questions you have in the comments below.\n\n❤️, share, and follow for the next instalment!","user":{"name":"Matt Ellen","username":"mellen","twitter_username":null,"github_username":"Mellen","user_id":17923,"website_url":"https://www.matthewellen.co.uk","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--aoY1VRGX--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/17923/911fe024-62b5-4fd9-bb8c-6e7aa6008e67.jpeg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--cqp3vu_O--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/17923/911fe024-62b5-4fd9-bb8c-6e7aa6008e67.jpeg"}}