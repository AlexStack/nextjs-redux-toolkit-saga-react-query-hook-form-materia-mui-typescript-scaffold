{"type_of":"article","id":1246127,"title":"How to Implement Search Functionality in Your React Navbar","description":"Introduction   This article shows you how to implement the search functionality in the react...","readable_publish_date":"Nov 7","slug":"how-to-implement-search-functionality-in-your-react-navbar-67p","path":"/superflowsdev/how-to-implement-search-functionality-in-your-react-navbar-67p","url":"https://dev.to/superflowsdev/how-to-implement-search-functionality-in-your-react-navbar-67p","comments_count":0,"public_reactions_count":0,"collection_id":20389,"published_timestamp":"2022-11-07T05:13:06Z","positive_reactions_count":0,"cover_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--7DzUQRyD--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96545rpqlme9e4jmr5y6.png","social_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--lY93YglH--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96545rpqlme9e4jmr5y6.png","canonical_url":"https://blog.superflows.dev/how-to-implement-search-functionality-in-your-react-navbar","created_at":"2022-11-07T05:10:38Z","edited_at":null,"crossposted_at":null,"published_at":"2022-11-07T05:13:06Z","last_comment_at":"2022-11-07T05:13:06Z","reading_time_minutes":3,"tag_list":"webdev, tutorial, react, superflows","tags":["webdev","tutorial","react","superflows"],"body_html":"<h2>\n  <a name=\"introduction\" href=\"#introduction\">\n  </a>\n  Introduction\n</h2>\n\n<p>This article shows you how to implement the search functionality in the react navigation bar. It shows you how to configure the search input, listen to the user data entry callback and then how to style it.</p>\n\n<h2>\n  <a name=\"prerequisites\" href=\"#prerequisites\">\n  </a>\n  Prerequisites\n</h2>\n\n<p>This article assumes that you have read the previous navbar tutorials. In case you haven't you will find a consolidated list in the <a href=\"#heading-reference-links\">reference links</a> section. This article assumes that you have installed the Superflows library, have the default navigation bar up and running, have added your brand information and have also customised your menu. This tutorial takes it forward from there.</p>\n\n<h2>\n  <a name=\"step-1-show-hide-the-search-input\" href=\"#step-1-show-hide-the-search-input\">\n  </a>\n  Step 1 - Show / Hide the Search Input\n</h2>\n\n<p>To show the search input, set the showSearch prop to true, as shown:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>return (\n        &lt;div&gt;\n                &lt;SfNav showSearch={true}/&gt;\n        &lt;/div&gt;\n);\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>It renders as follows:</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--zLYoj7mj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sjafgjgxqru7mshjms5.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--zLYoj7mj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sjafgjgxqru7mshjms5.png\" alt=\"Image search visible\" loading=\"lazy\" width=\"880\" height=\"73\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--SNejM1T8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgyfzyzafh3a0yy3p8n7.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--SNejM1T8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgyfzyzafh3a0yy3p8n7.png\" alt=\"Image search visible mobile\" loading=\"lazy\" width=\"880\" height=\"153\"></a></p>\n\n<p>To hide the search input, set the showSearch prop to false, as shown:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>return (\n        &lt;div&gt;\n                &lt;SfNav showSearch={false} /&gt;\n        &lt;/div&gt;\n);\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>It renders as follows:</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--BcPAI_hV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zp070dw89z892yknno8r.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--BcPAI_hV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zp070dw89z892yknno8r.png\" alt=\"Image search hidden\" loading=\"lazy\" width=\"880\" height=\"71\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JItBlwNX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/swsuwsson6jd1hxnl9cn.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--JItBlwNX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/swsuwsson6jd1hxnl9cn.png\" alt=\"Image search hidden mobile\" loading=\"lazy\" width=\"880\" height=\"114\"></a></p>\n\n<h2>\n  <a name=\"step-2-set-the-search-input-caption\" href=\"#step-2-set-the-search-input-caption\">\n  </a>\n  Step 2 - Set the Search Input Caption\n</h2>\n\n<p>To change the search caption, set the searchCaption prop to the appropriate string value, as shown:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>return (\n        &lt;div&gt;\n                &lt;SfNav searchCaption=\"Find\" /&gt;\n        &lt;/div&gt;\n);\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>It renders as follows:</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--gLCUPEEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rr7qdnsti3vvuh53zgbz.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--gLCUPEEV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rr7qdnsti3vvuh53zgbz.png\" alt=\"Image search caption\" loading=\"lazy\" width=\"880\" height=\"81\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--OyZZmnEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jvnptw25i74r9joid9pm.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--OyZZmnEE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jvnptw25i74r9joid9pm.png\" alt=\"Image search caption mobile\" loading=\"lazy\" width=\"880\" height=\"158\"></a></p>\n\n<h2>\n  <a name=\"step-3-set-the-search-input-icon\" href=\"#step-3-set-the-search-input-icon\">\n  </a>\n  Step 3 - Set the Search Input Icon\n</h2>\n\n<p>You can also add an icon to the search input. Simply set the searchIcon prop to the icon object. The icon object can be taken from any library. In the example below, I have used the bootstrap icons library: </p>\n\n<p>To change the search caption, set the searchCaption prop to the appropriate string value, as shown:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>npm install react-bootstrap-icons\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>import {Search} from 'react-bootstrap-icons';\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>return (\n        &lt;div&gt;\n                &lt;SfNav searchIcon={&lt;Search /&gt;} /&gt;\n        &lt;/div&gt;\n);\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>It renders as follows:</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rZe4i-Mb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6gb33vrzeb4buj6a9cc6.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--rZe4i-Mb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6gb33vrzeb4buj6a9cc6.png\" alt=\"Image search icon\" loading=\"lazy\" width=\"880\" height=\"92\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--sg4TKe8F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6knppammn5eufbkxk7pi.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--sg4TKe8F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6knppammn5eufbkxk7pi.png\" alt=\"Image search icon mobile\" loading=\"lazy\" width=\"880\" height=\"156\"></a></p>\n\n<h2>\n  <a name=\"step-4-handle-the-callback\" href=\"#step-4-handle-the-callback\">\n  </a>\n  Step 4 - Handle the Callback\n</h2>\n\n<p>The navigation bar returns a callback if the user enters some text in the search input and presses enter. You can subscribe to this callback by subscribing to the onSearchPressed prop, as shown:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>return (\n        &lt;div&gt;\n              &lt;SfNav onSearchPressed={(value) =&gt; {alert(value)}}/&gt;\n        &lt;/div&gt;\n);\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h2>\n  <a name=\"step-5-styling\" href=\"#step-5-styling\">\n  </a>\n  Step 5 - Styling\n</h2>\n\n<p>You can then customise the look and feel, by using inline css or by class names. The Superflows navigation bar exposes props that facilitate customisation. An example is shown below:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>return (\n        &lt;div&gt;\n              &lt;SfNav \n                  stylesSearchContainer={{backgroundColor: 'black', color: 'white', border: 'solid 1px gray'}}\n                  stylesSearchInput={{backgroundColor: '#444', borderRadius: '10px', color: '#efefef', paddingTop: '5px', paddingBottom: '5px'}}\n              /&gt;\n        &lt;/div&gt;\n);\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>It renders as follows:</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--IiD-yBTk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8pnzwsofztz7hllflnes.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--IiD-yBTk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8pnzwsofztz7hllflnes.png\" alt=\"Image search style\" loading=\"lazy\" width=\"880\" height=\"80\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--0nCG7vgd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rj97pe79chst7zm1iue0.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--0nCG7vgd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rj97pe79chst7zm1iue0.png\" alt=\"Image style mobile\" loading=\"lazy\" width=\"880\" height=\"150\"></a></p>\n\n<h2>\n  <a name=\"reference-links\" href=\"#reference-links\">\n  </a>\n  Reference Links\n</h2>\n\n<h3>\n  <a name=\"documentation\" href=\"#documentation\">\n  </a>\n  Documentation\n</h3>\n\n<p><a href=\"https://superflows.dev/docs/building-blocks/nav\">This link</a></p>\n\n<h3>\n  <a name=\"code\" href=\"#code\">\n  </a>\n  Code\n</h3>\n\n<p><a href=\"https://stackblitz.com/edit/react-ts-4ld7az?file=App.tsx\">This link</a></p>\n\n<h3>\n  <a name=\"previous-tutorials-of-navbar\" href=\"#previous-tutorials-of-navbar\">\n  </a>\n  Previous Tutorials of Navbar\n</h3>\n\n<ul>\n<li><a href=\"https://dev.to/superflowsdev/how-to-get-started-with-a-navigation-bar-in-your-react-project-in-2-mins-3mo9\">T1: Getting Started With Navbar</a></li>\n<li><a href=\"https://dev.to/superflowsdev/how-to-customize-the-react-navbar-with-your-brand-info-337m\">T2: Insert Brand Info</a></li>\n<li><a href=\"https://dev.to/superflowsdev/how-to-customize-the-menu-of-your-react-navbar-11fd\">T3: Customise Menu</a></li>\n</ul>\n\n<h2>\n  <a name=\"video-tutorial\" href=\"#video-tutorial\">\n  </a>\n  Video Tutorial\n</h2>\n\n<p><iframe width=\"710\" height=\"399\" src=\"https://www.youtube.com/embed/2mnL8fSgS80\" allowfullscreen loading=\"lazy\">\n</iframe>\n</p>\n\n<h2>\n  <a name=\"further-reading\" href=\"#further-reading\">\n  </a>\n  Further Reading\n</h2>\n\n<p>You have already seen how to get started with the navigation bar, how to insert brand information into it, how to customise the menu and now, how to configure the search input. The next tutorial will show you how to use and customise the sign in button.</p>\n\n<h2>\n  <a name=\"conclusion\" href=\"#conclusion\">\n  </a>\n  Conclusion\n</h2>\n\n<p>This article shows you how to configure the search input. How to show / hide it, how to change the caption, how to add an icon, how to handle callback and how to customise and style it.</p>\n\n","body_markdown":"## Introduction\n\nThis article shows you how to implement the search functionality in the react navigation bar. It shows you how to configure the search input, listen to the user data entry callback and then how to style it.\n\n## Prerequisites\n\nThis article assumes that you have read the previous navbar tutorials. In case you haven't you will find a consolidated list in the [reference links](#heading-reference-links) section. This article assumes that you have installed the Superflows library, have the default navigation bar up and running, have added your brand information and have also customised your menu. This tutorial takes it forward from there.\n\n## Step 1 - Show / Hide the Search Input\n\nTo show the search input, set the showSearch prop to true, as shown:\n\n```\nreturn (\n        <div>\n                <SfNav showSearch={true}/>\n        </div>\n);\n```\n\nIt renders as follows:\n\n![Image search visible](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0sjafgjgxqru7mshjms5.png)\n\n![Image search visible mobile](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgyfzyzafh3a0yy3p8n7.png)\n\nTo hide the search input, set the showSearch prop to false, as shown:\n\n```\nreturn (\n        <div>\n                <SfNav showSearch={false} />\n        </div>\n);\n```\n\nIt renders as follows:\n\n![Image search hidden](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zp070dw89z892yknno8r.png)\n\n![Image search hidden mobile](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/swsuwsson6jd1hxnl9cn.png)\n\n## Step 2 - Set the Search Input Caption\n\nTo change the search caption, set the searchCaption prop to the appropriate string value, as shown:\n\n```\nreturn (\n        <div>\n                <SfNav searchCaption=\"Find\" />\n        </div>\n);\n```\n\nIt renders as follows:\n\n![Image search caption](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rr7qdnsti3vvuh53zgbz.png)\n\n![Image search caption mobile](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jvnptw25i74r9joid9pm.png)\n\n## Step 3 - Set the Search Input Icon\n\nYou can also add an icon to the search input. Simply set the searchIcon prop to the icon object. The icon object can be taken from any library. In the example below, I have used the bootstrap icons library: \n\nTo change the search caption, set the searchCaption prop to the appropriate string value, as shown:\n\n```\nnpm install react-bootstrap-icons\n```\n\n```\nimport {Search} from 'react-bootstrap-icons';\n```\n\n```\nreturn (\n        <div>\n                <SfNav searchIcon={<Search />} />\n        </div>\n);\n```\n\nIt renders as follows:\n\n![Image search icon](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6gb33vrzeb4buj6a9cc6.png)\n\n![Image search icon mobile](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6knppammn5eufbkxk7pi.png)\n\n## Step 4 - Handle the Callback\n\nThe navigation bar returns a callback if the user enters some text in the search input and presses enter. You can subscribe to this callback by subscribing to the onSearchPressed prop, as shown:\n\n```\nreturn (\n        <div>\n              <SfNav onSearchPressed={(value) => {alert(value)}}/>\n        </div>\n);\n```\n\n## Step 5 - Styling\n\nYou can then customise the look and feel, by using inline css or by class names. The Superflows navigation bar exposes props that facilitate customisation. An example is shown below:\n\n```\nreturn (\n        <div>\n              <SfNav \n                  stylesSearchContainer={{backgroundColor: 'black', color: 'white', border: 'solid 1px gray'}}\n                  stylesSearchInput={{backgroundColor: '#444', borderRadius: '10px', color: '#efefef', paddingTop: '5px', paddingBottom: '5px'}}\n              />\n        </div>\n);\n```\n\nIt renders as follows:\n\n![Image search style](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8pnzwsofztz7hllflnes.png)\n\n![Image style mobile](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rj97pe79chst7zm1iue0.png)\n\n## Reference Links\n\n### Documentation\n\n[This link](https://superflows.dev/docs/building-blocks/nav)\n\n### Code\n\n[This link](https://stackblitz.com/edit/react-ts-4ld7az?file=App.tsx)\n\n### Previous Tutorials of Navbar\n\n- [T1: Getting Started With Navbar](https://dev.to/superflowsdev/how-to-get-started-with-a-navigation-bar-in-your-react-project-in-2-mins-3mo9)\n- [T2: Insert Brand Info](https://dev.to/superflowsdev/how-to-customize-the-react-navbar-with-your-brand-info-337m)\n- [T3: Customise Menu](https://dev.to/superflowsdev/how-to-customize-the-menu-of-your-react-navbar-11fd)\n\n## Video Tutorial\n\n{% youtube 2mnL8fSgS80 %}\n\n## Further Reading\n\nYou have already seen how to get started with the navigation bar, how to insert brand information into it, how to customise the menu and now, how to configure the search input. The next tutorial will show you how to use and customise the sign in button.\n\n## Conclusion\n\nThis article shows you how to configure the search input. How to show / hide it, how to change the caption, how to add an icon, how to handle callback and how to customise and style it.","user":{"name":"Hrushi M","username":"superflowsdev","twitter_username":null,"github_username":"superflows-dev","user_id":963253,"website_url":"https://superflows.dev","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s---7bxXY6d--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/963253/e5165db6-1db6-4cd7-bca8-ca3d03803a2f.jpeg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--B5KQcIy5--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/963253/e5165db6-1db6-4cd7-bca8-ca3d03803a2f.jpeg"}}