{"type_of":"article","id":1245759,"title":"Understanding inbuilt AWS S3 security controls and methods - Part 3","description":"Also published on Medium     In part 2 of this article series, we mainly discussed the access control...","readable_publish_date":"Nov 6","slug":"understanding-inbuilt-aws-s3-security-controls-and-methods-part-3-13nc","path":"/aws-builders/understanding-inbuilt-aws-s3-security-controls-and-methods-part-3-13nc","url":"https://dev.to/aws-builders/understanding-inbuilt-aws-s3-security-controls-and-methods-part-3-13nc","comments_count":0,"public_reactions_count":2,"collection_id":null,"published_timestamp":"2022-11-06T18:01:15Z","positive_reactions_count":2,"cover_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--7DQajbCv--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25rjol1iciz2bsunrus9.png","social_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--5LQZkPpG--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/25rjol1iciz2bsunrus9.png","canonical_url":"https://dev.to/aws-builders/understanding-inbuilt-aws-s3-security-controls-and-methods-part-3-13nc","created_at":"2022-11-06T18:01:15Z","edited_at":"2022-11-06T18:08:08Z","crossposted_at":null,"published_at":"2022-11-06T18:01:15Z","last_comment_at":"2022-11-06T18:01:15Z","reading_time_minutes":4,"tag_list":"aws, s3, beginners, cloud","tags":["aws","s3","beginners","cloud"],"body_html":"<p><em>Also published on <a href=\"https://ravindunfernando.medium.com/understanding-inbuilt-aws-s3-security-controls-and-methods-part-3-124f3b9ce37e\">Medium</a></em></p>\n\n\n<hr>\n\n<p>In part 2 of this article series, we mainly discussed the access control policies that can be used to secure access to S3 buckets. In this article, we will focus on the access control methods which include both features and settings which S3 offers you to secure data in S3. These controls are crucial when you need to share your buckets among different applications and users or require public access to those.</p>\n\n<p>We are going to cover up following topics in this article,</p>\n\n<p>1 - S3 Access Points</p>\n\n<p>2 - Public Access management setting in S3</p>\n\n<p><strong>1 - S3 Access Points</strong></p>\n\n<p>S3 is heavily used for many use cases to store shared data sets. These data sets are being accessed by individuals, groups, and applications hence the S3 buckets which store these data sets should have shared access. The management of access to these shared buckets requires maintaining a bucket policy, IAM policy, or ACLs. These policies may include access controls to hundreds to thousands of different users, groups, and applications depending on the use case. But as the users and application sets grow, managing these individual policies will be difficult and time-consuming mainly due to their complexity. This will also make it difficult to audit the changes to the policies.</p>\n\n<p>AWS released the S3 Access Points feature within AWS S3 to mitigate the complexities discussed above. The service allows users to manage and control access to shared S3 buckets. The S3 access points can be attached to a single bucket and configured with separate access policies for that particular access point. This allows you the ability to create different access points with different permissions for teams and applications to your shared S3 bucket. </p>\n\n<p>You have to note the following points when using S3 Access Points,</p>\n\n<ul>\n<li><p>You can attach an access point only to a single bucket whereas a bucket can have multiple access points attached to itself.</p></li>\n<li><p>Access points allow only object operations like S3 GetObject and S3 PutObject etc… and not bucket-specific operations like S3 DeleteBucket.</p></li>\n<li><p>Access points can be configured to accept traffic from specific VPCs and also include the Block Public Access setting which is enabled by default.</p></li>\n<li>\n<p>The access point policies can be used to only allow access to objects with a defined prefix or to objects with specific tags. These policies are defined in JSON. However, these policies are valid if controls allowed within access point policies are also allowed in bucket policies. Hence if you are planning to use access point policies to manage access control for your shared bucket, it's better to use bucket policy to delegate access control of the bucket to the access point as shown below.<br>\n(Refer - <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points-policies.html\">https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points-policies.html</a>)<br>\n</p>\n<pre class=\"highlight json\"><code><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"Version\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"2012-10-17\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"Statement\"</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n    </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"nl\">\"Effect\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Allow\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nl\">\"Principal\"</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nl\">\"AWS\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"*\"</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"nl\">\"Action\"</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"*\"</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nl\">\"Resource\"</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"> </span><span class=\"s2\">\"Bucket ARN\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s2\">\"Bucket ARN/*\"</span><span class=\"p\">],</span><span class=\"w\">\n        </span><span class=\"nl\">\"Condition\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n            </span><span class=\"nl\">\"StringEquals\"</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"nl\">\"s3:DataAccessPointAccount\"</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Bucket owner's account ID\"</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n    </span><span class=\"p\">}]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre>\n\n</li>\n<li><p>When accessing the resources using access points, for S3 object operations, you can use the access point ARN in place of a bucket name. For requests requiring a bucket name in the standard S3 bucket name format, you can use an access point alias instead. Both of these details are available when you create an access point.</p></li>\n</ul>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wfNBXX14--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyblh744fftb7li05j6t.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wfNBXX14--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyblh744fftb7li05j6t.png\" alt=\"Sample S3 Access Point Configuration\" loading=\"lazy\" width=\"880\" height=\"279\"></a></p>\n\n<p>Read more about S3 Access Points by visiting → <a href=\"https://aws.amazon.com/s3/features/access-points/\">https://aws.amazon.com/s3/features/access-points/</a></p>\n\n<p><strong>2 - Public Access management setting in S3</strong></p>\n\n<p>Over the years we have seen many incidents where sensitive information residing within S3 buckets has been exposed. This was mainly due to unprotected settings on the S3 bucket level which allowed general public access to the data within the S3 bucket. The public access management feature is available within AWS S3 to mitigate these types of configuration issues. This setting can be accessed from the permissions tab within your buckets setting and it's enabled by default when you are creating a bucket. You will have to actively change this setting to allow public access to your bucket.</p>\n\n<p>As shown below, you can completely turn off this setting if you require public access to your bucket, or you can select a combination of options that can be used to filter public access to your S3 buckets.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--mY-drIot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmy6fir3ggar0plj1q8t.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--mY-drIot--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmy6fir3ggar0plj1q8t.png\" alt=\"Block public access setting in S3\" loading=\"lazy\" width=\"715\" height=\"702\"></a></p>\n\n<blockquote>\n<p>One thing to note here is that if you are to provide public access or cross-account access to the bucket using bucket policy or ACL, then access will still not be granted if the Block public access settings are enabled.</p>\n</blockquote>\n\n<p>Let’s deep dive into the Encryption mechanisms provided by AWS S3 in the upcoming article on this article series.</p>\n\n<p><strong>References</strong></p>\n\n<p>1 — <a href=\"https://aws.amazon.com/s3/features/access-points/\">https://aws.amazon.com/s3/features/access-points/</a></p>\n\n<p>2 — <a href=\"https://cloudacademy.com/course/increasing-your-security-posture-when-using-amazon-s3-1235\">https://cloudacademy.com/course/increasing-your-security-posture-when-using-amazon-s3-1235</a></p>\n\n","body_markdown":"_Also published on [Medium](https://ravindunfernando.medium.com/understanding-inbuilt-aws-s3-security-controls-and-methods-part-3-124f3b9ce37e)_\n\n\n---\n\n\nIn part 2 of this article series, we mainly discussed the access control policies that can be used to secure access to S3 buckets. In this article, we will focus on the access control methods which include both features and settings which S3 offers you to secure data in S3. These controls are crucial when you need to share your buckets among different applications and users or require public access to those.\n\n\n\nWe are going to cover up following topics in this article,\n\n\n\n1 - S3 Access Points\n\n2 - Public Access management setting in S3\n\n\n\n\n**1 - S3 Access Points**\n\n\n\nS3 is heavily used for many use cases to store shared data sets. These data sets are being accessed by individuals, groups, and applications hence the S3 buckets which store these data sets should have shared access. The management of access to these shared buckets requires maintaining a bucket policy, IAM policy, or ACLs. These policies may include access controls to hundreds to thousands of different users, groups, and applications depending on the use case. But as the users and application sets grow, managing these individual policies will be difficult and time-consuming mainly due to their complexity. This will also make it difficult to audit the changes to the policies.\n\n\n\nAWS released the S3 Access Points feature within AWS S3 to mitigate the complexities discussed above. The service allows users to manage and control access to shared S3 buckets. The S3 access points can be attached to a single bucket and configured with separate access policies for that particular access point. This allows you the ability to create different access points with different permissions for teams and applications to your shared S3 bucket. \n\n\nYou have to note the following points when using S3 Access Points,\n\n\n- You can attach an access point only to a single bucket whereas a bucket can have multiple access points attached to itself.\n\n- Access points allow only object operations like S3 GetObject and S3 PutObject etc… and not bucket-specific operations like S3 DeleteBucket.\n\n- Access points can be configured to accept traffic from specific VPCs and also include the Block Public Access setting which is enabled by default.\n\n- The access point policies can be used to only allow access to objects with a defined prefix or to objects with specific tags. These policies are defined in JSON. However, these policies are valid if controls allowed within access point policies are also allowed in bucket policies. Hence if you are planning to use access point policies to manage access control for your shared bucket, it's better to use bucket policy to delegate access control of the bucket to the access point as shown below.\n(Refer - [https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points-policies.html](https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-points-policies.html))\n    \n\n\n    ```json\n    {\n        \"Version\": \"2012-10-17\",\n        \"Statement\" : [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\" : { \"AWS\": \"*\" },\n            \"Action\" : \"*\",\n            \"Resource\" : [ \"Bucket ARN\", \"Bucket ARN/*\"],\n            \"Condition\": {\n                \"StringEquals\" : { \"s3:DataAccessPointAccount\" : \"Bucket owner's account ID\" }\n            }\n        }]\n    }\n    ```\n    \n\n\n- When accessing the resources using access points, for S3 object operations, you can use the access point ARN in place of a bucket name. For requests requiring a bucket name in the standard S3 bucket name format, you can use an access point alias instead. Both of these details are available when you create an access point.\n\n\n\n\n![Sample S3 Access Point Configuration](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eyblh744fftb7li05j6t.png)\n    \n\n\nRead more about S3 Access Points by visiting → [https://aws.amazon.com/s3/features/access-points/](https://aws.amazon.com/s3/features/access-points/)\n\n\n\n**2 - Public Access management setting in S3**\n\n\n\nOver the years we have seen many incidents where sensitive information residing within S3 buckets has been exposed. This was mainly due to unprotected settings on the S3 bucket level which allowed general public access to the data within the S3 bucket. The public access management feature is available within AWS S3 to mitigate these types of configuration issues. This setting can be accessed from the permissions tab within your buckets setting and it's enabled by default when you are creating a bucket. You will have to actively change this setting to allow public access to your bucket.\n\n\n\nAs shown below, you can completely turn off this setting if you require public access to your bucket, or you can select a combination of options that can be used to filter public access to your S3 buckets.\n\n\n\n![Block public access setting in S3](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmy6fir3ggar0plj1q8t.png)\n\n\n\n\n> One thing to note here is that if you are to provide public access or cross-account access to the bucket using bucket policy or ACL, then access will still not be granted if the Block public access settings are enabled.\n\n\n\n\nLet’s deep dive into the Encryption mechanisms provided by AWS S3 in the upcoming article on this article series.\n\n\n\n**References**\n\n\n1 — [https://aws.amazon.com/s3/features/access-points/](https://aws.amazon.com/s3/features/access-points/)\n\n2 — [https://cloudacademy.com/course/increasing-your-security-posture-when-using-amazon-s3-1235](https://cloudacademy.com/course/increasing-your-security-posture-when-using-amazon-s3-1235)","user":{"name":"Ravindu Nirmal Fernando","username":"ravindunf","twitter_username":"ravindunf","github_username":null,"user_id":828413,"website_url":"https://ravindunfernando.com","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--41WdxuGg--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/828413/fae54b33-fdf1-4137-a651-aa723ab543dc.jpg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--12jFCv5u--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/828413/fae54b33-fdf1-4137-a651-aa723ab543dc.jpg"},"organization":{"name":"AWS Community Builders ","username":"aws-builders","slug":"aws-builders","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--zmOZQNzv--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/2794/88da75b6-aadd-4ea1-8083-ae2dfca8be94.png","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--vWmcJ-ty--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/2794/88da75b6-aadd-4ea1-8083-ae2dfca8be94.png"}}