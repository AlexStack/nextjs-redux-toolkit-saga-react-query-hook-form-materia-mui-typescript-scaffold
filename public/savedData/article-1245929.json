{"type_of":"article","id":1245929,"title":"Смена темы сайта через CSS-переменные","description":"Всем привет. Меня зовут Петр Цой. Я нахожусь в поисках своей первой работы в качестве ReactJS...","readable_publish_date":"Nov 7","slug":"smiena-tiemy-saita-chieriez-css-pieriemiennyie-4f7","path":"/petrtcoi/smiena-tiemy-saita-chieriez-css-pieriemiennyie-4f7","url":"https://dev.to/petrtcoi/smiena-tiemy-saita-chieriez-css-pieriemiennyie-4f7","comments_count":0,"public_reactions_count":0,"collection_id":null,"published_timestamp":"2022-11-07T10:20:10Z","positive_reactions_count":0,"cover_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--mqfBc18e--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnwco5v1fbc5z770soma.png","social_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--vci5Lpnt--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnwco5v1fbc5z770soma.png","canonical_url":"https://dev.to/petrtcoi/smiena-tiemy-saita-chieriez-css-pieriemiennyie-4f7","created_at":"2022-11-06T22:14:50Z","edited_at":"2022-11-07T11:36:00Z","crossposted_at":null,"published_at":"2022-11-07T10:20:10Z","last_comment_at":"2022-11-07T10:20:10Z","reading_time_minutes":1,"tag_list":"css, react, nextjs","tags":["css","react","nextjs"],"body_html":"<p>Всем привет. Меня зовут Петр Цой. Я нахожусь в поисках своей первой работы в качестве ReactJS разработчика. Есть хороший опыт самостоятельной разработки коммерческих сайтов. В качестве примера и моего резюме выступает одноименный сайт <a href=\"https://petrtcoi.com\">petrtcoi.com</a>. Ссылка на <a href=\"https://github.com/petrtcoi/petrtcoi_portfolio\">GitHub</a>.</p>\n\n<p>Если вам нужен начинающий специалист, пишите!</p>\n\n<p><em>На сайте сейчас кот. В ближайшее время сделаю приличную фотографию и размещу ее.</em></p>\n\n<h2>\n  <a name=\"%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-css\" href=\"#%D0%BF%D0%BE%D1%87%D0%B5%D0%BC%D1%83-css\">\n  </a>\n  Почему CSS\n</h2>\n\n<p>Возможность переключать сайт между разными цветовыми схемами подразумевает возможность динамически менять стили большинства его компонентов. В минимальном варианте - это цвет текста и цвет заднего фона.</p>\n\n<p>Если округлить, то добиться этого можно двумя путями:</p>\n\n<ul>\n<li>через JavaScript, меняя свойства соответствующих переменных;</li>\n<li>через CSS, меняя значения CSS-переменных;</li>\n</ul>\n\n<p>Первый вариант требует перерисовки всех компонентов, связанных с новой темой. Это может негативно сказаться на производительности. К тому же, здесь потребуется дополнительная настройка проекта, так как свойства новой темы нужно передавать всем компонентам сайта.</p>\n\n<p>Второй вариант не имеет данного недостатка. Мы просто меняем значения CSS-переменных, отвечающих за отображение темы, и обновление сайта происходит в автоматическом режиме без перерисовки каких-либо компонентов. Этот способ не только быстрее, но и проще в реализации. </p>\n\n<p>На скриншоте ниже показан результат смены темы на моем сайте. Внизу можно заметить, что один компонент все же переписывался - это собственно сам Switcher, который меняет тему.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--FlaTLyyv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lw4dozh3lfpd3mea86wn.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--FlaTLyyv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lw4dozh3lfpd3mea86wn.png\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"470\"></a></p>\n\n<h2>\n  <a name=\"%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-%D1%82%D0%B5%D0%BC%D1%8B-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-css\" href=\"#%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-%D1%82%D0%B5%D0%BC%D1%8B-%D1%87%D0%B5%D1%80%D0%B5%D0%B7-css\">\n  </a>\n  Настройка темы через CSS\n</h2>\n\n<p>Для реализации данной возможности я вынес переменные, связанные с темой в отдельный файл.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight css\"><code><span class=\"c\">/* src/theme/theme.css */</span>\n<span class=\"nd\">:root</span> <span class=\"p\">{</span>\n  <span class=\"py\">--color-text-main</span><span class=\"p\">:</span> <span class=\"m\">#bab7b7</span><span class=\"p\">;</span>\n  <span class=\"py\">--background</span><span class=\"p\">:</span> <span class=\"m\">#1b1b1b</span><span class=\"p\">;</span>\n  <span class=\"py\">--change-theme-duration</span><span class=\"p\">:</span> <span class=\"m\">0.5s</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"o\">[</span><span class=\"nt\">data-theme</span><span class=\"o\">=</span><span class=\"s1\">\"light\"</span><span class=\"o\">]</span> <span class=\"p\">{</span>\n  <span class=\"py\">--color-text-main</span><span class=\"p\">:</span> <span class=\"m\">#1b1b1b</span><span class=\"p\">;</span>\n  <span class=\"py\">--background</span><span class=\"p\">:</span> <span class=\"no\">white</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Здесь заданы переменные для цвета текста и заднего фона. В базовом варианте - для темной темы, ниже - для светлой темы \"light\". </p>\n\n<p>Для красоты также добавлена характеристика <code>--change-theme-duration: 0.5s;</code>, чтобы цвета менялись не мгновенно, но с небольшой задержкой.</p>\n\n<p>Рядом, в этой же папке, разместим вспомогательный файл со списком возможных тем. У нас их две.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"c1\">// src/theme/theme.enum.ts</span>\n<span class=\"k\">export</span> <span class=\"kr\">enum</span> <span class=\"nx\">Theme</span> <span class=\"p\">{</span>\n    <span class=\"nx\">light</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">light</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n    <span class=\"nx\">dark</span> <span class=\"o\">=</span> <span class=\"dl\">'</span><span class=\"s1\">dark</span><span class=\"dl\">'</span>\n<span class=\"p\">}</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Далее CSS-переменные темы прописываются в файле с глобальными стилями.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight css\"><code><span class=\"c\">/* src/css/globals.css */</span>\n<span class=\"nt\">html</span><span class=\"o\">,</span>\n<span class=\"nt\">body</span> <span class=\"p\">{</span>\n  <span class=\"c\">/* другие стили  */</span>\n  <span class=\"nl\">color</span><span class=\"p\">:</span> <span class=\"n\">var</span><span class=\"p\">(</span><span class=\"n\">--color-text-main</span><span class=\"p\">);</span>\n  <span class=\"nl\">background-color</span><span class=\"p\">:</span> <span class=\"n\">var</span><span class=\"p\">(</span><span class=\"n\">--background</span><span class=\"p\">);</span>\n  <span class=\"nl\">transition</span><span class=\"p\">:</span> <span class=\"n\">background-color</span> <span class=\"n\">var</span><span class=\"p\">(</span><span class=\"n\">--change-theme-duration</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Готово!</p>\n\n<p>Все, что теперь требуется, так это повесить на наш компонент <code>&lt;ThemeSwitcher /&gt;</code> обработчик, который будет устанавливать на  корневой элемент  требуемый нам атрибут.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"c1\">// src/assets/ui-components/ThemeSwitcher/ThemeSwitcher.tsx</span>\n<span class=\"p\">....</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Theme</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">../../../theme/theme.enum</span><span class=\"dl\">'</span>\n<span class=\"p\">....</span>\n<span class=\"kd\">const</span> <span class=\"nx\">toggleTheme</span><span class=\"p\">:</span> <span class=\"nx\">React</span><span class=\"p\">.</span><span class=\"nx\">ChangeEventHandler</span><span class=\"o\">&lt;</span><span class=\"nx\">HTMLInputElement</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">event</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">theme</span> <span class=\"o\">=</span> <span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">target</span><span class=\"p\">.</span><span class=\"nx\">checked</span> <span class=\"p\">?</span> <span class=\"nx\">Theme</span><span class=\"p\">.</span><span class=\"nx\">dark</span> <span class=\"p\">:</span> <span class=\"nx\">Theme</span><span class=\"p\">.</span><span class=\"nx\">light</span>\n    <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">documentElement</span><span class=\"p\">.</span><span class=\"nx\">setAttribute</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">data-theme</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"nx\">theme</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span>\n<span class=\"p\">}</span>\n<span class=\"p\">....</span>\n\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Результат</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--E2mOwaQ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5csyf584b4tfys13dttl.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--E2mOwaQ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5csyf584b4tfys13dttl.gif\" alt=\"Image description\" loading=\"lazy\" width=\"640\" height=\"584\" data-animated=\"true\"></a></p>\n\n<h2>\n  <a name=\"%D0%BF%D0%BE%D0%B4%D0%B2%D0%BE%D0%B4%D0%BD%D1%8B%D0%B5-%D0%BA%D0%B0%D0%BC%D0%BD%D0%B8-%D1%87%D0%B0%D1%81%D1%82%D1%8C-1\" href=\"#%D0%BF%D0%BE%D0%B4%D0%B2%D0%BE%D0%B4%D0%BD%D1%8B%D0%B5-%D0%BA%D0%B0%D0%BC%D0%BD%D0%B8-%D1%87%D0%B0%D1%81%D1%82%D1%8C-1\">\n  </a>\n  Подводные камни. Часть 1.\n</h2>\n\n<p>Подобная реализация смены темы размывает зону ответственности. Получается, что часть логики приложения продолжает обрабатываться через JavaScript, а какая-то часть - уже через CSS. Возможно это создаст некоторые трудности при дальнейшем росте проекта. Тем более, если злоупотреблять данным приемом.</p>\n\n<p>С другой стороны, этот метод слишком эффективен, чтобы можно было им пренебречь. Думаю, достаточно будет выполнить следующего:</p>\n\n<ul>\n<li>Позже к проекту подключу Redux и подобные \"глобальные\" эффекты будут проводить через него. Все будет аккуратно лежать в одном месте и, по крайней мере, будет просто найти нужный участок кода.</li>\n<li>Подобные CSS-трюки постараюсь ограничить рамками отдельных элементов.</li>\n</ul>\n\n<h2>\n  <a name=\"%D0%BF%D0%BE%D0%B4%D0%B2%D0%BE%D0%B4%D0%BD%D1%8B%D0%B5-%D0%BA%D0%B0%D0%BC%D0%BD%D0%B8-%D1%87%D0%B0%D1%81%D1%82%D1%8C-2\" href=\"#%D0%BF%D0%BE%D0%B4%D0%B2%D0%BE%D0%B4%D0%BD%D1%8B%D0%B5-%D0%BA%D0%B0%D0%BC%D0%BD%D0%B8-%D1%87%D0%B0%D1%81%D1%82%D1%8C-2\">\n  </a>\n  Подводные камни. Часть 2.\n</h2>\n\n<p>Главное преимущество CSS-подхода привело и к сложности его тестирования. Так как стандартная библиотека для unit-тестов <code>@testing-library</code> попросту не \"видит\", какие именно параметры скрыты за названиями классов, то она и не в состоянии проверить, какой цвет установлен у элемента, находится ли он в зоне видимости и т.д.</p>\n\n<p>В итоге, для тестирования смены темы я использовал e2e тестирование с помощью <code>Playwright</code>. Это не так удобно, как быстрые unit-тесты, но работает.</p>\n\n<p>Подробнее про тестирование напишу в своей следующей записи.<br>\nСпасибо за внимание.</p>\n\n","body_markdown":"Всем привет. Меня зовут Петр Цой. Я нахожусь в поисках своей первой работы в качестве ReactJS разработчика. Есть хороший опыт самостоятельной разработки коммерческих сайтов. В качестве примера и моего резюме выступает одноименный сайт [petrtcoi.com](https://petrtcoi.com). Ссылка на [GitHub](https://github.com/petrtcoi/petrtcoi_portfolio).\n \nЕсли вам нужен начинающий специалист, пишите!\n\n_На сайте сейчас кот. В ближайшее время сделаю приличную фотографию и размещу ее._\n \n  \n## Почему CSS\nВозможность переключать сайт между разными цветовыми схемами подразумевает возможность динамически менять стили большинства его компонентов. В минимальном варианте - это цвет текста и цвет заднего фона.\n\nЕсли округлить, то добиться этого можно двумя путями:\n- через JavaScript, меняя свойства соответствующих переменных;\n- через CSS, меняя значения CSS-переменных;\n\nПервый вариант требует перерисовки всех компонентов, связанных с новой темой. Это может негативно сказаться на производительности. К тому же, здесь потребуется дополнительная настройка проекта, так как свойства новой темы нужно передавать всем компонентам сайта.\n\nВторой вариант не имеет данного недостатка. Мы просто меняем значения CSS-переменных, отвечающих за отображение темы, и обновление сайта происходит в автоматическом режиме без перерисовки каких-либо компонентов. Этот способ не только быстрее, но и проще в реализации. \n\nНа скриншоте ниже показан результат смены темы на моем сайте. Внизу можно заметить, что один компонент все же переписывался - это собственно сам Switcher, который меняет тему.\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lw4dozh3lfpd3mea86wn.png)\n \n \n## Настройка темы через CSS\nДля реализации данной возможности я вынес переменные, связанные с темой в отдельный файл.\n\n```css\n/* src/theme/theme.css */\n:root {\n  --color-text-main: #bab7b7;\n  --background: #1b1b1b;\n  --change-theme-duration: 0.5s;\n}\n\n[data-theme=\"light\"] {\n  --color-text-main: #1b1b1b;\n  --background: white;\n}\n\n```\nЗдесь заданы переменные для цвета текста и заднего фона. В базовом варианте - для темной темы, ниже - для светлой темы \"light\". \n\n\nДля красоты также добавлена характеристика `--change-theme-duration: 0.5s;`, чтобы цвета менялись не мгновенно, но с небольшой задержкой.\n\nРядом, в этой же папке, разместим вспомогательный файл со списком возможных тем. У нас их две.\n\n```typescript\n// src/theme/theme.enum.ts\nexport enum Theme {\n    light = 'light',\n    dark = 'dark'\n}\n```\n\nДалее CSS-переменные темы прописываются в файле с глобальными стилями.\n\n```css\n/* src/css/globals.css */\nhtml,\nbody {\n  /* другие стили  */\n  color: var(--color-text-main);\n  background-color: var(--background);\n  transition: background-color var(--change-theme-duration);\n}\n\n\n```\n\nГотово!\n \nВсе, что теперь требуется, так это повесить на наш компонент `<ThemeSwitcher />` обработчик, который будет устанавливать на  корневой элемент <html> требуемый нам атрибут.\n\n``` typescript\n// src/assets/ui-components/ThemeSwitcher/ThemeSwitcher.tsx\n....\nimport { Theme } from '../../../theme/theme.enum'\n....\nconst toggleTheme: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    const theme = event.target.checked ? Theme.dark : Theme.light\n    document.documentElement.setAttribute(\"data-theme\", theme)\n    return\n}\n....\n\n```\nРезультат\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5csyf584b4tfys13dttl.gif)\n\n \n \n## Подводные камни. Часть 1.\nПодобная реализация смены темы размывает зону ответственности. Получается, что часть логики приложения продолжает обрабатываться через JavaScript, а какая-то часть - уже через CSS. Возможно это создаст некоторые трудности при дальнейшем росте проекта. Тем более, если злоупотреблять данным приемом.\n \nС другой стороны, этот метод слишком эффективен, чтобы можно было им пренебречь. Думаю, достаточно будет выполнить следующего:\n- Позже к проекту подключу Redux и подобные \"глобальные\" эффекты будут проводить через него. Все будет аккуратно лежать в одном месте и, по крайней мере, будет просто найти нужный участок кода.\n- Подобные CSS-трюки постараюсь ограничить рамками отдельных элементов.\n\n## Подводные камни. Часть 2.\nГлавное преимущество CSS-подхода привело и к сложности его тестирования. Так как стандартная библиотека для unit-тестов `@testing-library` попросту не \"видит\", какие именно параметры скрыты за названиями классов, то она и не в состоянии проверить, какой цвет установлен у элемента, находится ли он в зоне видимости и т.д.\n \nВ итоге, для тестирования смены темы я использовал e2e тестирование с помощью `Playwright`. Это не так удобно, как быстрые unit-тесты, но работает.\n\nПодробнее про тестирование напишу в своей следующей записи.\nСпасибо за внимание.","user":{"name":"Petr Tcoi","username":"petrtcoi","twitter_username":"petrtcoi","github_username":null,"user_id":449519,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--EVgz_txU--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/449519/941726ce-4865-4f36-821e-03300a32526c.jpg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--fZV7lpVX--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/449519/941726ce-4865-4f36-821e-03300a32526c.jpg"}}