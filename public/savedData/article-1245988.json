{"type_of":"article","id":1245988,"title":"Object desctructuring","description":"Object Destructuring   Object desctructuring is similar with array desctruturing concept,...","readable_publish_date":"Nov 7","slug":"object-desctructuring-14dl","path":"/estotriramdani/object-desctructuring-14dl","url":"https://dev.to/estotriramdani/object-desctructuring-14dl","comments_count":0,"public_reactions_count":1,"collection_id":20284,"published_timestamp":"2022-11-07T01:38:57Z","positive_reactions_count":1,"cover_image":null,"social_image":"https://dev.to/social_previews/article/1245988.png","canonical_url":"https://dev.to/estotriramdani/object-desctructuring-14dl","created_at":"2022-11-07T01:38:57Z","edited_at":"2022-11-07T01:41:29Z","crossposted_at":null,"published_at":"2022-11-07T01:38:57Z","last_comment_at":"2022-11-07T01:38:57Z","reading_time_minutes":2,"tag_list":"javascript, react","tags":["javascript","react"],"body_html":"<h1>\n  <a name=\"object-destructuring\" href=\"#object-destructuring\">\n  </a>\n  Object Destructuring\n</h1>\n\n<p>Object desctructuring is similar with array desctruturing concept, but you can't named the object name as you wish. Instead, you can create <em>alias</em> for it.</p>\n\n<h2>\n  <a name=\"case-1-destruct-an-raw-object-endraw-stored-in-raw-variableconstant-endraw-\" href=\"#case-1-destruct-an-raw-object-endraw-stored-in-raw-variableconstant-endraw-\">\n  </a>\n  Case 1: Destruct an <code>Object</code> Stored in <code>Variable/Constant</code>\n</h2>\n\n<p>Let's say, we have <code>function</code> that returns an object of detail user that fetched from API.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"kd\">const</span> <span class=\"nx\">getUser</span> <span class=\"o\">=</span> <span class=\"k\">async</span> <span class=\"p\">(</span><span class=\"nx\">username</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">user</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"s2\">`/user/</span><span class=\"p\">${</span><span class=\"nx\">username</span><span class=\"p\">}</span><span class=\"s2\">`</span><span class=\"p\">);</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">userJson</span> <span class=\"o\">=</span> <span class=\"nx\">user</span><span class=\"p\">.</span><span class=\"nx\">json</span><span class=\"p\">();</span>\n    <span class=\"k\">return</span> <span class=\"nx\">userJson</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>We call that above <code>function</code> and store the returned object .<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"kd\">const</span> <span class=\"nx\">main</span> <span class=\"o\">=</span> <span class=\"k\">async</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">user</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">getUser</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">estotriramdani</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">user</span><span class=\"p\">.</span><span class=\"nx\">fullname</span><span class=\"p\">);</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">user</span><span class=\"p\">.</span><span class=\"nx\">nickname</span><span class=\"p\">);</span>\n<span class=\"p\">};</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Now, let's destruct that constant.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"kd\">const</span> <span class=\"nx\">main</span> <span class=\"o\">=</span> <span class=\"k\">async</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">fullname</span><span class=\"p\">,</span> <span class=\"nx\">nickname</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">getUser</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">estotriramdani</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">fullname</span><span class=\"p\">);</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">nickname</span><span class=\"p\">);</span>\n<span class=\"p\">};</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Make sure <code>fullname</code> and <code>nickname</code> are the same with the original object (before destructuring).<br>\nIf we destruct like this<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">name</span><span class=\"p\">,</span> <span class=\"nx\">nickname</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">getUser</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">estotriramdani</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p><code>name</code> will <code>undefined</code> since the returned object has no <code>name</code> property.<br>\nSo, if we want result like that (<code>name</code> property), we can give that property an alias by placed double colons <code>:</code> after <code>fullname</code> followed by alias name we want.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"na\">fullname</span><span class=\"p\">:</span> <span class=\"nx\">name</span><span class=\"p\">,</span> <span class=\"nx\">nickname</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">getUser</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">estotriramdani</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p><code>alias</code> is usefull when we get user with the same <code>function</code> (we only change the <code>username</code> params).<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"kd\">const</span> <span class=\"p\">{</span>\n    <span class=\"na\">fullname</span><span class=\"p\">:</span> <span class=\"nx\">fullnameUser1</span><span class=\"p\">,</span>\n    <span class=\"na\">nickname</span><span class=\"p\">:</span> <span class=\"nx\">nicknameUser1</span>\n<span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">getUser</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">estotriramdani</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"p\">{</span>\n    <span class=\"na\">fullname</span><span class=\"p\">:</span> <span class=\"nx\">fullnameUser2</span><span class=\"p\">,</span>\n    <span class=\"na\">nickname</span><span class=\"p\">:</span> <span class=\"nx\">nicknameUser2</span>\n<span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">getUser</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">john_doe</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Code above will avoid naming conflicts.</p>\n\n<h2>\n  <a name=\"case-2-destruct-raw-function-endraw-parameter\" href=\"#case-2-destruct-raw-function-endraw-parameter\">\n  </a>\n  Case 2: Destruct <code>Function</code> Parameter\n</h2>\n\n<p>This topic will extremely usefull in React. Because <code>props</code> (we will learn it later in React section) is an object.<br>\nWe have function that receive an object.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"kd\">const</span> <span class=\"nx\">createHouse</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">params</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">name</span><span class=\"p\">,</span> <span class=\"nx\">length</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">params</span><span class=\"p\">;</span>\n    <span class=\"c1\">// do other stuffs</span>\n<span class=\"p\">};</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Code above is work just fine, but we can simplify it again.<br>\nThe following code is equivalent with code that we've just wrote above.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"kd\">const</span> <span class=\"nx\">createHouse</span> <span class=\"o\">=</span> <span class=\"p\">({</span> <span class=\"nx\">name</span><span class=\"p\">,</span> <span class=\"nx\">length</span> <span class=\"p\">})</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// do others stuffs</span>\n<span class=\"p\">};</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>As we can see, we can destruct the object right in function params. By doing this way, we can eliminated a line.<br>\nCreate a <code>function</code>  with this kind of parameter also can be called as <code>named parameter</code>. We can put <code>name</code> or <code>length</code> anywhere.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight jsx\"><code><span class=\"nx\">createHouse</span><span class=\"p\">({</span> <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">Little House</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"na\">length</span><span class=\"p\">:</span> <span class=\"mi\">50</span> <span class=\"p\">});</span> <span class=\"c1\">// it is valid</span>\n<span class=\"nx\">createHouse</span><span class=\"p\">({</span> <span class=\"na\">length</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">,</span> <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">Little House</span><span class=\"dl\">'</span> <span class=\"p\">});</span> <span class=\"c1\">// it is also valid!</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>See you on the next post!</p>\n\n","body_markdown":"# Object Destructuring\n\nObject desctructuring is similar with array desctruturing concept, but you can't named the object name as you wish. Instead, you can create *alias* for it.\n\n## Case 1: Destruct an `Object` Stored in `Variable/Constant`\n\nLet's say, we have `function` that returns an object of detail user that fetched from API.\n\n```jsx\nconst getUser = async (username) => {\n\tconst user = await fetch(`/user/${username}`);\n\tconst userJson = user.json();\n\treturn userJson;\n};\n```\n\nWe call that above `function` and store the returned object .\n\n```jsx\nconst main = async () => {\n\tconst user = await getUser('estotriramdani');\n\tconsole.log(user.fullname);\n\tconsole.log(user.nickname);\n};\n```\n\nNow, let's destruct that constant.\n\n```jsx\nconst main = async () => {\n\tconst { fullname, nickname } = await getUser('estotriramdani');\n\tconsole.log(fullname);\n\tconsole.log(nickname);\n};\n```\n\nMake sure `fullname` and `nickname` are the same with the original object (before destructuring).\nIf we destruct like this\n\n```jsx\nconst { name, nickname } = await getUser('estotriramdani');\n```\n\n`name` will `undefined` since the returned object has no `name` property.\nSo, if we want result like that (`name` property), we can give that property an alias by placed double colons `:` after `fullname` followed by alias name we want.\n\n```jsx\nconst { fullname: name, nickname } = await getUser('estotriramdani');\n```\n\n`alias` is usefull when we get user with the same `function` (we only change the `username` params).\n\n```jsx\nconst {\n\tfullname: fullnameUser1,\n\tnickname: nicknameUser1\n} = await getUser('estotriramdani');\nconst {\n\tfullname: fullnameUser2,\n\tnickname: nicknameUser2\n} = await getUser('john_doe');\n```\n\nCode above will avoid naming conflicts.\n\n## Case 2: Destruct `Function` Parameter\n\nThis topic will extremely usefull in React. Because `props` (we will learn it later in React section) is an object.\nWe have function that receive an object.\n\n```jsx\nconst createHouse = (params) => {\n\tconst { name, length } = params;\n\t// do other stuffs\n};\n```\n\nCode above is work just fine, but we can simplify it again.\nThe following code is equivalent with code that we've just wrote above.\n\n```jsx\nconst createHouse = ({ name, length }) => {\n\t// do others stuffs\n};\n```\n\nAs we can see, we can destruct the object right in function params. By doing this way, we can eliminated a line.\nCreate a `function`  with this kind of parameter also can be called as `named parameter`. We can put `name` or `length` anywhere.\n\n```jsx\ncreateHouse({ name: 'Little House', length: 50 }); // it is valid\ncreateHouse({ length: 50, name: 'Little House' }); // it is also valid!\n```\n\nSee you on the next post!","user":{"name":"Esto Triramdani N","username":"estotriramdani","twitter_username":null,"github_username":"estotriramdani","user_id":602066,"website_url":"https://estotriramdani.github.io","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--XYetf8TH--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/602066/ad3662cb-b6bd-49fd-af76-369b378b89de.jpeg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--A6RLwjd3--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/602066/ad3662cb-b6bd-49fd-af76-369b378b89de.jpeg"}}