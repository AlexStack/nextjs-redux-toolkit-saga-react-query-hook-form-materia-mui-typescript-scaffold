{"type_of":"article","id":1161922,"title":"Next.Js 12 + MUI 5 (Material UI) New Tutorial","description":"Abstract   SSR Framework 에는 Next.js, Nuxt, Sveltekit 등 여러가지가 있지만 가장 대표적인 framework는 react기반의...","readable_publish_date":"Aug 8","slug":"nextjs-12-mui-5-material-ui-tutorial-hoh","path":"/soom/nextjs-12-mui-5-material-ui-tutorial-hoh","url":"https://dev.to/soom/nextjs-12-mui-5-material-ui-tutorial-hoh","comments_count":0,"public_reactions_count":5,"collection_id":null,"published_timestamp":"2022-08-08T08:29:00Z","positive_reactions_count":5,"cover_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--WKSkLuMQ--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9osgkbhrf8rs2klhh6ii.png","social_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--xdIHC1ZB--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9osgkbhrf8rs2klhh6ii.png","canonical_url":"https://dev.to/soom/nextjs-12-mui-5-material-ui-tutorial-hoh","created_at":"2022-08-08T08:29:07Z","edited_at":"2022-08-10T12:38:33Z","crossposted_at":null,"published_at":"2022-08-08T08:29:00Z","last_comment_at":"2022-08-08T08:29:33Z","reading_time_minutes":3,"tag_list":"nextjs, mui, nextjs12, mui5","tags":["nextjs","mui","nextjs12","mui5"],"body_html":"<h2>\n  <a name=\"abstract\" href=\"#abstract\">\n  </a>\n  Abstract\n</h2>\n\n<p><code>SSR</code> Framework 에는 <code>Next.js</code>, <code>Nuxt</code>, <code>Sveltekit</code> 등 여러가지가 있지만 가장 대표적인 framework는 <code>react</code>기반의 <code>Next.js</code>일 것이다. <br>\n본 포스팅에서는 <code>Next.js</code>에 best react component library 중 하나인 <code>MUI</code>를 적용하는 가장 최신 방법을 소개하고자 한다. </p>\n\n<p>기존의 <code>@mui/styles</code> 패키지를 통해 적용하는 방법은 <code>react 18</code>의 호환성 문제로 deprecated 되었으며 관련 내용은 하기 링크를 참조</p>\n\n<p>The legacy styling solution of MUI: <a href=\"https://mui.com/system/styles/basics/\">https://mui.com/system/styles/basics/</a></p>\n\n<hr>\n<h2>\n  <a name=\"getting-started\" href=\"#getting-started\">\n  </a>\n  Getting Started\n</h2>\n\n<p>원하는 프로젝트 폴더에 <code>Next.js TypeScript</code> 프로젝트를 생성</p>\n<h6>\n  <a name=\"terminal\" href=\"#terminal\">\n  </a>\n  Terminal\n</h6>\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code>pnpm create next-app <span class=\"nb\">.</span> <span class=\"nt\">--typescript</span>  \n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<p><code>MUI</code> 관련 패키지 설치 </p>\n<h6>\n  <a name=\"terminal\" href=\"#terminal\">\n  </a>\n  Terminal\n</h6>\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code>pnpm add <span class=\"nt\">-S</span> @emotion/cache @emotion/react @emotion/server @emotion/styled @mui/icons-material @mui/material\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n\n<p><code>createEmotionCache</code> 함수 모듈인 <code>emotionCache.ts</code> 를 <code>lib</code> 폴더에 생성</p>\n<h4>\n  <a name=\"note\" href=\"#note\">\n  </a>\n  Note\n</h4>\n\n<ul>\n<li>클라이언트에서 <code>&lt;head/&gt;</code> 의 가장 최상단에 <code>&lt;meta&gt;</code> 태그를 생성하고 이를 <code>insertionPoint</code>로 지정한다.</li>\n<li>이는 페이지 로딩시 MUI style 을 가장 먼저 로딩하는것을 보장</li>\n<li>이렇게 먼저 로딩될 경우 다른 Style solution들 보다 높은 우선순위를 가지게 되어 <code>MUI</code>로 개발하는데 이점을 가지게 된다.</li>\n</ul>\n<h6>\n  <a name=\"libemotioncachets\" href=\"#libemotioncachets\">\n  </a>\n  lib/emotionCache.ts\n</h6>\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"k\">import</span> <span class=\"nx\">createCache</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@emotion/cache</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">isBrowser</span> <span class=\"o\">=</span> <span class=\"k\">typeof</span> <span class=\"nb\">document</span> <span class=\"o\">!==</span> <span class=\"dl\">'</span><span class=\"s1\">undefined</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">createEmotionCache</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">insertionPoint</span><span class=\"p\">;</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">isBrowser</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"kd\">const</span> <span class=\"nx\">emotionInsertionPoint</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">querySelector</span><span class=\"p\">(</span>\n            <span class=\"dl\">'</span><span class=\"s1\">meta[name=\"emotion-insertion-point\"]</span><span class=\"dl\">'</span>\n        <span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"nx\">HTMLElement</span><span class=\"p\">;</span>\n        <span class=\"nx\">insertionPoint</span> <span class=\"o\">=</span> <span class=\"nx\">emotionInsertionPoint</span> <span class=\"o\">??</span> <span class=\"kc\">undefined</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">return</span> <span class=\"nx\">createCache</span><span class=\"p\">({</span> <span class=\"na\">key</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">mui-style</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">insertionPoint</span> <span class=\"p\">});</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">createEmotionCache</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n\n<p><code>lib</code> 폴더에 <code>theme.ts</code> 도 생성</p>\n<h4>\n  <a name=\"note\" href=\"#note\">\n  </a>\n  Note\n</h4>\n\n<ul>\n<li>나중에 global style을 적용하기 위해 theme.ts 생성</li>\n</ul>\n<h6>\n  <a name=\"libthemets\" href=\"#libthemets\">\n  </a>\n  lib/theme.ts\n</h6>\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">createTheme</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@mui/material/styles</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">indigo</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@mui/material/colors</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">theme</span> <span class=\"o\">=</span> <span class=\"nx\">createTheme</span><span class=\"p\">({</span>\n    <span class=\"na\">palette</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"na\">primary</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"na\">main</span><span class=\"p\">:</span> <span class=\"nx\">indigo</span><span class=\"p\">.</span><span class=\"nx\">A400</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">});</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">theme</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n\n<p><code>_app.tsx</code> 파일을 다음과 같이 수정</p>\n<h6>\n  <a name=\"pagesapptsx\" href=\"#pagesapptsx\">\n  </a>\n  pages/_app.tsx\n</h6>\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight tsx\"><code><span class=\"k\">import</span> <span class=\"o\">*</span> <span class=\"k\">as</span> <span class=\"nx\">React</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">react</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">Head</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">next/head</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">ThemeProvider</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@mui/material/styles</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">CacheProvider</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@emotion/react</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">CssBaseline</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@mui/material/CssBaseline</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"k\">import</span> <span class=\"nx\">theme</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">../lib/theme</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">createEmotionCache</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">../lib/emotionCache</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"k\">import</span> <span class=\"kd\">type</span> <span class=\"p\">{</span> <span class=\"nx\">NextPage</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">next</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"kd\">type</span> <span class=\"p\">{</span> <span class=\"nx\">AppProps</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">next/app</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"kd\">type</span> <span class=\"p\">{</span> <span class=\"nx\">EmotionCache</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@emotion/react</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"kd\">type</span> <span class=\"nx\">AppPropsWithCache</span> <span class=\"o\">=</span> <span class=\"nx\">AppProps</span> <span class=\"o\">&amp;</span> <span class=\"p\">{</span>\n    <span class=\"na\">Component</span><span class=\"p\">:</span> <span class=\"nx\">NextPage</span><span class=\"p\">;</span>\n    <span class=\"nl\">emotionCache</span><span class=\"p\">?:</span> <span class=\"nx\">EmotionCache</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">clientSideEmotionCache</span> <span class=\"o\">=</span> <span class=\"nx\">createEmotionCache</span><span class=\"p\">();</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">MyApp</span> <span class=\"o\">=</span> <span class=\"p\">({</span>\n    <span class=\"nx\">Component</span><span class=\"p\">,</span>\n    <span class=\"nx\">emotionCache</span> <span class=\"o\">=</span> <span class=\"nx\">clientSideEmotionCache</span><span class=\"p\">,</span>\n    <span class=\"nx\">pageProps</span><span class=\"p\">,</span>\n<span class=\"p\">}:</span> <span class=\"nx\">AppPropsWithCache</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n        <span class=\"p\">&lt;</span><span class=\"nc\">CacheProvider</span> <span class=\"na\">value</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">emotionCache</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nc\">Head</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">name</span><span class=\"p\">=</span><span class=\"s\">'viewport'</span> <span class=\"na\">content</span><span class=\"p\">=</span><span class=\"s\">'initial-scale=1, width=device-width'</span> <span class=\"p\">/&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nc\">Head</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nc\">ThemeProvider</span> <span class=\"na\">theme</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">theme</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">CssBaseline</span> <span class=\"p\">/&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">Component</span> <span class=\"si\">{</span><span class=\"p\">...</span><span class=\"nx\">pageProps</span><span class=\"si\">}</span> <span class=\"p\">/&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nc\">ThemeProvider</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nc\">CacheProvider</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">);</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">MyApp</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<hr>\n\n<p><code>_document.tsx</code> 파일을 생성한 뒤 다음과 같이 작성</p>\n<h4>\n  <a name=\"note\" href=\"#note\">\n  </a>\n  Note\n</h4>\n\n<ul>\n<li>\n<code>_Document.getInitialProps</code>는 <code>_app</code>이 아닌 <code>_document</code>에 상속되며 static 으로 생성됨\n</li>\n</ul>\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight tsx\"><code><span class=\"nx\">_Document</span><span class=\"p\">.</span><span class=\"nx\">getInitialProps</span> <span class=\"o\">=</span> <span class=\"k\">async</span> <span class=\"p\">(</span><span class=\"nx\">ctx</span><span class=\"p\">:</span> <span class=\"nx\">DocumentContext</span><span class=\"p\">):</span> <span class=\"nb\">Promise</span><span class=\"o\">&lt;</span><span class=\"nx\">DocumentInitialProps</span><span class=\"o\">&gt;</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{...}</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<ul>\n<li>cache를 새로 생성하기보단 동일한 Emotion cache를 SSR Request에 사용한다면 퍼포먼스를 개선하는 효과를 얻을 수 있다. (하지만 global side effect가 발생할 수 있는 단점이 있다는 것도 인지해야한다.)</li>\n<li>여기서는 SSR Request 마다 cache를 생성하기로 한다.\n</li>\n</ul>\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight tsx\"><code><span class=\"kd\">const</span> <span class=\"nx\">cache</span> <span class=\"o\">=</span> <span class=\"nx\">createEmotionCache</span><span class=\"p\">();</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<ul>\n<li>\n<code>styles fragment</code>는 <code>app</code> 과 <code>page</code>의 렌더링이 끝난뒤에 렌더링된다.\n</li>\n</ul>\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight tsx\"><code><span class=\"nx\">styles</span><span class=\"p\">:</span> <span class=\"p\">[...</span><span class=\"nx\">React</span><span class=\"p\">.</span><span class=\"nx\">Children</span><span class=\"p\">.</span><span class=\"nx\">toArray</span><span class=\"p\">(</span><span class=\"nx\">initialProps</span><span class=\"p\">.</span><span class=\"nx\">styles</span><span class=\"p\">),</span> <span class=\"p\">...</span><span class=\"nx\">emotionStyleTags</span><span class=\"p\">],</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<ul>\n<li>잘못된 HTML 생성 방지를 위해 다음 구문은 중요.</li>\n</ul>\n\n<p>참고링크: <a href=\"https://github.com/mui/material-ui/issues/26561#issuecomment-855286153\">https://github.com/mui/material-ui/issues/26561#issuecomment-855286153</a><br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight tsx\"><code><span class=\"kd\">const</span> <span class=\"nx\">emotionStyles</span> <span class=\"o\">=</span> <span class=\"nx\">extractCriticalToChunks</span><span class=\"p\">(</span><span class=\"nx\">initialProps</span><span class=\"p\">.</span><span class=\"nx\">html</span><span class=\"p\">);</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h4>\n  <a name=\"%EC%83%9D%EC%84%B1-%EC%88%9C%EC%84%9C\" href=\"#%EC%83%9D%EC%84%B1-%EC%88%9C%EC%84%9C\">\n  </a>\n  생성 순서\n</h4>\n\n<h5>\n  <a name=\"%EC%84%9C%EB%B2%84\" href=\"#%EC%84%9C%EB%B2%84\">\n  </a>\n  서버\n</h5>\n\n<ol>\n<li>app.getInitialProps</li>\n<li>page.getInitialProps</li>\n<li>document.getInitialProps</li>\n<li>app.render</li>\n<li>page.render</li>\n<li>document.render</li>\n</ol>\n\n<h5>\n  <a name=\"%EC%84%9C%EB%B2%84%EC%97%90%EB%9F%AC\" href=\"#%EC%84%9C%EB%B2%84%EC%97%90%EB%9F%AC\">\n  </a>\n  서버에러\n</h5>\n\n<ol>\n<li>document.getInitialProps</li>\n<li>app.render</li>\n<li>page.render</li>\n<li>document.render</li>\n</ol>\n\n<h5>\n  <a name=\"%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8\" href=\"#%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8\">\n  </a>\n  클라이언트\n</h5>\n\n<ol>\n<li>app.getInitialProps</li>\n<li>page.getInitialProps</li>\n<li>app.render</li>\n<li>page.render</li>\n</ol>\n\n<h6>\n  <a name=\"pagesdocumenttsx\" href=\"#pagesdocumenttsx\">\n  </a>\n  pages/_document.tsx\n</h6>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight tsx\"><code><span class=\"k\">import</span> <span class=\"o\">*</span> <span class=\"k\">as</span> <span class=\"nx\">React</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">react</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">Document</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">Html</span><span class=\"p\">,</span> <span class=\"nx\">Head</span><span class=\"p\">,</span> <span class=\"nx\">Main</span><span class=\"p\">,</span> <span class=\"nx\">NextScript</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">next/document</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">createEmotionServer</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@emotion/server/create-instance</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">theme</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">../lib/theme</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">createEmotionCache</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">../lib/emotionCache</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"k\">import</span> <span class=\"kd\">type</span> <span class=\"p\">{</span> <span class=\"nx\">DocumentContext</span><span class=\"p\">,</span> <span class=\"nx\">DocumentInitialProps</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">next/document</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"kd\">class</span> <span class=\"nx\">_Document</span> <span class=\"kd\">extends</span> <span class=\"nx\">Document</span> <span class=\"p\">{</span>\n    <span class=\"nx\">render</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"p\">(</span>\n            <span class=\"p\">&lt;</span><span class=\"nc\">Html</span> <span class=\"na\">lang</span><span class=\"p\">=</span><span class=\"s\">'ko'</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nc\">Head</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">name</span><span class=\"p\">=</span><span class=\"s\">'theme-color'</span> <span class=\"na\">content</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">theme</span><span class=\"p\">.</span><span class=\"nx\">palette</span><span class=\"p\">.</span><span class=\"nx\">primary</span><span class=\"p\">.</span><span class=\"nx\">main</span><span class=\"si\">}</span> <span class=\"p\">/&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nt\">link</span> <span class=\"na\">rel</span><span class=\"p\">=</span><span class=\"s\">'shortcut icon'</span> <span class=\"na\">href</span><span class=\"p\">=</span><span class=\"s\">'/static/favicon.ico'</span> <span class=\"p\">/&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nt\">link</span>\n                        <span class=\"na\">rel</span><span class=\"p\">=</span><span class=\"s\">'stylesheet'</span>\n                        <span class=\"na\">href</span><span class=\"p\">=</span><span class=\"s\">'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&amp;display=swap'</span>\n                    <span class=\"p\">/&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">name</span><span class=\"p\">=</span><span class=\"s\">'emotion-insertion-point'</span> <span class=\"na\">content</span><span class=\"p\">=</span><span class=\"s\">''</span> <span class=\"p\">/&gt;</span>\n                    <span class=\"si\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">styles</span><span class=\"si\">}</span>\n                <span class=\"p\">&lt;/</span><span class=\"nc\">Head</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">Main</span> <span class=\"p\">/&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">NextScript</span> <span class=\"p\">/&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nc\">Html</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">_Document</span><span class=\"p\">.</span><span class=\"nx\">getInitialProps</span> <span class=\"o\">=</span> <span class=\"k\">async</span> <span class=\"p\">(</span><span class=\"nx\">ctx</span><span class=\"p\">:</span> <span class=\"nx\">DocumentContext</span><span class=\"p\">):</span> <span class=\"nb\">Promise</span><span class=\"o\">&lt;</span><span class=\"nx\">DocumentInitialProps</span><span class=\"o\">&gt;</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">originalRenderPage</span> <span class=\"o\">=</span> <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">renderPage</span><span class=\"p\">;</span>\n\n    <span class=\"kd\">const</span> <span class=\"nx\">cache</span> <span class=\"o\">=</span> <span class=\"nx\">createEmotionCache</span><span class=\"p\">();</span>\n    <span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">extractCriticalToChunks</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">createEmotionServer</span><span class=\"p\">(</span><span class=\"nx\">cache</span><span class=\"p\">);</span>\n\n    <span class=\"nx\">ctx</span><span class=\"p\">.</span><span class=\"nx\">renderPage</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span>\n        <span class=\"nx\">originalRenderPage</span><span class=\"p\">({</span>\n            <span class=\"na\">enhanceApp</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nx\">App</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span>\n                <span class=\"kd\">function</span> <span class=\"nx\">EnhanceApp</span><span class=\"p\">(</span><span class=\"nx\">props</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                    <span class=\"k\">return</span> <span class=\"p\">&lt;</span><span class=\"nc\">App</span> <span class=\"na\">emotionCache</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">cache</span><span class=\"si\">}</span> <span class=\"si\">{</span><span class=\"p\">...</span><span class=\"nx\">props</span><span class=\"si\">}</span> <span class=\"p\">/&gt;;</span>\n                <span class=\"p\">},</span>\n        <span class=\"p\">});</span>\n\n    <span class=\"kd\">const</span> <span class=\"nx\">initialProps</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"nx\">Document</span><span class=\"p\">.</span><span class=\"nx\">getInitialProps</span><span class=\"p\">(</span><span class=\"nx\">ctx</span><span class=\"p\">);</span>\n\n    <span class=\"kd\">const</span> <span class=\"nx\">emotionStyles</span> <span class=\"o\">=</span> <span class=\"nx\">extractCriticalToChunks</span><span class=\"p\">(</span><span class=\"nx\">initialProps</span><span class=\"p\">.</span><span class=\"nx\">html</span><span class=\"p\">);</span>\n    <span class=\"kd\">const</span> <span class=\"nx\">emotionStyleTags</span> <span class=\"o\">=</span> <span class=\"nx\">emotionStyles</span><span class=\"p\">.</span><span class=\"nx\">styles</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">((</span><span class=\"nx\">style</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">(</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">style</span>\n            <span class=\"na\">data-emotion</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"s2\">`</span><span class=\"p\">${</span><span class=\"nx\">style</span><span class=\"p\">.</span><span class=\"nx\">key</span><span class=\"p\">}</span><span class=\"s2\"> </span><span class=\"p\">${</span><span class=\"nx\">style</span><span class=\"p\">.</span><span class=\"nx\">ids</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\"> </span><span class=\"dl\">'</span><span class=\"p\">)}</span><span class=\"s2\">`</span><span class=\"si\">}</span>\n            <span class=\"na\">key</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"nx\">style</span><span class=\"p\">.</span><span class=\"nx\">key</span><span class=\"si\">}</span>\n            <span class=\"c1\">// eslint-disable-next-line react/no-danger</span>\n            <span class=\"na\">dangerouslySetInnerHTML</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">{</span> <span class=\"na\">__html</span><span class=\"p\">:</span> <span class=\"nx\">style</span><span class=\"p\">.</span><span class=\"nx\">css</span> <span class=\"p\">}</span><span class=\"si\">}</span>\n        <span class=\"p\">/&gt;</span>\n    <span class=\"p\">));</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">{</span>\n        <span class=\"p\">...</span><span class=\"nx\">initialProps</span><span class=\"p\">,</span>\n        <span class=\"na\">styles</span><span class=\"p\">:</span> <span class=\"p\">[...</span><span class=\"nx\">React</span><span class=\"p\">.</span><span class=\"nx\">Children</span><span class=\"p\">.</span><span class=\"nx\">toArray</span><span class=\"p\">(</span><span class=\"nx\">initialProps</span><span class=\"p\">.</span><span class=\"nx\">styles</span><span class=\"p\">),</span> <span class=\"p\">...</span><span class=\"nx\">emotionStyleTags</span><span class=\"p\">],</span>\n    <span class=\"p\">};</span>\n<span class=\"p\">};</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n\n<hr>\n\n<p><code>index.tsx</code> 를 다음과 같이 작성</p>\n\n<h6>\n  <a name=\"pagesindextsx\" href=\"#pagesindextsx\">\n  </a>\n  pages/index.tsx\n</h6>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight tsx\"><code><span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">Button</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@mui/material</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"k\">import</span> <span class=\"kd\">type</span> <span class=\"p\">{</span> <span class=\"nx\">NextPage</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">next</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">Home</span><span class=\"p\">:</span> <span class=\"nx\">NextPage</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"p\">(</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">main</span>\n            <span class=\"na\">style</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"p\">{</span>\n                <span class=\"na\">width</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">100vw</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n                <span class=\"na\">height</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">100vh</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n                <span class=\"na\">display</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">flex</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n                <span class=\"na\">justifyContent</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">center</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n                <span class=\"na\">alignItems</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">center</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span><span class=\"si\">}</span>\n        <span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nt\">header</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>MUI5 + Next.js 12<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nt\">header</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;</span><span class=\"nt\">section</span><span class=\"p\">&gt;</span>\n                    <span class=\"p\">&lt;</span><span class=\"nc\">Button</span> <span class=\"na\">variant</span><span class=\"p\">=</span><span class=\"si\">{</span><span class=\"dl\">'</span><span class=\"s1\">contained</span><span class=\"dl\">'</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>Hello MUI<span class=\"p\">&lt;/</span><span class=\"nc\">Button</span><span class=\"p\">&gt;</span>\n                <span class=\"p\">&lt;/</span><span class=\"nt\">section</span><span class=\"p\">&gt;</span>\n            <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">main</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">);</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">Home</span><span class=\"p\">;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h6>\n  <a name=\"preview\" href=\"#preview\">\n  </a>\n  preview\n</h6>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--psLpcHTW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zti8h7trujgps8mwin0b.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--psLpcHTW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zti8h7trujgps8mwin0b.png\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"552\"></a></p>\n\n\n<hr>\n\n<p>➕ Stackblitz Sample</p>\n\n<p><iframe src=\"https://stackblitz.com/edit/nextjs12-mui5-boilerplate?embed=1&amp;file=pages/_app.tsx\" width=\"100%\" height=\"500\" scrolling=\"no\" frameborder=\"no\" allowfullscreen allowtransparency=\"true\" loading=\"lazy\">\n</iframe>\n</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"conclusion\" href=\"#conclusion\">\n  </a>\n  Conclusion\n</h2>\n\n<p>본 포스팅에서는 <code>MUI 5</code>를 <code>Next.Js 12</code>에 적용하는 최신 방법을 소개하였다. (2022년 8월 기준)<br>\n<code>react 18</code> 이 등장하면서 기존 방법보다 고려해야할 부분이 늘어난건 사실이나 여전히 reference가 많은 조합을 선호하는 트렌트 안에서는 Best 라고 할수있는 SSR Framework + UI Library 조합인 <code>Next.Js</code>+ <code>MUI</code>는 꾸준히 이용될 것이다.</p>\n\n<p>이외에도 추천하는 React UI Framework 중 하나인 Mantine을 소개하면서 글을 마무리 짓고자 한다.<br>\nMantine: <a href=\"https://mantine.dev/\">https://mantine.dev/</a></p>\n\n","body_markdown":"##Abstract\n\n`SSR` Framework 에는 `Next.js`, `Nuxt`, `Sveltekit` 등 여러가지가 있지만 가장 대표적인 framework는 `react`기반의 `Next.js`일 것이다. \n본 포스팅에서는 `Next.js`에 best react component library 중 하나인 `MUI`를 적용하는 가장 최신 방법을 소개하고자 한다. \n\n기존의 `@mui/styles` 패키지를 통해 적용하는 방법은 `react 18`의 호환성 문제로 deprecated 되었으며 관련 내용은 하기 링크를 참조\n\nThe legacy styling solution of MUI: https://mui.com/system/styles/basics/\n\n---\n\n##Getting Started\n\n\n원하는 프로젝트 폴더에 `Next.js TypeScript` 프로젝트를 생성\n\n###### Terminal\n```sh\npnpm create next-app . --typescript  \n```\n\n\n\n`MUI` 관련 패키지 설치 \n\n###### Terminal\n```sh\npnpm add -S @emotion/cache @emotion/react @emotion/server @emotion/styled @mui/icons-material @mui/material\n```\n\n---\n\n\n`createEmotionCache` 함수 모듈인 `emotionCache.ts` 를 `lib` 폴더에 생성\n\n#### Note\n- 클라이언트에서 `<head/>` 의 가장 최상단에 `<meta>` 태그를 생성하고 이를 `insertionPoint`로 지정한다.\n- 이는 페이지 로딩시 MUI style 을 가장 먼저 로딩하는것을 보장\n- 이렇게 먼저 로딩될 경우 다른 Style solution들 보다 높은 우선순위를 가지게 되어 `MUI`로 개발하는데 이점을 가지게 된다.\n\n###### lib/emotionCache.ts\n\n```ts\nimport createCache from '@emotion/cache';\n\nconst isBrowser = typeof document !== 'undefined';\n\nconst createEmotionCache = () => {\n\tlet insertionPoint;\n\n\tif (isBrowser) {\n\t\tconst emotionInsertionPoint = document.querySelector(\n\t\t\t'meta[name=\"emotion-insertion-point\"]'\n\t\t) as HTMLElement;\n\t\tinsertionPoint = emotionInsertionPoint ?? undefined;\n\t}\n\n\treturn createCache({ key: 'mui-style', insertionPoint });\n};\n\nexport default createEmotionCache;\n```\n\n---\n\n\n`lib` 폴더에 `theme.ts` 도 생성\n\n#### Note\n- 나중에 global style을 적용하기 위해 theme.ts 생성\n\n######lib/theme.ts\n```ts\nimport { createTheme } from '@mui/material/styles';\nimport { indigo } from '@mui/material/colors';\n\nconst theme = createTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: indigo.A400,\n\t\t},\n\t},\n});\n\nexport default theme;\n```\n\n---\n\n\n`_app.tsx` 파일을 다음과 같이 수정\n\n######pages/_app.tsx\n```tsx\nimport * as React from 'react';\nimport Head from 'next/head';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { CacheProvider } from '@emotion/react';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nimport theme from '../lib/theme';\nimport createEmotionCache from '../lib/emotionCache';\n\nimport type { NextPage } from 'next';\nimport type { AppProps } from 'next/app';\nimport type { EmotionCache } from '@emotion/react';\n\ntype AppPropsWithCache = AppProps & {\n\tComponent: NextPage;\n\temotionCache?: EmotionCache;\n};\n\nconst clientSideEmotionCache = createEmotionCache();\n\nconst MyApp = ({\n\tComponent,\n\temotionCache = clientSideEmotionCache,\n\tpageProps,\n}: AppPropsWithCache) => {\n\treturn (\n\t\t<CacheProvider value={emotionCache}>\n\t\t\t<Head>\n\t\t\t\t<meta name='viewport' content='initial-scale=1, width=device-width' />\n\t\t\t</Head>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Component {...pageProps} />\n\t\t\t</ThemeProvider>\n\t\t</CacheProvider>\n\t);\n};\n\nexport default MyApp;\n```\n\n---\n\n`_document.tsx` 파일을 생성한 뒤 다음과 같이 작성\n\n#### Note\n- `_Document.getInitialProps`는 `_app`이 아닌 `_document`에 상속되며 static 으로 생성됨\n```tsx\n_Document.getInitialProps = async (ctx: DocumentContext): Promise<DocumentInitialProps> => {...}\n```\n- cache를 새로 생성하기보단 동일한 Emotion cache를 SSR Request에 사용한다면 퍼포먼스를 개선하는 효과를 얻을 수 있다. (하지만 global side effect가 발생할 수 있는 단점이 있다는 것도 인지해야한다.)\n- 여기서는 SSR Request 마다 cache를 생성하기로 한다.\n```tsx\nconst cache = createEmotionCache();\n```\n- `styles fragment`는 `app` 과 `page`의 렌더링이 끝난뒤에 렌더링된다.\n```tsx\nstyles: [...React.Children.toArray(initialProps.styles), ...emotionStyleTags],\n```\n- 잘못된 HTML 생성 방지를 위해 다음 구문은 중요.\n\n참고링크: https://github.com/mui/material-ui/issues/26561#issuecomment-855286153\n```tsx\nconst emotionStyles = extractCriticalToChunks(initialProps.html);\n```\n\n#### 생성 순서\n\n##### 서버\n1. app.getInitialProps\n2. page.getInitialProps\n3. document.getInitialProps\n4. app.render\n5. page.render\n6. document.render\n\n##### 서버에러\n1. document.getInitialProps\n2. app.render\n3. page.render\n4. document.render\n\n##### 클라이언트\n\t\n1. app.getInitialProps\n2. page.getInitialProps\n3. app.render\n4. page.render\n\n###### pages/_document.tsx\n```tsx\nimport * as React from 'react';\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport createEmotionServer from '@emotion/server/create-instance';\nimport theme from '../lib/theme';\nimport createEmotionCache from '../lib/emotionCache';\n\nimport type { DocumentContext, DocumentInitialProps } from 'next/document';\n\nexport default class _Document extends Document {\n\trender() {\n\t\treturn (\n\t\t\t<Html lang='ko'>\n\t\t\t\t<Head>\n\t\t\t\t\t<meta name='theme-color' content={theme.palette.primary.main} />\n\t\t\t\t\t<link rel='shortcut icon' href='/static/favicon.ico' />\n\t\t\t\t\t<link\n\t\t\t\t\t\trel='stylesheet'\n\t\t\t\t\t\thref='https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap'\n\t\t\t\t\t/>\n\t\t\t\t\t<meta name='emotion-insertion-point' content='' />\n\t\t\t\t\t{this.props.styles}\n\t\t\t\t</Head>\n\t\t\t\t<body>\n\t\t\t\t\t<Main />\n\t\t\t\t\t<NextScript />\n\t\t\t\t</body>\n\t\t\t</Html>\n\t\t);\n\t}\n}\n\n_Document.getInitialProps = async (ctx: DocumentContext): Promise<DocumentInitialProps> => {\n\tconst originalRenderPage = ctx.renderPage;\n\n\tconst cache = createEmotionCache();\n\tconst { extractCriticalToChunks } = createEmotionServer(cache);\n\n\tctx.renderPage = () =>\n\t\toriginalRenderPage({\n\t\t\tenhanceApp: (App) =>\n\t\t\t\tfunction EnhanceApp(props) {\n\t\t\t\t\treturn <App emotionCache={cache} {...props} />;\n\t\t\t\t},\n\t\t});\n\n\tconst initialProps = await Document.getInitialProps(ctx);\n\n\tconst emotionStyles = extractCriticalToChunks(initialProps.html);\n\tconst emotionStyleTags = emotionStyles.styles.map((style) => (\n\t\t<style\n\t\t\tdata-emotion={`${style.key} ${style.ids.join(' ')}`}\n\t\t\tkey={style.key}\n\t\t\t// eslint-disable-next-line react/no-danger\n\t\t\tdangerouslySetInnerHTML={{ __html: style.css }}\n\t\t/>\n\t));\n\n\treturn {\n\t\t...initialProps,\n\t\tstyles: [...React.Children.toArray(initialProps.styles), ...emotionStyleTags],\n\t};\n};\n```\n\n---\n\n`index.tsx` 를 다음과 같이 작성\n\n###### pages/index.tsx\n```tsx\nimport { Button } from '@mui/material';\n\nimport type { NextPage } from 'next';\n\nconst Home: NextPage = () => {\n\treturn (\n\t\t<main\n\t\t\tstyle={{\n\t\t\t\twidth: '100vw',\n\t\t\t\theight: '100vh',\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\talignItems: 'center',\n\t\t\t}}\n\t\t>\n\t\t\t<div>\n\t\t\t\t<header>\n\t\t\t\t\t<h1>MUI5 + Next.js 12</h1>\n\t\t\t\t</header>\n\t\t\t\t<section>\n\t\t\t\t\t<Button variant={'contained'}>Hello MUI</Button>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t</main>\n\t);\n};\n\nexport default Home;\n```\n\n######preview\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zti8h7trujgps8mwin0b.png)\n\n---\n\n➕ Stackblitz Sample\n\n{% embed https://stackblitz.com/edit/nextjs12-mui5-boilerplate?embed=1&file=pages/_app.tsx %}\n\n---\n\n##Conclusion\n\n본 포스팅에서는 `MUI 5`를 `Next.Js 12`에 적용하는 최신 방법을 소개하였다. (2022년 8월 기준)\n`react 18` 이 등장하면서 기존 방법보다 고려해야할 부분이 늘어난건 사실이나 여전히 reference가 많은 조합을 선호하는 트렌트 안에서는 Best 라고 할수있는 SSR Framework + UI Library 조합인 `Next.Js`+ `MUI`는 꾸준히 이용될 것이다.\n\n이외에도 추천하는 React UI Framework 중 하나인 Mantine을 소개하면서 글을 마무리 짓고자 한다.\nMantine: https://mantine.dev/","user":{"name":"soom","username":"soom","twitter_username":null,"github_username":"VannsKang","user_id":625687,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--m-Ur0l36--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/625687/48e6cc1c-9539-4ee0-b3cd-70f5cb8e2c4d.jpeg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--0wYeVXzM--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/625687/48e6cc1c-9539-4ee0-b3cd-70f5cb8e2c4d.jpeg"}}