{"type_of":"article","id":1245838,"title":"Variables in JavaScript","description":"How does the program remember things? To catch and hold the values JavaScript provides thing called a...","readable_publish_date":"Nov 7","slug":"variables-in-javascript-32ce","path":"/taguhi_manukyan_73ffa9e44/variables-in-javascript-32ce","url":"https://dev.to/taguhi_manukyan_73ffa9e44/variables-in-javascript-32ce","comments_count":0,"public_reactions_count":0,"collection_id":null,"published_timestamp":"2022-11-07T12:51:36Z","positive_reactions_count":0,"cover_image":null,"social_image":"https://dev.to/social_previews/article/1245838.png","canonical_url":"https://dev.to/taguhi_manukyan_73ffa9e44/variables-in-javascript-32ce","created_at":"2022-11-06T21:16:54Z","edited_at":"2022-11-07T12:53:53Z","crossposted_at":null,"published_at":"2022-11-07T12:51:36Z","last_comment_at":"2022-11-07T12:51:36Z","reading_time_minutes":3,"tag_list":"variables, javascript, beginners, programming","tags":["variables","javascript","beginners","programming"],"body_html":"<p>How does the program remember things? To catch and hold the values JavaScript provides thing called a variable. Variables are containers for storing data<br>\nThere are 3 types of variables<br>\n1) var<br>\n2) let<br>\n3) const</p>\n\n<h2>\n  <a name=\"short-reflection-on-history\" href=\"#short-reflection-on-history\">\n  </a>\n  Short reflection on history\n</h2>\n\n<p>Brendan Eich invented JavaScript in 1995, and at that time, there was just the variable 'var,' but in 2015,  they added 'let' and 'const' to the collection. <br>\nVariable 'var' mainly is not used. However, if you want to run your code in older browsers, you must use 'var.'</p>\n\n<h2>\n  <a name=\"declaration-of-variales\" href=\"#declaration-of-variales\">\n  </a>\n  Declaration of variales\n</h2>\n\n<p>The particular word (var, let, or const) indicates that this sentence will define a variable.<br>\nThe variable's name follows it, and if we want to immediately give it a value, by an = operator and an expression.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iFsYxLws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3v693x8fjyb2yvjmu9w.jpeg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--iFsYxLws--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3v693x8fjyb2yvjmu9w.jpeg\" alt=\"Image description\" loading=\"lazy\" width=\"750\" height=\"362\"></a></p>\n\n<h2>\n  <a name=\"rules-for-naming-variables\" href=\"#rules-for-naming-variables\">\n  </a>\n  Rules for naming variables\n</h2>\n\n<p><strong>Do</strong></p>\n\n<p>1)Names can contain letters, digits, underscores, and dollar signs.</p>\n\n<p>2)Names must begin with a letter.</p>\n\n<p>3)Names can also begin with '$' and '_.'</p>\n\n<p><strong>Don't Do</strong></p>\n\n<p>1)Words with a special meaning, such as var, are keywords and cannot be used as variable names. JS reserves several words for use. At the bottom are some parts of that list.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--CD-AgljB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sr0hidnsfo88lasdt24k.jpeg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--CD-AgljB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sr0hidnsfo88lasdt24k.jpeg\" alt=\"Image description\" loading=\"lazy\" width=\"750\" height=\"1334\"></a></p>\n\n<p>2) Names are case sensitive, and the capital letter 'A' is not the same as a lowercase 'a'.</p>\n\n<h2>\n  <a name=\"const\" href=\"#const\">\n  </a>\n  Const\n</h2>\n\n<p>Const is type of variable which CANNOT<br>\n1)reassighned<br>\n2)redeclared</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--PwSD41vo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9lu5cjyn7uofitl7xasm.jpeg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--PwSD41vo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9lu5cjyn7uofitl7xasm.jpeg\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"452\"></a></p>\n\n<p>this will be ERROR, because a is a constant and we want to reasighn it.</p>\n\n<p>But we can change some properties of an object or add new ones. </p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NdHINTuG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vb64e6k5cwij6h7klswu.jpeg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NdHINTuG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vb64e6k5cwij6h7klswu.jpeg\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"421\"></a><br>\nNote: push adds new elements to an array<br>\nprogram will print[1,2,3,4,5]</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--AT-RAAmb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jisvsymvzddwh7ega7dg.jpeg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--AT-RAAmb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jisvsymvzddwh7ega7dg.jpeg\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"367\"></a><br>\nThis will be an ERROR, because we want to reasighn new vale to the object</p>\n\n<h2>\n  <a name=\"var-and-let\" href=\"#var-and-let\">\n  </a>\n  Var and Let\n</h2>\n\n<p>We can classify these two variables together, separate from const, because they are similar. We can reassign the object. But they have two differences</p>\n\n<p>1)'var' can be redeclared, and program will consider as valid value the last declaration</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--MsvWm2VH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9c5degvjhce5m52s3bi.jpeg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--MsvWm2VH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9c5degvjhce5m52s3bi.jpeg\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"492\"></a><br>\nprogram will print 6</p>\n\n<p>but 'let' cannot be declared twice </p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LmSjoyA6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m44mj92c39slp88mubv0.jpeg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LmSjoyA6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m44mj92c39slp88mubv0.jpeg\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"349\"></a></p>\n\n<p>program will print ERROR as a is already declared</p>\n\n<p>2)'let' allows you to declare variables that are limited in scope to the block, statement, or expression on which it is used. This is unlike the 'var' keyword, which defines a variable globally, or locally to an entire function regardless of block scope.</p>\n\n<h2>\n  <a name=\"scope\" href=\"#scope\">\n  </a>\n  Scope\n</h2>\n\n<p>The scope is the space where the values of our variables are visible. In the above, we discussed the difference between 'var' and 'let.' They work in different amounts of scopes.<br>\nIf variables let and const are declared in some scope, they are visible in subscopes of that scope. Variable var is visible everywhere with its last declared value.<br>\nIf the program does not see the variable in a particular scope, it goes up and takes the latest declared value.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jL0vEjfO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hiunk5o980jy2rz712tc.jpeg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--jL0vEjfO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hiunk5o980jy2rz712tc.jpeg\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"386\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--t93ZJNvX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/50tpqkhgxiqnwvf6j9yz.jpeg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--t93ZJNvX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/50tpqkhgxiqnwvf6j9yz.jpeg\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"349\"></a><br>\n<a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Qa1IK2mA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0irujg30xeiiqo9trf6.jpeg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Qa1IK2mA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0irujg30xeiiqo9trf6.jpeg\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"693\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--8Cgicf3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xo32hge1nbhx4hqbhcyp.jpeg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--8Cgicf3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xo32hge1nbhx4hqbhcyp.jpeg\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"666\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--YzPptiXd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4w3kifa1fgm8ncbr5nx7.jpeg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--YzPptiXd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4w3kifa1fgm8ncbr5nx7.jpeg\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"403\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HoIerT3h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7zw4kg4wy4ie11tb9m6p.jpeg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HoIerT3h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7zw4kg4wy4ie11tb9m6p.jpeg\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"531\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HVbd64TP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3ii2oir0tmqdf40d0to.jpeg\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HVbd64TP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3ii2oir0tmqdf40d0to.jpeg\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"400\"></a></p>\n\n","body_markdown":"How does the program remember things? To catch and hold the values JavaScript provides thing called a variable. Variables are containers for storing data\nThere are 3 types of variables\n1) var\n2) let\n3) const\n\n## Short reflection on history\n\nBrendan Eich invented JavaScript in 1995, and at that time, there was just the variable 'var,' but in 2015,  they added 'let' and 'const' to the collection. \nVariable 'var' mainly is not used. However, if you want to run your code in older browsers, you must use 'var.'\n\n## Declaration of variales\n\nThe particular word (var, let, or const) indicates that this sentence will define a variable.\nThe variable's name follows it, and if we want to immediately give it a value, by an = operator and an expression.\n\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3v693x8fjyb2yvjmu9w.jpeg)\n\n## Rules for naming variables\n\n**Do**\n\n1)Names can contain letters, digits, underscores, and dollar signs.\n\n2)Names must begin with a letter.\n\n3)Names can also begin with '$' and '_.'\n\n**Don't Do**\n\n1)Words with a special meaning, such as var, are keywords and cannot be used as variable names. JS reserves several words for use. At the bottom are some parts of that list.\n\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sr0hidnsfo88lasdt24k.jpeg)\n\n2) Names are case sensitive, and the capital letter 'A' is not the same as a lowercase 'a'.\n\n## Const\n\nConst is type of variable which CANNOT\n1)reassighned\n2)redeclared\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9lu5cjyn7uofitl7xasm.jpeg)\n\nthis will be ERROR, because a is a constant and we want to reasighn it.\n\nBut we can change some properties of an object or add new ones. \n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vb64e6k5cwij6h7klswu.jpeg)\nNote: push adds new elements to an array\nprogram will print[1,2,3,4,5]\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jisvsymvzddwh7ega7dg.jpeg)\nThis will be an ERROR, because we want to reasighn new vale to the object\n\n## Var and Let\n\nWe can classify these two variables together, separate from const, because they are similar. We can reassign the object. But they have two differences\n\n1)'var' can be redeclared, and program will consider as valid value the last declaration\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a9c5degvjhce5m52s3bi.jpeg)\nprogram will print 6\n\nbut 'let' cannot be declared twice \n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m44mj92c39slp88mubv0.jpeg)\n\nprogram will print ERROR as a is already declared\n\n2)'let' allows you to declare variables that are limited in scope to the block, statement, or expression on which it is used. This is unlike the 'var' keyword, which defines a variable globally, or locally to an entire function regardless of block scope.\n\n## Scope\n\nThe scope is the space where the values of our variables are visible. In the above, we discussed the difference between 'var' and 'let.' They work in different amounts of scopes.\nIf variables let and const are declared in some scope, they are visible in subscopes of that scope. Variable var is visible everywhere with its last declared value.\nIf the program does not see the variable in a particular scope, it goes up and takes the latest declared value.\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hiunk5o980jy2rz712tc.jpeg)\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/50tpqkhgxiqnwvf6j9yz.jpeg)\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0irujg30xeiiqo9trf6.jpeg)\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xo32hge1nbhx4hqbhcyp.jpeg)\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4w3kifa1fgm8ncbr5nx7.jpeg)\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7zw4kg4wy4ie11tb9m6p.jpeg)\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s3ii2oir0tmqdf40d0to.jpeg)\n\n\n\n\n\n\n","user":{"name":"Taguhi Manukyan","username":"taguhi_manukyan_73ffa9e44","twitter_username":null,"github_username":null,"user_id":926373,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--4zzmvcaD--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/926373/bd52a438-74ae-4c99-a61a-65393bdb2587.png","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--IwVNqWMU--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/926373/bd52a438-74ae-4c99-a61a-65393bdb2587.png"}}