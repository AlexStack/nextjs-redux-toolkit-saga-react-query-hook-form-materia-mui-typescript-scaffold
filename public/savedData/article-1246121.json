{"type_of":"article","id":1246121,"title":"UEle - Tiny UI Reactive library","description":"A tiny reactive frontend library.  UEle - https://github.com/kethan/uele  It has the following...","readable_publish_date":"Nov 7","slug":"uele-tiny-ui-reactive-library-2g90","path":"/kethan/uele-tiny-ui-reactive-library-2g90","url":"https://dev.to/kethan/uele-tiny-ui-reactive-library-2g90","comments_count":0,"public_reactions_count":3,"collection_id":null,"published_timestamp":"2022-11-07T04:55:49Z","positive_reactions_count":3,"cover_image":null,"social_image":"https://dev.to/social_previews/article/1246121.png","canonical_url":"https://dev.to/kethan/uele-tiny-ui-reactive-library-2g90","created_at":"2022-11-07T04:55:49Z","edited_at":"2022-11-07T04:58:24Z","crossposted_at":null,"published_at":"2022-11-07T04:55:49Z","last_comment_at":"2022-11-07T04:55:49Z","reading_time_minutes":1,"tag_list":"webdev, react, signals, javascript","tags":["webdev","react","signals","javascript"],"body_html":"<p>A tiny reactive frontend library.</p>\n\n<p>UEle - <a href=\"https://github.com/kethan/uele\">https://github.com/kethan/uele</a></p>\n\n<p>It has the following features for less than 1K GZip.</p>\n\n<ul>\n<li>Small.</li>\n<li>Fast and Simple API</li>\n<li>JSX</li>\n<li>Fragment</li>\n<li>Components</li>\n<li>SVG</li>\n<li>Refs</li>\n<li>Style Maps</li>\n<li>Lazy Components</li>\n<li>Promise support out of box</li>\n<li>AscynIterable</li>\n<li>Rxjs Subscribe</li>\n<li>Control Flow Components - <strong>If, For, Show</strong>\n</li>\n<li>Extend with any reactive library - <strong>effect, memo, is, get</strong>\n</li>\n</ul>\n\n<p>Simple Counter example to play with - <a href=\"https://stackblitz.com/edit/vitejs-vite-rs9chm?file=main.jsx&amp;terminal=dev\">https://stackblitz.com/edit/vitejs-vite-rs9chm?file=main.jsx&amp;terminal=dev</a><br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"k\">import</span> <span class=\"o\">*</span> <span class=\"k\">as</span> <span class=\"nx\">React</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">uele</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">api</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">uele</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">o</span><span class=\"p\">,</span> <span class=\"nx\">effect</span><span class=\"p\">,</span> <span class=\"nx\">memo</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">ulive</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// ulive settings</span>\n<span class=\"nx\">api</span><span class=\"p\">.</span><span class=\"nx\">effect</span> <span class=\"o\">=</span> <span class=\"nx\">effect</span><span class=\"p\">;</span>\n<span class=\"nx\">api</span><span class=\"p\">.</span><span class=\"nx\">memo</span> <span class=\"o\">=</span> <span class=\"nx\">memo</span><span class=\"p\">;</span>\n<span class=\"nx\">api</span><span class=\"p\">.</span><span class=\"nx\">is</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">v</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">v</span><span class=\"p\">.</span><span class=\"nx\">$o</span><span class=\"p\">;</span>\n<span class=\"nx\">api</span><span class=\"p\">.</span><span class=\"kd\">get</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">v</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">v</span><span class=\"p\">();</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">count</span> <span class=\"o\">=</span> <span class=\"nx\">o</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">inc</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">count</span><span class=\"p\">(</span><span class=\"nx\">count</span><span class=\"p\">()</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">dec</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">count</span><span class=\"p\">(</span><span class=\"nx\">count</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">Counter</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">square</span> <span class=\"o\">=</span> <span class=\"nx\">memo</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">count</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"nx\">count</span><span class=\"p\">());</span>\n  <span class=\"kd\">let</span> <span class=\"nx\">cube</span> <span class=\"o\">=</span> <span class=\"nx\">memo</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">square</span><span class=\"p\">()</span> <span class=\"o\">*</span> <span class=\"nx\">count</span><span class=\"p\">());</span>\n  <span class=\"nx\">effect</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">count</span><span class=\"p\">(),</span> <span class=\"nx\">square</span><span class=\"p\">(),</span> <span class=\"nx\">cube</span><span class=\"p\">()));</span>\n  <span class=\"k\">return</span> <span class=\"p\">(</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span>\n        <span class=\"na\">Count</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nx\">count</span><span class=\"p\">}</span> <span class=\"p\">{</span><span class=\"nx\">square</span><span class=\"p\">}</span> <span class=\"p\">{</span><span class=\"nx\">cube</span><span class=\"p\">}</span>\n      <span class=\"o\">&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span>      <span class=\"o\">&lt;</span><span class=\"nx\">button</span> <span class=\"nx\">onclick</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">inc</span><span class=\"p\">}</span><span class=\"o\">&gt;+&lt;</span><span class=\"sr\">/button</span><span class=\"err\">&gt;\n</span>      <span class=\"o\">&lt;</span><span class=\"nx\">button</span> <span class=\"nx\">onclick</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"nx\">dec</span><span class=\"p\">}</span><span class=\"o\">&gt;-&lt;</span><span class=\"sr\">/button</span><span class=\"err\">&gt;\n</span>    <span class=\"o\">&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span>  <span class=\"p\">);</span>\n<span class=\"p\">};</span>\n\n<span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">body</span><span class=\"p\">.</span><span class=\"nx\">appendChild</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"nx\">Counter</span> <span class=\"o\">/&gt;</span><span class=\"p\">);</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n","body_markdown":"A tiny reactive frontend library.\n\nUEle - https://github.com/kethan/uele\n\nIt has the following features for less than 1K GZip.\n\n- Small.\n- Fast and Simple API\n- JSX\n- Fragment\n- Components\n- SVG\n- Refs\n- Style Maps\n- Lazy Components\n- Promise support out of box\n- AscynIterable\n- Rxjs Subscribe\n- Control Flow Components - **If, For, Show**\n- Extend with any reactive library - **effect, memo, is, get**\n\nSimple Counter example to play with - https://stackblitz.com/edit/vitejs-vite-rs9chm?file=main.jsx&terminal=dev\n\n```js\nimport * as React from 'uele';\nimport { api } from 'uele';\nimport { o, effect, memo } from 'ulive';\n\n// ulive settings\napi.effect = effect;\napi.memo = memo;\napi.is = (v) => v.$o;\napi.get = (v) => v();\n\nconst count = o(0);\nconst inc = () => count(count() + 1);\nconst dec = () => count(count() - 1);\n\nconst Counter = () => {\n  let square = memo(() => count() * count());\n  let cube = memo(() => square() * count());\n  effect(() => console.log(count(), square(), cube()));\n  return (\n    <div>\n      <div>\n        Count: {count} {square} {cube}\n      </div>\n      <button onclick={inc}>+</button>\n      <button onclick={dec}>-</button>\n    </div>\n  );\n};\n\ndocument.body.appendChild(<Counter />);\n```","user":{"name":"Kethan","username":"kethan","twitter_username":null,"github_username":"kethan","user_id":219341,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--PTg6QT9f--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/219341/0bf32731-f974-425d-8cfa-410ac3303c61.png","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--brGQ-TRP--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/219341/0bf32731-f974-425d-8cfa-410ac3303c61.png"}}