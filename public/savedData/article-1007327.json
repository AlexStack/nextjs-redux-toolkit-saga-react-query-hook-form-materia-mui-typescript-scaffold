{"type_of":"article","id":1007327,"title":"MUI CSS styled-component を使って Slider を上書きしてみる","description":"MUI でのスタイリングの 2 種類の比較   https://mui.com/guides/understand-mui-packages/  ThemeProvider,...","readable_publish_date":"Mar 6","slug":"mui-css-styled-component-woshi-u-24e5","path":"/kaede_io/mui-css-styled-component-woshi-u-24e5","url":"https://dev.to/kaede_io/mui-css-styled-component-woshi-u-24e5","comments_count":0,"public_reactions_count":5,"collection_id":null,"published_timestamp":"2022-03-06T16:44:06Z","positive_reactions_count":5,"cover_image":null,"social_image":"https://dev.to/social_previews/article/1007327.png","canonical_url":"https://dev.to/kaede_io/mui-css-styled-component-woshi-u-24e5","created_at":"2022-03-03T06:30:06Z","edited_at":"2022-03-06T17:37:04Z","crossposted_at":null,"published_at":"2022-03-06T16:44:06Z","last_comment_at":"2022-03-06T16:44:06Z","reading_time_minutes":2,"tag_list":"react, css, mui","tags":["react","css","mui"],"body_html":"<h1>\n  <a name=\"mui-%E3%81%A7%E3%81%AE%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%AE-2-%E7%A8%AE%E9%A1%9E%E3%81%AE%E6%AF%94%E8%BC%83\" href=\"#mui-%E3%81%A7%E3%81%AE%E3%82%B9%E3%82%BF%E3%82%A4%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%AE-2-%E7%A8%AE%E9%A1%9E%E3%81%AE%E6%AF%94%E8%BC%83\">\n  </a>\n  MUI でのスタイリングの 2 種類の比較\n</h1>\n\n<p><a href=\"https://mui.com/guides/understand-mui-packages/\">https://mui.com/guides/understand-mui-packages/</a></p>\n\n<p>ThemeProvider, styled　のスタイリング API が存在して、どちらかを選ぶらしい。</p>\n\n<p>前のチームでは ThemeProvider を使っていて<br>\n今回のチームでは styled を使っている。</p>\n\n<p><a href=\"https://mui.com/customization/theming/#nesting-the-theme\">https://mui.com/customization/theming/#nesting-the-theme</a></p>\n\n<p>Theming で毎回 ThemeProvider を書いてネストするので汚くなりがち。</p>\n\n<p>styled　は　ThemeProvider でのラップと比べて、 export された名前の component を吐き出すので、使用するコンポーネントでテーマを意識しなくていいのが特徴。</p>\n<h2>\n  <a name=\"styled-%E3%81%AE-2%E3%81%A4\" href=\"#styled-%E3%81%AE-2%E3%81%A4\">\n  </a>\n  styled の 2つ\n</h2>\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>import { styled } from \"@mui/material/styles\";\nimport { styled } from \"sytled-component\";\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n<p>mui/material からとってくる方法と<br>\nstyled-component を使う方法がある。</p>\n\n<p>使い方はほぼ同じだと思う。今回は mui/matiral/styles から持ってきて使う。</p>\n\n<p># 実際に styled で　CRA する</p>\n<h2>\n  <a name=\"react-ts-mui-%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" href=\"#react-ts-mui-%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">\n  </a>\n  React, TS, MUI をインストール\n</h2>\n\n<p><a href=\"https://github.com/mui/material-ui/tree/master/examples/create-react-app-with-typescript\">https://github.com/mui/material-ui/tree/master/examples/create-react-app-with-typescript</a></p>\n\n<p>matrial-ui のレポジトリに mui と　ts のスタンダード？がある<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>curl https://codeload.github.com/mui/material-ui/tar.gz/master | tar -xz --strip=2 material-ui-master/examples/create-react-app-with-typescript\ncd create-react-app-with-typescript\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>これで curl でダウンロードしてくる<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>create-react-app-with-typescript % npm i\nnpm WARN deprecated svgo@1.3.2: This SVGO version is no longer supported. Upgrade to v2.x.x.\n\nadded 1403 packages, and audited 1404 packages in 1\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>cd して npm i する。パッケージが 1403 もあるので 1min かかる。<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight json\"><code><span class=\"w\">  </span><span class=\"nl\">\"dependencies\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"@emotion/react\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"latest\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"@emotion/styled\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"latest\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"@mui/material\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"latest\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"@types/react\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"latest\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"@types/react-dom\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"latest\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"react\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"latest\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"react-dom\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"latest\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"react-scripts\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"latest\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"typescript\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"latest\"</span><span class=\"w\">\n  </span><span class=\"p\">}</span><span class=\"err\">,</span><span class=\"w\">\n\n</span></code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>これらの ts, mui, emotion, react, などのライブラリをまとめてインストールできる。</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--EUpB0Z3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxrbr2ud75caxplkzct4.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--EUpB0Z3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxrbr2ud75caxplkzct4.png\" alt=\"Image description\" loading=\"lazy\" width=\"647\" height=\"236\"></a></p>\n\n<p>npm start するとこの文言が出てくる。</p>\n\n\n<hr>\n\n<h2>\n  <a name=\"styled-%E3%82%92%E4%BD%BF%E3%81%86\" href=\"#styled-%E3%82%92%E4%BD%BF%E3%81%86\">\n  </a>\n  styled を使う\n</h2>\n\n<p><a href=\"https://mui.com/guides/interoperability/#styled-components\">https://mui.com/guides/interoperability/#styled-components</a></p>\n\n<p>mui.com のガイドの例を見てみる<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"k\">import</span> <span class=\"o\">*</span> <span class=\"k\">as</span> <span class=\"nx\">React</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">react</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">Slider</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@mui/material/Slider</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">styled</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"dl\">'</span><span class=\"s1\">@mui/material/styles</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">CustomizedSlider</span> <span class=\"o\">=</span> <span class=\"nx\">styled</span><span class=\"p\">(</span><span class=\"nx\">Slider</span><span class=\"p\">)</span><span class=\"s2\">`\n  color: #20b2aa;\n\n  :hover {\n    color: #2e8b57;\n  }\n`</span><span class=\"p\">;</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span> <span class=\"nx\">StyledComponents</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"o\">&lt;</span><span class=\"nx\">CustomizedSlider</span> <span class=\"nx\">defaultValue</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">30</span><span class=\"p\">}</span> <span class=\"sr\">/&gt;</span><span class=\"err\">;\n</span><span class=\"p\">}</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>mui/material から　 Slider　コンポーネントのライブラリをインポートする<br>\nmui/material/stuyles から styled を持ってくる。</p>\n\n<p>そして CustomizedSlider で Slider の色と、ホバー時の色を上書き。</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NkRwQWs9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mmo39ym6y0q475daqd8.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NkRwQWs9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mmo39ym6y0q475daqd8.png\" alt=\"Image description\" loading=\"lazy\" width=\"336\" height=\"84\"></a></p>\n\n<p>出力された通常時のスライダーの色が水色</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--y9Hl-ms_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7s7u5j8mkk2x90ghvlpr.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--y9Hl-ms_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7s7u5j8mkk2x90ghvlpr.png\" alt=\"Image description\" loading=\"lazy\" width=\"349\" height=\"90\"></a></p>\n\n<p>マウスホバーしてる時の色が緑色</p>\n\n<p>になる。<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"kd\">function</span> <span class=\"nx\">StyledComponents</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"p\">(</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">Box</span> <span class=\"nx\">sx</span><span class=\"o\">=</span><span class=\"p\">{{</span> <span class=\"na\">width</span><span class=\"p\">:</span> <span class=\"mi\">300</span> <span class=\"p\">}}</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">Slider</span> <span class=\"o\">/&gt;</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">CustomizedSlider</span> <span class=\"nx\">defaultValue</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"mi\">30</span><span class=\"p\">}</span> <span class=\"sr\">/&gt;</span><span class=\"err\">;\n</span>    <span class=\"o\">&lt;</span><span class=\"sr\">/Box</span><span class=\"err\">&gt;\n</span>  <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Tj-y-DEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7h8pchcuguzfrrtsndxq.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Tj-y-DEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7h8pchcuguzfrrtsndxq.png\" alt=\"Image description\" loading=\"lazy\" width=\"390\" height=\"129\"></a></p>\n\n<p>普通に出力されるスライダーと並べると、色の変更が適用されているのがわかりやすい。</p>\n\n","body_markdown":"\n# MUI でのスタイリングの 2 種類の比較\n\nhttps://mui.com/guides/understand-mui-packages/\n\nThemeProvider, styled　のスタイリング API が存在して、どちらかを選ぶらしい。\n\n前のチームでは ThemeProvider を使っていて\n今回のチームでは styled を使っている。\n\nhttps://mui.com/customization/theming/#nesting-the-theme\n\nTheming で毎回 ThemeProvider を書いてネストするので汚くなりがち。\n\nstyled　は　ThemeProvider でのラップと比べて、 export された名前の component を吐き出すので、使用するコンポーネントでテーマを意識しなくていいのが特徴。\n\n## styled の 2つ\n\n```\nimport { styled } from \"@mui/material/styles\";\nimport { styled } from \"sytled-component\";\n```\n\nmui/material からとってくる方法と\nstyled-component を使う方法がある。\n\n使い方はほぼ同じだと思う。今回は mui/matiral/styles から持ってきて使う。\n\n\n\b# 実際に styled で　CRA する\n\n## React, TS, MUI をインストール\n\nhttps://github.com/mui/material-ui/tree/master/examples/create-react-app-with-typescript\n\nmatrial-ui のレポジトリに mui と　ts のスタンダード？がある\n\n```\ncurl https://codeload.github.com/mui/material-ui/tar.gz/master | tar -xz --strip=2 material-ui-master/examples/create-react-app-with-typescript\ncd create-react-app-with-typescript\n```\n\nこれで curl でダウンロードしてくる\n\n```\ncreate-react-app-with-typescript % npm i\nnpm WARN deprecated svgo@1.3.2: This SVGO version is no longer supported. Upgrade to v2.x.x.\n\nadded 1403 packages, and audited 1404 packages in 1\n```\n\ncd して npm i する。パッケージが 1403 もあるので 1min かかる。\n\n```json\n  \"dependencies\": {\n    \"@emotion/react\": \"latest\",\n    \"@emotion/styled\": \"latest\",\n    \"@mui/material\": \"latest\",\n    \"@types/react\": \"latest\",\n    \"@types/react-dom\": \"latest\",\n    \"react\": \"latest\",\n    \"react-dom\": \"latest\",\n    \"react-scripts\": \"latest\",\n    \"typescript\": \"latest\"\n  },\n\n```\n\nこれらの ts, mui, emotion, react, などのライブラリをまとめてインストールできる。\n\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxrbr2ud75caxplkzct4.png)\n\n\nnpm start するとこの文言が出てくる。\n\n---\n\n## styled を使う\n\nhttps://mui.com/guides/interoperability/#styled-components\n\nmui.com のガイドの例を見てみる\n\n```ts\nimport * as React from 'react';\nimport Slider from '@mui/material/Slider';\nimport { styled } from '@mui/material/styles';\n\nconst CustomizedSlider = styled(Slider)`\n  color: #20b2aa;\n\n  :hover {\n    color: #2e8b57;\n  }\n`;\n\nexport default function StyledComponents() {\n  return <CustomizedSlider defaultValue={30} />;\n}\n```\n\nmui/material から　 Slider　コンポーネントのライブラリをインポートする\nmui/material/stuyles から styled を持ってくる。\n\nそして CustomizedSlider で Slider の色と、ホバー時の色を上書き。\n\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mmo39ym6y0q475daqd8.png)\n\n出力された通常時のスライダーの色が水色\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7s7u5j8mkk2x90ghvlpr.png)\n\nマウスホバーしてる時の色が緑色\n\nになる。\n\n```ts\nexport default function StyledComponents() {\n  return (\n    <Box sx={{ width: 300 }}>\n      <Slider />\n      <CustomizedSlider defaultValue={30} />;\n    </Box>\n  )\n}\n```\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7h8pchcuguzfrrtsndxq.png)\n\n普通に出力されるスライダーと並べると、色の変更が適用されているのがわかりやすい。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","user":{"name":"kaede","username":"kaede_io","twitter_username":"kaede_io","github_username":null,"user_id":193513,"website_url":"https://www.kaede.dev","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--aVRVlBXl--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/193513/03a87f5f-e188-46f8-a1d1-c9fb3b876007.jpg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--UzhpazQR--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/193513/03a87f5f-e188-46f8-a1d1-c9fb3b876007.jpg"}}