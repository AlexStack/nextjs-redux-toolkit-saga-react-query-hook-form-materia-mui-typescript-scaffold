{"type_of":"article","id":1243830,"title":"Use AWS Certificate Manager (ACM) to simplify UI certification management for CockroachDB","description":"Recently a customer asked me how to use AWS Certificate Manager(ACM) to manage certifications for...","readable_publish_date":"Nov 4","slug":"use-aws-certificate-manager-acm-to-simplify-ui-certification-management-for-cockroachdb-knh","path":"/jessielin/use-aws-certificate-manager-acm-to-simplify-ui-certification-management-for-cockroachdb-knh","url":"https://dev.to/jessielin/use-aws-certificate-manager-acm-to-simplify-ui-certification-management-for-cockroachdb-knh","comments_count":0,"public_reactions_count":2,"collection_id":null,"published_timestamp":"2022-11-04T20:45:01Z","positive_reactions_count":2,"cover_image":null,"social_image":"https://dev.to/social_previews/article/1243830.png","canonical_url":"https://dev.to/jessielin/use-aws-certificate-manager-acm-to-simplify-ui-certification-management-for-cockroachdb-knh","created_at":"2022-11-04T20:39:49Z","edited_at":null,"crossposted_at":null,"published_at":"2022-11-04T20:45:01Z","last_comment_at":"2022-11-04T20:45:01Z","reading_time_minutes":2,"tag_list":"cockroachdb, aws, acm","tags":["cockroachdb","aws","acm"],"body_html":"<p>Recently a customer asked me how to use AWS Certificate Manager(ACM) to manage certifications for self-hosted CockroachDB clusters. I looked into it and would like to share tips and tricks below. Please feel free to comment below to let me know know what other topics you like to see!</p>\n\n<h2>\n  <a name=\"problem-statement\" href=\"#problem-statement\">\n  </a>\n  Problem statement:\n</h2>\n\n<p>CockroachDB secure cluster requires TLS/HTTPS to access DBConsole, and we currently recommend using Let’s Encrypt and <a href=\"https://www.cockroachlabs.com/docs/v22.1/create-security-certificates-custom-ca.html#accessing-the-db-console-for-a-secure-cluster\">upload UI Certs to cockroach nodes</a>. When certificates expires, this requires additional administrative effort to rotate and maintain the certs.</p>\n\n<h2>\n  <a name=\"solution\" href=\"#solution\">\n  </a>\n  Solution:\n</h2>\n\n<p>AWS ACM can issue and auto renew certificates when using DNS validation and thus can reduce administrative overhead. AWS NLB TLS termination can handle TLS decryption between browser and NLB, and re-encryption between NLB and CockroachDB nodes to meet the requirement of CockroachDB. AWS NLB document isn’t very clear on how to configure it, so we’re adding additional screenshots here. </p>\n\n<p>The other benefit is we now only need to manage Node Certs on the server side.</p>\n\n<h2>\n  <a name=\"walkthrough\" href=\"#walkthrough\">\n  </a>\n  Walkthrough:\n</h2>\n\n<ol>\n<li>Request a public certificate in ACM for a domain name. I used <code>jessielin.xxxx.dev</code> in this case.</li>\n</ol>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LjGmDcJh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i02ems0yu9kc1w4gbq4l.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--LjGmDcJh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i02ems0yu9kc1w4gbq4l.png\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"539\"></a></p>\n\n<ol>\n<li>Create Network Load Balancer with 2 listeners. One for DBConsole, and one for SQL access.</li>\n</ol>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--J3H0WNk6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oa7jnm8ldjdoncu1oi0h.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--J3H0WNk6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oa7jnm8ldjdoncu1oi0h.png\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"433\"></a></p>\n\n<p>a. For DBConsole access, add TLS listener and Target Group. Use the certs issued by ACM. Target Group port should be the port number specified in --http-addr.  By using TLS listener and TLS target group AWS NLB will decrypt and re-encrypt.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--S8p-XWPk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olz9ccuotjp6tgdiiccp.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--S8p-XWPk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olz9ccuotjp6tgdiiccp.png\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"521\"></a><br>\nTarget Group</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--FuChqGKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/za5eapqd6hh29oszhr7x.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--FuChqGKb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/za5eapqd6hh29oszhr7x.png\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"719\"></a><br>\nHealthcheck</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fXVthjIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d8brxcik4fm8mj71tr4j.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--fXVthjIG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d8brxcik4fm8mj71tr4j.png\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"205\"></a></p>\n\n<p>b. For SQL access, add TCP listener and forward it to sql port. The <a href=\"https://www.cockroachlabs.com/docs/v22.1/deploy-cockroachdb-on-aws.html#step-4-set-up-load-balancing\">official document</a> explains it very well. </p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xQVwHrVw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jpbzq3od9grpqkja9b7.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xQVwHrVw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jpbzq3od9grpqkja9b7.png\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"725\"></a></p>\n\n<ol>\n<li>Add LB hostname and ip address to Node certs </li>\n</ol>\n\n<p>a. use <code>openssl x509 -in certs/node.crt -text</code> to find out existing nodes' hostname, ip addresses</p>\n\n<p>b. Add LB hostname and ip addr to the list. Use <code>cockroach cert create-node</code> to create new certs as <a href=\"https://www.cockroachlabs.com/docs/v22.1/cockroach-cert.html#create-the-certificate-and-key-pairs-for-nodes\">documented</a> and redistribute to all nodes. Validate the new certs are loaded correctly from DBConsole</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HZ4vrtU6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x63apbwantajy90gnmrx.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--HZ4vrtU6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x63apbwantajy90gnmrx.png\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"787\"></a></p>\n\n<ol>\n<li>Create an A record in Route 53 to redirect the <code>jessielin.xxxx.dev</code> to the NLB</li>\n</ol>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Yp3beQ98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqcwjyqo6mv7kvpzfzlr.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Yp3beQ98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqcwjyqo6mv7kvpzfzlr.png\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"819\"></a></p>\n\n<ol>\n<li>Voila there you have it!</li>\n</ol>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--89tSKO6z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4gli4r391zk8easwmigz.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--89tSKO6z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4gli4r391zk8easwmigz.png\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"862\"></a><br>\n<a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--SWnspmN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2sunkgkinp4ivl5omj7.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--SWnspmN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2sunkgkinp4ivl5omj7.png\" alt=\"Image description\" loading=\"lazy\" width=\"880\" height=\"1061\"></a></p>\n\n","body_markdown":"Recently a customer asked me how to use AWS Certificate Manager(ACM) to manage certifications for self-hosted CockroachDB clusters. I looked into it and would like to share tips and tricks below. Please feel free to comment below to let me know know what other topics you like to see!\n\n## Problem statement:\n\nCockroachDB secure cluster requires TLS/HTTPS to access DBConsole, and we currently recommend using Let’s Encrypt and [upload UI Certs to cockroach nodes](https://www.cockroachlabs.com/docs/v22.1/create-security-certificates-custom-ca.html#accessing-the-db-console-for-a-secure-cluster). When certificates expires, this requires additional administrative effort to rotate and maintain the certs.\n\n## Solution:\n\nAWS ACM can issue and auto renew certificates when using DNS validation and thus can reduce administrative overhead. AWS NLB TLS termination can handle TLS decryption between browser and NLB, and re-encryption between NLB and CockroachDB nodes to meet the requirement of CockroachDB. AWS NLB document isn’t very clear on how to configure it, so we’re adding additional screenshots here. \n\nThe other benefit is we now only need to manage Node Certs on the server side.\n\n## Walkthrough:\n\n\n1. Request a public certificate in ACM for a domain name. I used `jessielin.xxxx.dev` in this case.\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i02ems0yu9kc1w4gbq4l.png)\n\n2. Create Network Load Balancer with 2 listeners. One for DBConsole, and one for SQL access.\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oa7jnm8ldjdoncu1oi0h.png)\n\na. For DBConsole access, add TLS listener and Target Group. Use the certs issued by ACM. Target Group port should be the port number specified in --http-addr.  By using TLS listener and TLS target group AWS NLB will decrypt and re-encrypt.\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olz9ccuotjp6tgdiiccp.png)\nTarget Group\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/za5eapqd6hh29oszhr7x.png)\nHealthcheck\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d8brxcik4fm8mj71tr4j.png)\n\nb. For SQL access, add TCP listener and forward it to sql port. The [official document](https://www.cockroachlabs.com/docs/v22.1/deploy-cockroachdb-on-aws.html#step-4-set-up-load-balancing ) explains it very well. \n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jpbzq3od9grpqkja9b7.png)\n\n\n3. Add LB hostname and ip address to Node certs \n\n  a. use `openssl x509 -in certs/node.crt -text` to find out existing nodes' hostname, ip addresses\n\n   b. Add LB hostname and ip addr to the list. Use `cockroach cert create-node` to create new certs as [documented]( https://www.cockroachlabs.com/docs/v22.1/cockroach-cert.html#create-the-certificate-and-key-pairs-for-nodes) and redistribute to all nodes. Validate the new certs are loaded correctly from DBConsole\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x63apbwantajy90gnmrx.png)\n\n\n4. Create an A record in Route 53 to redirect the `jessielin.xxxx.dev` to the NLB\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqcwjyqo6mv7kvpzfzlr.png)\n\n\n5. Voila there you have it!\n\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4gli4r391zk8easwmigz.png)\n![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m2sunkgkinp4ivl5omj7.png)","user":{"name":"jessielin","username":"jessielin","twitter_username":null,"github_username":"lin-crl","user_id":965414,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--e93zhZ_H--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/965414/f308efaa-ac6a-40ba-9d2d-5a2d24cdba62.jpeg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--bYRBJU7V--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/965414/f308efaa-ac6a-40ba-9d2d-5a2d24cdba62.jpeg"}}