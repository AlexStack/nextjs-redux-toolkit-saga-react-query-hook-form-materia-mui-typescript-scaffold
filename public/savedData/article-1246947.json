{"type_of":"article","id":1246947,"title":"I Created a pure Unicode Code Highlighter :P","description":"It is a simple parser and module that modifies unicode variation of string parts to accomplish code highlighting","readable_publish_date":"Nov 7","slug":"i-created-a-pure-unicode-code-highlighter-p-ong","path":"/felipperegazio/i-created-a-pure-unicode-code-highlighter-p-ong","url":"https://dev.to/felipperegazio/i-created-a-pure-unicode-code-highlighter-p-ong","comments_count":1,"public_reactions_count":4,"collection_id":null,"published_timestamp":"2022-11-07T18:09:24Z","positive_reactions_count":4,"cover_image":null,"social_image":"https://dev.to/social_previews/article/1246947.png","canonical_url":"https://dev.to/felipperegazio/i-created-a-pure-unicode-code-highlighter-p-ong","created_at":"2022-11-07T18:09:13Z","edited_at":"2022-11-07T18:10:59Z","crossposted_at":null,"published_at":"2022-11-07T18:09:24Z","last_comment_at":"2022-11-07T23:57:07Z","reading_time_minutes":1,"tag_list":"showdev, toyproject, javascript, webdev","tags":["showdev","toyproject","javascript","webdev"],"body_html":"<p>The tool is called \"Unilight\". It is a simple parser and module that modifies unicode variation of string parts.</p>\n\n<p>So you can highlight anywhere that doesn't accept rich editing, just have a pure string that accepts unicode variations. Works for almost any lang, take a look, this is a simple and pure STRING haha:</p>\n\n<p>.......<br>\n// 𝕋𝕙𝕚𝕤 𝕚𝕤 𝕒𝕟 𝕖𝕩𝕒𝕞𝕡𝕝𝕖</p>\n\n<p>𝗳𝘂𝗻𝗰𝘁𝗶𝗼𝗻 example() {<br>\n  𝗰𝗼𝗻𝘀𝘁 a = \"fizz\";<br>\n  𝗰𝗼𝗻𝘀𝘁 b = \"buzz\";<br>\n  𝗿𝗲𝘁𝘂𝗿𝗻 a+b;<br>\n}<br>\n.......</p>\n\n<p>You can highlight your code here: <br>\n<a href=\"https://felippe-regazio.github.io/unilight/\">https://felippe-regazio.github.io/unilight/</a></p>\n\n<p>Source code and documentation here:<br>\n<a href=\"https://github.com/felippe-regazio/unilight\">https://github.com/felippe-regazio/unilight</a></p>\n\n<p>Warning:</p>\n\n<p>This is a toy project made for aesthetic reasons only (just wanted to code). I made it because I wanted to study a few things about parsers and do something with it. However, there are important weaknesses of this technique:</p>\n\n<ol>\n<li><p>Systems that do not support unicode will not display the text</p></li>\n<li><p>Since unicode variations are hidden characters, the string will always be longer than it looks</p></li>\n<li><p>Interpreters will not run the code because they don't know these chars, it will have to be sanitized</p></li>\n</ol>\n\n<p>The tool is more useful for aesthetic reasons in fact, you can highlight simple snippets on a tweet, for example. I think the most interesting thing here is: The source code and the relationships between it (if you're a beginner/intermediate it might be a good thing to see given its simplicity), and the parser (if you're more advanced in js, good luck with that).</p>\n\n","body_markdown":"---\ntitle: I Created a pure Unicode Code Highlighter :P\npublished: true\ndescription: It is a simple parser and module that modifies unicode variation of string parts to accomplish code highlighting\ntags: #showdev #toyproject #javascript #webdev\n# cover_image: https://direct_url_to_image.jpg\n# Use a ratio of 100:42 for best results.\n# published_at: 2022-11-07 17:59 +0000\n---\n\nThe tool is called \"Unilight\". It is a simple parser and module that modifies unicode variation of string parts.\n\nSo you can highlight anywhere that doesn't accept rich editing, just have a pure string that accepts unicode variations. Works for almost any lang, take a look, this is a simple and pure STRING haha:\n\n.......\n// 𝕋𝕙𝕚𝕤 𝕚𝕤 𝕒𝕟 𝕖𝕩𝕒𝕞𝕡𝕝𝕖\n\n𝗳𝘂𝗻𝗰𝘁𝗶𝗼𝗻 example() {\n  𝗰𝗼𝗻𝘀𝘁 a = \"fizz\";\n  𝗰𝗼𝗻𝘀𝘁 b = \"buzz\";\n  𝗿𝗲𝘁𝘂𝗿𝗻 a+b;\n}\n.......\n\nYou can highlight your code here: \nhttps://felippe-regazio.github.io/unilight/\n\nSource code and documentation here:\nhttps://github.com/felippe-regazio/unilight\n\nWarning:\n\nThis is a toy project made for aesthetic reasons only (just wanted to code). I made it because I wanted to study a few things about parsers and do something with it. However, there are important weaknesses of this technique:\n\n1. Systems that do not support unicode will not display the text\n\n2. Since unicode variations are hidden characters, the string will always be longer than it looks\n\n3. Interpreters will not run the code because they don't know these chars, it will have to be sanitized\n\nThe tool is more useful for aesthetic reasons in fact, you can highlight simple snippets on a tweet, for example. I think the most interesting thing here is: The source code and the relationships between it (if you're a beginner/intermediate it might be a good thing to see given its simplicity), and the parser (if you're more advanced in js, good luck with that).\n","user":{"name":"Felippe Regazio","username":"felipperegazio","twitter_username":"FelippeRegazio","github_username":"felippe-regazio","user_id":59890,"website_url":"https://www.cvkeep.com/cv/felipperegazio","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--1dlAClOG--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/59890/666ef0f9-9a40-4b1b-8c87-f0d3180dbf4d.jpg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--O6CPDy3U--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/59890/666ef0f9-9a40-4b1b-8c87-f0d3180dbf4d.jpg"},"flare_tag":{"name":"showdev","bg_color_hex":"#091b47","text_color_hex":"#b2ffe1"}}