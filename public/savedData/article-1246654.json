{"type_of":"article","id":1246654,"title":"Serverless functions for dummiesâš¡","description":"Intro   If you're thinking that you'll be building applications without a server your...","readable_publish_date":"Nov 7","slug":"serverless-functions-for-dummies-2aae","path":"/ckmonish2000/serverless-functions-for-dummies-2aae","url":"https://dev.to/ckmonish2000/serverless-functions-for-dummies-2aae","comments_count":1,"public_reactions_count":1,"collection_id":null,"published_timestamp":"2022-11-07T15:45:26Z","positive_reactions_count":1,"cover_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--aarIdplB--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bk2bzx7dxwl9jmu46rt0.png","social_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--yZWKA9p0--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bk2bzx7dxwl9jmu46rt0.png","canonical_url":"https://dev.to/ckmonish2000/serverless-functions-for-dummies-2aae","created_at":"2022-11-07T15:45:27Z","edited_at":null,"crossposted_at":null,"published_at":"2022-11-07T15:45:26Z","last_comment_at":"2022-11-07T18:17:16Z","reading_time_minutes":2,"tag_list":"javascript, serverless, aws, node","tags":["javascript","serverless","aws","node"],"body_html":"<h2>\n  <a name=\"intro\" href=\"#intro\">\n  </a>\n  Intro\n</h2>\n\n<p>If you're thinking that you'll be building applications without a server your wrong,</p>\n\n<p>serverless means rather than you managing your servers it would be handled by cloud providers </p>\n\n<p>now you must be thinking then what's the difference between services like Heroku (you don't know what it's because they canceled their free tire a while back), </p>\n\n<p>well with services like Heroku you can choose how you want to structure your app and also note that your app will keep running even if no one is using it.</p>\n\n<p>But with serverless you have to split your logic into individual functions and the code only starts running when you make a request.</p>\n\n<p>There are various options for serverless functions, but the most popular ones are:</p>\n\n<ol>\n<li>AWS Lambda</li>\n<li>Cloudflare Workers</li>\n<li>Firebase Cloud Functions</li>\n</ol>\n\n<p>In this blog post we will be using AWS Lambda,</p>\n\n<p>With netlify functions under the hood it uses AWS lambda, but it removes the complexity of setting up your environment.</p>\n\n<p>FYI, I would suggest using netlify only for small projects.</p>\n\n<h2>\n  <a name=\"setup\" href=\"#setup\">\n  </a>\n  Setup\n</h2>\n\n<ul>\n<li>initialize package.json\n</li>\n</ul>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>yarn init -y\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<ul>\n<li>Add the dependency to run netlify-functions\n</li>\n</ul>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>yarn add netlify-lambda\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<ul>\n<li>Add the following code under the scripts section of package.json\n</li>\n</ul>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>\"scripts\": {\n    \"server\": \"netlify-lambda serve functions\",\n    \"build\": \"netlify-lambda build functions\"\n  }\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<ul>\n<li>Create a file named <code>netlify.toml</code> and add the following in it\n</li>\n</ul>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>[build]\n  functions = \"lambda\"\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<ul>\n<li><p>Now create a folder in the root directory called functions.</p></li>\n<li><p>Create a JS file with a name of your choice (Note: Name of the file will be the API endpoint)</p></li>\n</ul>\n\n<h2>\n  <a name=\"your-first-function\" href=\"#your-first-function\">\n  </a>\n  Your first function\n</h2>\n\n<p>Let's create a simple function that greets you when you request for it.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>exports.handler = async (event, context) =&gt; {\n  const { name } = JSON.parse(event.body)\n\n  return {\n    statusCode: 200,\n    body: `hello ${name}`\n  };\n}\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Let me explain the code above:</p>\n\n<ul>\n<li>We are exporting an async function that takes in 2 arguments events and context.</li>\n</ul>\n\n<p>FYI: [event gives you access to the headers, body and other properties of the request and the context parameter provides methods and properties that gives you info about the function invocation.]</p>\n\n<ul>\n<li>Then you return a object with status code and body of your choice.</li>\n</ul>\n\n<h2>\n  <a name=\"run-your-serverless-app-locally\" href=\"#run-your-serverless-app-locally\">\n  </a>\n  Run your serverless app locally\n</h2>\n\n<p>Run the following command in your terminal and it should start your application of port 9000<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>yarn server\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>and now you can use postman or your app to query the API you just built.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--lXBT0riY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fk3sad6i1rtgpy554zum.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--lXBT0riY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fk3sad6i1rtgpy554zum.png\" alt=\"postman\" loading=\"lazy\" width=\"880\" height=\"452\"></a></p>\n\n<h2>\n  <a name=\"fetch-live-data-from-an-api\" href=\"#fetch-live-data-from-an-api\">\n  </a>\n  Fetch live data from an API\n</h2>\n\n<p>Here's another example, which fetches users list from github and returns data only on a GET request.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>const axios = require('axios').default;\n\nexports.handler = async (event, context) =&gt; {\n  let data = await axios.get(\"https://api.github.com/users\")\n\n  if (event.httpMethod === \"GET\") {\n    if (data) {\n      return {\n        statusCode: 200,\n        body: JSON.stringify(data.data)\n      }\n    } \n  } else {\n    return {\n      statusCode: 404\n    }\n  }\n}\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>you can also deploy the function to netlify <a href=\"https://docs.netlify.com/functions/deploy/\">Here's a link to the docs</a>.</p>\n\n<p>Hope this blog was helpful thanks for your time.</p>\n\n","body_markdown":"## Intro\n\nIf you're thinking that you'll be building applications without a server your wrong,\n\nserverless means rather than you managing your servers it would be handled by cloud providers \n \nnow you must be thinking then what's the difference between services like Heroku (you don't know what it's because they canceled their free tire a while back), \n\nwell with services like Heroku you can choose how you want to structure your app and also note that your app will keep running even if no one is using it.\n\nBut with serverless you have to split your logic into individual functions and the code only starts running when you make a request.\n\nThere are various options for serverless functions, but the most popular ones are:\n\n1. AWS Lambda\n2. Cloudflare Workers\n3. Firebase Cloud Functions\n\nIn this blog post we will be using AWS Lambda,\n\nWith netlify functions under the hood it uses AWS lambda, but it removes the complexity of setting up your environment.\n\nFYI, I would suggest using netlify only for small projects.\n\n## Setup\n\n* initialize package.json \n```\nyarn init -y\n```\n\n* Add the dependency to run netlify-functions\n```\nyarn add netlify-lambda\n```\n\n* Add the following code under the scripts section of package.json\n```\n\"scripts\": {\n    \"server\": \"netlify-lambda serve functions\",\n    \"build\": \"netlify-lambda build functions\"\n  }\n```\n\n- Create a file named `netlify.toml` and add the following in it\n```\n[build]\n  functions = \"lambda\"\n```\n\n* Now create a folder in the root directory called functions.\n\n- Create a JS file with a name of your choice (Note: Name of the file will be the API endpoint)\n\n\n## Your first function\n\nLet's create a simple function that greets you when you request for it.\n\n```\nexports.handler = async (event, context) => {\n  const { name } = JSON.parse(event.body)\n\n  return {\n    statusCode: 200,\n    body: `hello ${name}`\n  };\n}\n```\n\nLet me explain the code above:\n\n- We are exporting an async function that takes in 2 arguments events and context.\n\nFYI: [event gives you access to the headers, body and other properties of the request and the context parameter provides methods and properties that gives you info about the function invocation.]\n\n- Then you return a object with status code and body of your choice.\n\n## Run your serverless app locally\nRun the following command in your terminal and it should start your application of port 9000\n\n```\nyarn server\n```\n\nand now you can use postman or your app to query the API you just built.\n\n\n![postman](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fk3sad6i1rtgpy554zum.png)\n\n\n\n##  Fetch live data from an API\n\nHere's another example, which fetches users list from github and returns data only on a GET request.\n\n```\nconst axios = require('axios').default;\n\nexports.handler = async (event, context) => {\n  let data = await axios.get(\"https://api.github.com/users\")\n\n  if (event.httpMethod === \"GET\") {\n    if (data) {\n      return {\n        statusCode: 200,\n        body: JSON.stringify(data.data)\n      }\n    } \n  } else {\n    return {\n      statusCode: 404\n    }\n  }\n}\n```\n\nyou can also deploy the function to netlify [Here's a link to the docs](https://docs.netlify.com/functions/deploy/).\n\nHope this blog was helpful thanks for your time.\n\n\n\n\n\n\n\n\n\n","user":{"name":"ckmonish2000","username":"ckmonish2000","twitter_username":null,"github_username":"ckmonish2000","user_id":793326,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--0k8bxnO1--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/793326/155bb7a6-ca2d-4de7-9ce8-a5c384cca9f7.jpg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--GPNgGw5w--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/793326/155bb7a6-ca2d-4de7-9ce8-a5c384cca9f7.jpg"}}