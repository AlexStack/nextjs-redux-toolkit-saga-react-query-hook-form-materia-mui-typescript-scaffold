{"type_of":"article","id":1245440,"title":"Integrating payment schemes with stripe in nodejs","description":"Integrating payments to a project  is one of the most important and challenging part and in this...","readable_publish_date":"Nov 6","slug":"integrating-payment-schemes-with-stripe-in-nodejs-1hlb","path":"/documatic/integrating-payment-schemes-with-stripe-in-nodejs-1hlb","url":"https://dev.to/documatic/integrating-payment-schemes-with-stripe-in-nodejs-1hlb","comments_count":0,"public_reactions_count":2,"collection_id":null,"published_timestamp":"2022-11-06T10:22:22Z","positive_reactions_count":2,"cover_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--ruM8xXF4--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9kyfgz0pr58mgw42x9m.png","social_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--oBrkDWqb--/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9kyfgz0pr58mgw42x9m.png","canonical_url":"https://dev.to/documatic/integrating-payment-schemes-with-stripe-in-nodejs-1hlb","created_at":"2022-11-06T10:22:22Z","edited_at":null,"crossposted_at":null,"published_at":"2022-11-06T10:22:22Z","last_comment_at":"2022-11-06T10:22:22Z","reading_time_minutes":4,"tag_list":"stripe, javascript, node, beginners","tags":["stripe","javascript","node","beginners"],"body_html":"<p>Integrating payments to a project  is one of the most important and challenging part and in this article we will be looking at how to integrate payment schemes using Stripe to a nodejs project by building a Tip sending App.</p>\n\n<h2>\n  <a name=\"prerequisites\" href=\"#prerequisites\">\n  </a>\n  Prerequisites\n</h2>\n\n<p>Basic Knowledge  of nodejs,express framework ,callback functions, promises, HTML &amp; tailwind css </p>\n\n<h2>\n  <a name=\"why-use-stripe\" href=\"#why-use-stripe\">\n  </a>\n  Why use stripe\n</h2>\n\n<ul>\n<li>Highly customizable and secured </li>\n<li>Easy to integrate supporting almost all th payment gateways </li>\n<li>Structured and easy to understand documentation </li>\n<li>Sdks available for most of the programming languages like python ,ruby , nodejs , C# ,etc.</li>\n<li>Used by most of the leading companies for payment outsourcing </li>\n</ul>\n\n<h2>\n  <a name=\"dependencies-installation\" href=\"#dependencies-installation\">\n  </a>\n  Dependencies installation\n</h2>\n\n<p>In order to build this tip sending app we need to install the following dependencies via npm<br>\n</p>\n\n<p><code>npm i express hbs stripe body-parser</code><br>\n</p>\n\n<h2>\n  <a name=\"folder-structure\" href=\"#folder-structure\">\n  </a>\n  Folder structure\n</h2>\n\n<p><code>index.js</code> will be in the root directory followed by <code>index.html</code>, <code>pay.js</code> &amp;  <code>success.html</code> under the <code>views</code> folder<br>\n<a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--pNoTN_RV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aa1kaqudxjx3nt8yvq85.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--pNoTN_RV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aa1kaqudxjx3nt8yvq85.png\" alt=\"Folder Sturucture\" loading=\"lazy\" width=\"336\" height=\"239\"></a></p>\n<h2>\n  <a name=\"start-the-server\" href=\"#start-the-server\">\n  </a>\n  Start the server\n</h2>\n\n<p>Inorder to create an express server add the following code to your <code>index.js</code> file<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">express</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">express</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">bodyParser</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">body-parser</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">app</span> <span class=\"o\">=</span> <span class=\"nx\">express</span><span class=\"p\">();</span>\n<span class=\"kd\">const</span> <span class=\"nx\">port</span> <span class=\"o\">=</span> <span class=\"nx\">process</span><span class=\"p\">.</span><span class=\"nx\">env</span><span class=\"p\">.</span><span class=\"nx\">PORT</span> <span class=\"o\">||</span> <span class=\"mi\">5000</span><span class=\"p\">;</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"nx\">port</span><span class=\"p\">,</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">Listening on port 5000...</span><span class=\"dl\">'</span><span class=\"p\">));</span>\n\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Now open the terminal  and use <code>node index.js</code> and your server will be started.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--lpw0Wvmz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwiw9bf5rv4ddfsyitpt.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--lpw0Wvmz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwiw9bf5rv4ddfsyitpt.png\" alt=\"Server is listening \" loading=\"lazy\" width=\"880\" height=\"207\"></a></p>\n\n<h2>\n  <a name=\"create-the-payment-page\" href=\"#create-the-payment-page\">\n  </a>\n  Create the Payment Page\n</h2>\n\n<p>Inside the views folder create a <code>index.html</code>  and add the following code<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight html\"><code><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;html</span> <span class=\"na\">lang=</span><span class=\"s\">\"en\"</span><span class=\"nt\">&gt;</span>\n\n<span class=\"nt\">&lt;head&gt;</span>\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">name=</span><span class=\"s\">\"viewport\"</span> <span class=\"na\">content=</span><span class=\"s\">\"width=device-width, initial-scale=1.0\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"X-UA-Compatible\"</span> <span class=\"na\">content=</span><span class=\"s\">\"ie=edge\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://cdn.tailwindcss.com\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n\n<span class=\"nt\">&lt;body&gt;</span>\n  <span class=\"nt\">&lt;nav</span> <span class=\"na\">class=</span><span class=\"s\">\"bg-blue-400 h-32 flex justify-center\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;h1</span> <span class=\"na\">class=</span><span class=\"s\">\"text-white text-8xl font-mono\"</span><span class=\"nt\">&gt;</span>Send me a Tip<span class=\"nt\">&lt;/h1&gt;</span>\n  <span class=\"nt\">&lt;/nav&gt;</span>\n\n  <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"flex justify-center my-12\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;form</span> <span class=\"na\">action=</span><span class=\"s\">\"/tip\"</span> <span class=\"na\">method=</span><span class=\"s\">\"POST\"</span> <span class=\"na\">class=</span><span class=\"s\">\"flex flex-col w-1/3\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">\"p-3 h-12 border-2 m-4  bg-gray border-zinc-300 rounded outline-none\"</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">name=</span><span class=\"s\">\"name\"</span> <span class=\"na\">placeholder=</span><span class=\"s\">\" Enter your Full Name\"</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">\"p-3 h-12 border-2 m-4  bg-gray border-zinc-300 rounded outline-none\"</span><span class=\"na\">type=</span><span class=\"s\">\"email\"</span>  <span class=\"na\">name=</span><span class=\"s\">\"email\"</span> <span class=\"na\">placeholder=</span><span class=\"s\">\"Enter your Email \"</span><span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;span&gt;</span>$ <span class=\"nt\">&lt;input</span> <span class=\"na\">class=</span><span class=\"s\">\"p-3 h-12 border-2 m-4  bg-gray border-zinc-300 rounded outline-none\"</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span> <span class=\"na\">name=</span><span class=\"s\">\"amount\"</span> <span class=\"na\">placeholder=</span><span class=\"s\">\"Enter tip in USD\"</span><span class=\"nt\">&gt;&lt;/span&gt;</span> \n      <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"pay-element\"</span> <span class=\"na\">class=</span><span class=\"s\">\"bg-blue-400 p-2 h-12 m-2 rounded\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n      <span class=\"nt\">&lt;div</span> <span class=\"na\">id=</span><span class=\"s\">\"pay-errors\"</span> <span class=\"na\">role=</span><span class=\"s\">\"alert\"</span><span class=\"nt\">&gt;&lt;/div&gt;</span>\n      <span class=\"nt\">&lt;button</span> <span class=\"na\">class=</span><span class=\"s\">\"text-white bg-blue-400 p-2 m-2 rounded\"</span><span class=\"nt\">&gt;</span>Send a Tip<span class=\"nt\">&lt;/button&gt;</span>\n    <span class=\"nt\">&lt;/form&gt;</span>\n  <span class=\"nt\">&lt;/div&gt;</span>\n\n<span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://js.stripe.com/v3/\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"pay.js\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Here  you can see that there are two empty <code>div</code> elements having the id of <code>pay-element</code> and <code>pay-errors</code> and there we will collect the card details from the user with the help of stripe card elements. </p>\n\n<p>Now create the <code>pay.js</code> file and add the following code<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">stripe</span> <span class=\"o\">=</span> <span class=\"nx\">Stripe</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">STRIPE PUBLISHER KEY</span><span class=\"dl\">'</span><span class=\"p\">);</span> \n<span class=\"kd\">const</span> <span class=\"nx\">elements</span> <span class=\"o\">=</span> <span class=\"nx\">stripe</span><span class=\"p\">.</span><span class=\"nx\">elements</span><span class=\"p\">();</span>\n\n<span class=\"kd\">var</span> <span class=\"nx\">style</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"na\">base</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">color</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">#00000</span><span class=\"dl\">\"</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"cm\">/* Create a payment Element*/</span> \n<span class=\"kd\">const</span> <span class=\"nx\">payment</span> <span class=\"o\">=</span> <span class=\"nx\">elements</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">card</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">style</span> <span class=\"p\">});</span>\n\n<span class=\"nx\">payment</span><span class=\"p\">.</span><span class=\"nx\">mount</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#pay-element</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">form</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">querySelector</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">form</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"kd\">const</span> <span class=\"nx\">errorEl</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">querySelector</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#pay-errors</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">tokenHandler</span> <span class=\"o\">=</span> <span class=\"nx\">token</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">hiddenInput</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">createElement</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">input</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n  <span class=\"nx\">hiddenInput</span><span class=\"p\">.</span><span class=\"nx\">setAttribute</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">type</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">hidden</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n  <span class=\"nx\">hiddenInput</span><span class=\"p\">.</span><span class=\"nx\">setAttribute</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">name</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">stripeToken</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n  <span class=\"nx\">hiddenInput</span><span class=\"p\">.</span><span class=\"nx\">setAttribute</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">value</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">token</span><span class=\"p\">.</span><span class=\"nx\">id</span><span class=\"p\">);</span>\n  <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">appendChild</span><span class=\"p\">(</span><span class=\"nx\">hiddenInput</span><span class=\"p\">);</span>\n\n  <span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">submit</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"cm\">/*Generate token using form data */</span>\n<span class=\"nx\">form</span><span class=\"p\">.</span><span class=\"nx\">addEventListener</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">submit</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">e</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"nx\">e</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">();</span>\n\n  <span class=\"nx\">stripe</span><span class=\"p\">.</span><span class=\"nx\">createToken</span><span class=\"p\">(</span><span class=\"nx\">payment</span><span class=\"p\">).</span><span class=\"nx\">then</span><span class=\"p\">(</span><span class=\"nx\">res</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"nx\">errorEl</span><span class=\"p\">.</span><span class=\"nx\">textContent</span> <span class=\"o\">=</span> <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">.</span><span class=\"nx\">message</span><span class=\"p\">;</span>\n    <span class=\"k\">else</span> <span class=\"nx\">tokenHandler</span><span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">token</span><span class=\"p\">);</span>\n  <span class=\"p\">})</span>\n<span class=\"p\">})</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Here we are using the Stripe Elements object in order to create a card element and we are passing these card elements to those empty divs.</p>\n\n<p>Now let's create a success page , so that on every successful payment the user will be redirected to a confirmation page. Again in the views folder  Create a <code>success.html</code> and add the following code.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight html\"><code><span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"nt\">&lt;html</span> <span class=\"na\">lang=</span><span class=\"s\">\"en\"</span><span class=\"nt\">&gt;</span>\n\n<span class=\"nt\">&lt;head&gt;</span>\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">charset=</span><span class=\"s\">\"UTF-8\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">name=</span><span class=\"s\">\"viewport\"</span> <span class=\"na\">content=</span><span class=\"s\">\"width=device-width, initial-scale=1.0\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;meta</span> <span class=\"na\">http-equiv=</span><span class=\"s\">\"X-UA-Compatible\"</span> <span class=\"na\">content=</span><span class=\"s\">\"ie=edge\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;script </span><span class=\"na\">src=</span><span class=\"s\">\"https://cdn.tailwindcss.com\"</span><span class=\"nt\">&gt;&lt;/script&gt;</span>\n  <span class=\"nt\">&lt;title&gt;</span>Payment successful<span class=\"nt\">&lt;/title&gt;</span>\n<span class=\"nt\">&lt;/head&gt;</span>\n\n<span class=\"nt\">&lt;body</span> <span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"flex flex-col items-center mt-24 text-black text-4xl\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;h1&gt;</span>Your payment was successful !<span class=\"nt\">&lt;/h1&gt;</span>\n    <span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"/\"</span><span class=\"nt\">&gt;&lt;button</span> <span class=\"na\">class=</span><span class=\"s\">\"bg-gray-400 rounded px-4 m-3\"</span><span class=\"nt\">&gt;</span>Home<span class=\"nt\">&lt;/button&gt;&lt;/a&gt;</span>\n  <span class=\"nt\">&lt;/div&gt;</span>\n<span class=\"nt\">&lt;/body&gt;</span>\n\n<span class=\"nt\">&lt;/html&gt;</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h2>\n  <a name=\"setup-the-handle-bars\" href=\"#setup-the-handle-bars\">\n  </a>\n  Setup the handle bars\n</h2>\n\n<p>In the <code>index.js</code> file add the following code in order to render these html pages<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">var</span> <span class=\"nx\">hbs</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">hbs</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"kd\">set</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">view engine</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">html</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">engine</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">html</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">hbs</span><span class=\"dl\">'</span><span class=\"p\">).</span><span class=\"nx\">__express</span><span class=\"p\">);</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">express</span><span class=\"p\">.</span><span class=\"kd\">static</span><span class=\"p\">(</span><span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"nx\">__dirname</span><span class=\"p\">,</span> <span class=\"dl\">'</span><span class=\"s1\">./views</span><span class=\"dl\">'</span><span class=\"p\">)));</span>\n\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Let's preview our app now using <code>node index.js</code></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TtFLFDaY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no2vul6qf4gytnq97ciz.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--TtFLFDaY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no2vul6qf4gytnq97ciz.png\" alt=\"Preview\" loading=\"lazy\" width=\"880\" height=\"416\"></a></p>\n\n<p>For now the payment will not work as we haven't add the request to our backend </p>\n\n<h2>\n  <a name=\"implementing-the-stripe-payment-request\" href=\"#implementing-the-stripe-payment-request\">\n  </a>\n  Implementing the stripe payment request\n</h2>\n\n<p>Inorder  to implement payments to our app now lets add the stripe module in our server code<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">stripe</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">stripe</span><span class=\"dl\">'</span><span class=\"p\">)(</span><span class=\"dl\">'</span><span class=\"s1\">STRIPE SECRET KEY</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n<span class=\"cm\">/* Create a payment request using stripe */</span>\n<span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">post</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">/tip</span><span class=\"dl\">\"</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">try</span> <span class=\"p\">{</span>\n    <span class=\"nx\">stripe</span><span class=\"p\">.</span><span class=\"nx\">customers</span>\n      <span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">({</span>\n        <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">body</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">,</span>\n        <span class=\"na\">email</span><span class=\"p\">:</span> <span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">body</span><span class=\"p\">.</span><span class=\"nx\">email</span><span class=\"p\">,</span>\n        <span class=\"na\">source</span><span class=\"p\">:</span> <span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">body</span><span class=\"p\">.</span><span class=\"nx\">stripeToken</span>\n      <span class=\"p\">})</span>\n      <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(</span><span class=\"nx\">customer</span> <span class=\"o\">=&gt;</span>\n        <span class=\"nx\">stripe</span><span class=\"p\">.</span><span class=\"nx\">charges</span><span class=\"p\">.</span><span class=\"nx\">create</span><span class=\"p\">({</span>\n          <span class=\"na\">amount</span><span class=\"p\">:</span> <span class=\"nx\">req</span><span class=\"p\">.</span><span class=\"nx\">body</span><span class=\"p\">.</span><span class=\"nx\">amount</span> <span class=\"o\">*</span> <span class=\"mi\">100</span><span class=\"p\">,</span>\n          <span class=\"na\">currency</span><span class=\"p\">:</span> <span class=\"dl\">\"</span><span class=\"s2\">usd</span><span class=\"dl\">\"</span><span class=\"p\">,</span>\n          <span class=\"na\">customer</span><span class=\"p\">:</span> <span class=\"nx\">customer</span><span class=\"p\">.</span><span class=\"nx\">id</span>\n        <span class=\"p\">})</span>\n      <span class=\"p\">)</span>\n      <span class=\"p\">.</span><span class=\"nx\">then</span><span class=\"p\">(()</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">success.html</span><span class=\"dl\">\"</span><span class=\"p\">))</span>\n      <span class=\"p\">.</span><span class=\"k\">catch</span><span class=\"p\">(</span><span class=\"nx\">err</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">));</span>\n  <span class=\"p\">}</span> <span class=\"k\">catch</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">});</span>\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<p>Now finally use <code>node index.js</code> to start your sever and start using the app.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--z5A6ujSX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llmpbae52xzb6i4xhaij.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--z5A6ujSX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llmpbae52xzb6i4xhaij.png\" alt=\"test payment \" loading=\"lazy\" width=\"880\" height=\"664\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--CiZ-wBmj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qq1k97rpztxk3zbg1ho.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--CiZ-wBmj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qq1k97rpztxk3zbg1ho.png\" alt=\"payment success\" loading=\"lazy\" width=\"880\" height=\"525\"></a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qPe7BQzS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mu2v1u2odw24xfi1selb.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--qPe7BQzS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mu2v1u2odw24xfi1selb.png\" alt=\"stripe dashboard\" loading=\"lazy\" width=\"880\" height=\"160\"></a></p>\n\n<h2>\n  <a name=\"extra-tips\" href=\"#extra-tips\">\n  </a>\n  Extra tips\n</h2>\n\n<ul>\n<li>Always use test mode during development </li>\n<li>Make Sure to hide your API keys using environment variables</li>\n<li>Check out the Stripe Documentation <a href=\"'https://stripe.com/docs/'\">here</a>\n</li>\n</ul>\n\n","body_markdown":"Integrating payments to a project  is one of the most important and challenging part and in this article we will be looking at how to integrate payment schemes using Stripe to a nodejs project by building a Tip sending App.\n\n## Prerequisites \nBasic Knowledge  of nodejs,express framework ,callback functions, promises, HTML & tailwind css \n\n## Why use stripe \n- Highly customizable and secured \n- Easy to integrate supporting almost all th payment gateways \n- Structured and easy to understand documentation \n- Sdks available for most of the programming languages like python ,ruby , nodejs , C# ,etc.\n- Used by most of the leading companies for payment outsourcing \n \n\n## Dependencies installation \nIn order to build this tip sending app we need to install the following dependencies via npm \n\n``` npm i express hbs stripe body-parser ```\n\n## Folder structure \n`index.js` will be in the root directory followed by `index.html`, `pay.js` &  `success.html` under the `views` folder\n![Folder Sturucture](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aa1kaqudxjx3nt8yvq85.png)\n\n## Start the server \nInorder to create an express server add the following code to your `index.js` file \n\n```js\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst app = express();\nconst port = process.env.PORT || 5000;\napp.listen(port, () => console.log('Listening on port 5000...'));\n\n```\nNow open the terminal  and use `node index.js` and your server will be started.\n\n\n![Server is listening ](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pwiw9bf5rv4ddfsyitpt.png)\n\n## Create the Payment Page  \nInside the views folder create a `index.html`  and add the following code \n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <script src=\"https://cdn.tailwindcss.com\"></script>\n</head>\n\n<body>\n  <nav class=\"bg-blue-400 h-32 flex justify-center\">\n    <h1 class=\"text-white text-8xl font-mono\">Send me a Tip</h1>\n  </nav>\n\n  <div class=\"flex justify-center my-12\">\n    <form action=\"/tip\" method=\"POST\" class=\"flex flex-col w-1/3\">\n      <input class=\"p-3 h-12 border-2 m-4  bg-gray border-zinc-300 rounded outline-none\" type=\"text\" name=\"name\" placeholder=\" Enter your Full Name\">\n      <input class=\"p-3 h-12 border-2 m-4  bg-gray border-zinc-300 rounded outline-none\"type=\"email\"  name=\"email\" placeholder=\"Enter your Email \">\n     <span>$ <input class=\"p-3 h-12 border-2 m-4  bg-gray border-zinc-300 rounded outline-none\" type=\"text\" name=\"amount\" placeholder=\"Enter tip in USD\"></span> \n      <div id=\"pay-element\" class=\"bg-blue-400 p-2 h-12 m-2 rounded\"></div>\n      <div id=\"pay-errors\" role=\"alert\"></div>\n      <button class=\"text-white bg-blue-400 p-2 m-2 rounded\">Send a Tip</button>\n    </form>\n  </div>\n  \n<script src=\"https://js.stripe.com/v3/\"></script>\n<script src=\"pay.js\"></script>\n</body>\n</html>\n```\nHere  you can see that there are two empty `div` elements having the id of `pay-element` and `pay-errors` and there we will collect the card details from the user with the help of stripe card elements. \n\nNow create the `pay.js` file and add the following code\n```js\nconst stripe = Stripe('STRIPE PUBLISHER KEY'); \nconst elements = stripe.elements();\n\nvar style = {\n  base: {\n    color: \"#00000\"\n  }\n};\n\n/* Create a payment Element*/ \nconst payment = elements.create('card', { style });\n\npayment.mount('#pay-element');\n\nconst form = document.querySelector('form');\nconst errorEl = document.querySelector('#pay-errors');\n\nconst tokenHandler = token => {\n  const hiddenInput = document.createElement('input');\n  hiddenInput.setAttribute('type', 'hidden');\n  hiddenInput.setAttribute('name', 'stripeToken');\n  hiddenInput.setAttribute('value', token.id);\n  form.appendChild(hiddenInput);\n\n  form.submit();\n}\n\n/*Generate token using form data */\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  stripe.createToken(payment).then(res => {\n    if (res.error) errorEl.textContent = res.error.message;\n    else tokenHandler(res.token);\n  })\n})\n``` \n\nHere we are using the Stripe Elements object in order to create a card element and we are passing these card elements to those empty divs.\n\n\nNow let's create a success page , so that on every successful payment the user will be redirected to a confirmation page. Again in the views folder  Create a `success.html` and add the following code.\n\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n  <script src=\"https://cdn.tailwindcss.com\"></script>\n  <title>Payment successful</title>\n</head>\n\n<body >\n  <div class=\"flex flex-col items-center mt-24 text-black text-4xl\">\n  <h1>Your payment was successful !</h1>\n    <a href=\"/\"><button class=\"bg-gray-400 rounded px-4 m-3\">Home</button></a>\n  </div>\n</body>\n\n</html>\n``` \n\n## Setup the handle bars \nIn the `index.js` file add the following code in order to render these html pages \n```js\nvar hbs = require('hbs');\napp.set('view engine', 'html');\napp.engine('html', require('hbs').__express);\napp.use(express.static(path.join(__dirname, './views')));\n\n``` \nLet's preview our app now using `node index.js`\n\n![Preview](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/no2vul6qf4gytnq97ciz.png)\n\nFor now the payment will not work as we haven't add the request to our backend \n\n## Implementing the stripe payment request\nInorder  to implement payments to our app now lets add the stripe module in our server code \n```js\nconst stripe = require('stripe')('STRIPE SECRET KEY');\n/* Create a payment request using stripe */\napp.post(\"/tip\", (req, res) => {\n  try {\n    stripe.customers\n      .create({\n        name: req.body.name,\n        email: req.body.email,\n        source: req.body.stripeToken\n      })\n      .then(customer =>\n        stripe.charges.create({\n          amount: req.body.amount * 100,\n          currency: \"usd\",\n          customer: customer.id\n        })\n      )\n      .then(() => res.render(\"success.html\"))\n      .catch(err => console.log(err));\n  } catch (err) {\n    res.send(err);\n  }\n});\n```\nNow finally use `node index.js ` to start your sever and start using the app.\n\n![test payment ](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/llmpbae52xzb6i4xhaij.png)\n\n![payment success](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6qq1k97rpztxk3zbg1ho.png)\n\n\n![stripe dashboard](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mu2v1u2odw24xfi1selb.png)\n\n## Extra tips \n- Always use test mode during development \n- Make Sure to hide your API keys using environment variables\n- Check out the Stripe Documentation [here]('https://stripe.com/docs/')\n\n","user":{"name":"Documatic","username":"documatic_ai","twitter_username":"documatic_ai","github_username":null,"user_id":943992,"website_url":"https://documatic.com/","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--eYwIAcWo--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/943992/68fdcaed-dd6b-44ed-a79e-cff1223a73b9.jpg","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--KB4TXo_B--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/943992/68fdcaed-dd6b-44ed-a79e-cff1223a73b9.jpg"},"organization":{"name":"Documatic","username":"documatic","slug":"documatic","profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--cQADXp8g--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/6187/90757535-3192-487a-a278-73b0ff7bec09.png","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--KQZQeede--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/6187/90757535-3192-487a-a278-73b0ff7bec09.png"}}